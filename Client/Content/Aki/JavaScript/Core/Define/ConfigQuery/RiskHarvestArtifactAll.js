
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configRiskHarvestArtifactAll=void 0;const byte_buffer_1=require("../../../RunTimeLibs/FlatBuffers/byte-buffer"),Stats_1=require("../../Common/Stats"),ConfigCommon_1=require("../../Config/ConfigCommon"),RiskHarvestArtifact_1=require("../Config/RiskHarvestArtifact"),DB="db_activity.db",FILE="g.割草冒险活动.xlsx",TABLE="RiskHarvestArtifact",COMMAND="select BinData from `RiskHarvestArtifact`",KEY_PREFIX="RiskHarvestArtifactAll",logPair=[["数据库",DB],["文件",FILE],["表名",TABLE],["语句",COMMAND]];let handleId=0;const initStat=Stats_1.Stat.CreateNoFlameGraph("configRiskHarvestArtifactAll.Init"),getConfigListStat=Stats_1.Stat.CreateNoFlameGraph("configRiskHarvestArtifactAll.GetConfigList");exports.configRiskHarvestArtifactAll={Init:()=>{handleId=ConfigCommon_1.ConfigCommon.InitDataStatement(handleId,DB,COMMAND)},GetConfigList:(t=!0)=>{var i;if(i=ConfigCommon_1.ConfigCommon.CheckStatement(handleId,...logPair)){if(t){var o=KEY_PREFIX+")";const e=ConfigCommon_1.ConfigCommon.GetConfig(o);if(e)return e}const e=new Array;for(;;){if(1!==ConfigCommon_1.ConfigCommon.Step(handleId,!1,...logPair))break;var r=void 0;if([i,r]=ConfigCommon_1.ConfigCommon.GetValue(handleId,0,...logPair),!i)return void ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair);r=RiskHarvestArtifact_1.RiskHarvestArtifact.getRootAsRiskHarvestArtifact(new byte_buffer_1.ByteBuffer(new Uint8Array(r.buffer)));e.push(r)}return t&&(o=KEY_PREFIX+")",ConfigCommon_1.ConfigCommon.SaveConfig(o,e,e.length)),ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair),e}}};
//# sourceMappingURL=RiskHarvestArtifactAll.js.map