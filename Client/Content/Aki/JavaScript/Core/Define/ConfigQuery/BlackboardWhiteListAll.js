
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configBlackboardWhiteListAll=void 0;const byte_buffer_1=require("../../../RunTimeLibs/FlatBuffers/byte-buffer"),Stats_1=require("../../Common/Stats"),ConfigCommon_1=require("../../Config/ConfigCommon"),BlackboardWhiteList_1=require("../Config/BlackboardWhiteList"),DB="db_ai.db",FILE="a.AI黑板同步白名单.xlsx",TABLE="BlackboardWhiteList",COMMAND="select BinData from `BlackboardWhiteList`",KEY_PREFIX="BlackboardWhiteListAll",logPair=[["数据库",DB],["文件",FILE],["表名",TABLE],["语句",COMMAND]];let handleId=0;const initStat=Stats_1.Stat.CreateNoFlameGraph("configBlackboardWhiteListAll.Init"),getConfigListStat=Stats_1.Stat.CreateNoFlameGraph("configBlackboardWhiteListAll.GetConfigList");exports.configBlackboardWhiteListAll={Init:()=>{handleId=ConfigCommon_1.ConfigCommon.InitDataStatement(handleId,DB,COMMAND)},GetConfigList:(o=!0)=>{var i;if(i=ConfigCommon_1.ConfigCommon.CheckStatement(handleId,...logPair)){if(o){var t=KEY_PREFIX+")";const n=ConfigCommon_1.ConfigCommon.GetConfig(t);if(n)return n}const n=new Array;for(;;){if(1!==ConfigCommon_1.ConfigCommon.Step(handleId,!1,...logPair))break;var e=void 0;if([i,e]=ConfigCommon_1.ConfigCommon.GetValue(handleId,0,...logPair),!i)return void ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair);e=BlackboardWhiteList_1.BlackboardWhiteList.getRootAsBlackboardWhiteList(new byte_buffer_1.ByteBuffer(new Uint8Array(e.buffer)));n.push(e)}return o&&(t=KEY_PREFIX+")",ConfigCommon_1.ConfigCommon.SaveConfig(t,n,n.length)),ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair),n}}};
//# sourceMappingURL=BlackboardWhiteListAll.js.map