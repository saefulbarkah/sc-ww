
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configMowTowerBuffReAll=void 0;const byte_buffer_1=require("../../../RunTimeLibs/FlatBuffers/byte-buffer"),Stats_1=require("../../Common/Stats"),ConfigCommon_1=require("../../Config/ConfigCommon"),MowTowerBuffRe_1=require("../Config/MowTowerBuffRe"),DB="db_activity.db",FILE="g.割草爬塔活动.xlsx",TABLE="MowTowerBuffRe",COMMAND="select BinData from `MowTowerBuffRe`",KEY_PREFIX="MowTowerBuffReAll",logPair=[["数据库",DB],["文件",FILE],["表名",TABLE],["语句",COMMAND]];let handleId=0;const initStat=Stats_1.Stat.CreateNoFlameGraph("configMowTowerBuffReAll.Init"),getConfigListStat=Stats_1.Stat.CreateNoFlameGraph("configMowTowerBuffReAll.GetConfigList");exports.configMowTowerBuffReAll={Init:()=>{handleId=ConfigCommon_1.ConfigCommon.InitDataStatement(handleId,DB,COMMAND)},GetConfigList:(o=!0)=>{var e;if(e=ConfigCommon_1.ConfigCommon.CheckStatement(handleId,...logPair)){if(o){var n=KEY_PREFIX+")";const f=ConfigCommon_1.ConfigCommon.GetConfig(n);if(f)return f}const f=new Array;for(;;){if(1!==ConfigCommon_1.ConfigCommon.Step(handleId,!1,...logPair))break;var i=void 0;if([e,i]=ConfigCommon_1.ConfigCommon.GetValue(handleId,0,...logPair),!e)return void ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair);i=MowTowerBuffRe_1.MowTowerBuffRe.getRootAsMowTowerBuffRe(new byte_buffer_1.ByteBuffer(new Uint8Array(i.buffer)));f.push(i)}return o&&(n=KEY_PREFIX+")",ConfigCommon_1.ConfigCommon.SaveConfig(n,f,f.length)),ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair),f}}};
//# sourceMappingURL=MowTowerBuffReAll.js.map