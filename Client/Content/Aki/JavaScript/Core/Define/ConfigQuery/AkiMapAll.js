
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configAkiMapAll=void 0;const byte_buffer_1=require("../../../RunTimeLibs/FlatBuffers/byte-buffer"),Stats_1=require("../../Common/Stats"),ConfigCommon_1=require("../../Config/ConfigCommon"),AkiMap_1=require("../Config/AkiMap"),DB="db_map.db",FILE="d.地图.xlsx",TABLE="AkiMap",COMMAND="select BinData from `AkiMap`",KEY_PREFIX="AkiMapAll",logPair=[["数据库",DB],["文件",FILE],["表名",TABLE],["语句",COMMAND]];let handleId=0;const initStat=Stats_1.Stat.CreateNoFlameGraph("configAkiMapAll.Init"),getConfigListStat=Stats_1.Stat.CreateNoFlameGraph("configAkiMapAll.GetConfigList");exports.configAkiMapAll={Init:()=>{handleId=ConfigCommon_1.ConfigCommon.InitDataStatement(handleId,DB,COMMAND)},GetConfigList:(o=!0)=>{var i;if(i=ConfigCommon_1.ConfigCommon.CheckStatement(handleId,...logPair)){if(o){var n=KEY_PREFIX+")";const t=ConfigCommon_1.ConfigCommon.GetConfig(n);if(t)return t}const t=new Array;for(;;){if(1!==ConfigCommon_1.ConfigCommon.Step(handleId,!1,...logPair))break;var e=void 0;if([i,e]=ConfigCommon_1.ConfigCommon.GetValue(handleId,0,...logPair),!i)return void ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair);e=AkiMap_1.AkiMap.getRootAsAkiMap(new byte_buffer_1.ByteBuffer(new Uint8Array(e.buffer)));t.push(e)}return o&&(n=KEY_PREFIX+")",ConfigCommon_1.ConfigCommon.SaveConfig(n,t,t.length)),ConfigCommon_1.ConfigCommon.Reset(handleId,...logPair),t}}};
//# sourceMappingURL=AkiMapAll.js.map