
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CsvMapFieldResolver=exports.CsvLoader=exports.GlobalCsv=exports.createCsvField=exports.parseCsvValue=exports.csvCellTypeConfig=void 0;const BranchDefine_1=require("../BranchDefine"),CsvParser_1=require("../Misc/CsvParser"),File_1=require("../Misc/File"),Log_1=require("../Misc/Log"),Util_1=require("../Misc/Util");function parseCsvValue(e,r){return exports.csvCellTypeConfig[r].Parse(e)}exports.csvCellTypeConfig={Int:{Default:0,Parse:e=>parseInt(e,10),Desc:"整形"},String:{Default:"",Parse:e=>e,Desc:"字符串"},Boolean:{Default:!1,Parse:e=>Boolean(e),Desc:"布尔型"},Float:{Default:0,Parse:e=>parseFloat(e),Desc:"浮点型"},UiResource:{Default:"",Parse:e=>e,Desc:"UI资源"}},exports.parseCsvValue=parseCsvValue;const customExportType=["C","S","CS","","@Tag","@Version"],customValueType=["Int","String","Long","Long54","Bool","Float","Array<Int>","Array<String>","Array<Float>","Array<Long>","Array<Long54>","Array<IntArray>","Map<Int,Int>",""],customBoolType=["1","0",""],valueTypeByRenderType={[0]:"String",1:"Bool",2:"String",3:"String",4:"String",8:"String",12:"String",6:"String",9:"String",10:"Float",11:"String",13:"String",14:"String",15:"String",16:"String",17:"Int",18:"String",19:"Int",20:"Long",21:"String",22:"String",5:"String",23:"String",24:"String",25:"String",26:"String",27:"String",28:"String",29:"String",30:"String",32:"String",33:"Int",34:"String",35:"String",36:"Array<Int>",37:"Array<String>",38:"String",39:"String",40:"Int",41:"String",42:"Int",43:"Int",44:"Int",45:"String",46:"Int",47:"String",48:"Int",49:"Int",31:"String",50:"Int",51:"Int",52:"String",53:"String",7:"String",54:"Int",55:"Array<String>",56:"Array<String>",57:"String",58:"String",59:"String",60:"String",61:"Array<Int>",62:"String",63:"Int",64:"Array<Int>",65:"Map<Int,Int>",66:"Array<IntArray>",67:"Array<Int>",68:"Int",69:"Int",70:"String",71:"String",72:"Int",73:"Int",74:"Int",75:"Int",76:"String",77:"Int"},csvFieldValidValues={ExportType:{CnName:"客户端/服务端 使用",Range:customExportType},Name:{CnName:"字段名"},Type:{CnName:"字段数据类型",Range:customValueType},Filter:{CnName:"该字段是否用于条件筛选",Range:customBoolType},Localization:{CnName:"是否导出多语言",Range:customBoolType},Condition:{CnName:"条件检查"},Default:{CnName:"默认值"},CnName:{CnName:"#"},RenderType:{CnName:"",IgnoreSerialize:!0}},MAX_HEADER_COUNT=10,depotCsvCache=new Map;function createDefaultCsvFiledEx(){return{ExportType:"C",Name:"default",Type:"String",Filter:"0",Localization:"0",Condition:"",Default:"",CnName:"未知",RenderType:22,Tip:"",CreateType:"prevRow"}}function createCsvField(e){var r=createDefaultCsvFiledEx();return Object.assign(r,e),r}exports.createCsvField=createCsvField;class GlobalCsv{constructor(){this.Name="",this.FieldTypes=[],this.Rows=[],this.Tables=[],this.Branch="development",this.Segment=[0,0],this.OtherBranchCsv=[],this.Xil=void 0}get FilterFields(){return this.Xil||(this.Xil=this.FieldTypes.filter(e=>"1"===e.Filter)),this.Xil}Bind(e){Object.assign(this,e)}Yil(e,r){for(const t of this.FieldTypes)if(e[t.Name]!==r[t.Name])return!1;return!0}zil(r,t,i){let n=0;var a=Array.from(t.keys());let s=!1;for(let e=0;e<a.length-1;e++){var o=a[e],l=a[e+1],h=t.get(o),c=t.get(l);1!==h.length||1!==c.length||this.Yil(h[0],c[0])||(n++,i.push(`【${o}】和【${l}】存在重复索引的行内容不一致【${r}】`),s=!0)}if(!s)for(const e of a)1<t.get(e).length&&(n++,i.push(`【${e}】存在重复的索引【${r}】`));return n}Jil(e){const i=new Map;var r=[];for(const a of this.GetAllRowsData())r.push(...a.Rows);r.forEach(r=>{var e=this.FilterFields.map(e=>e.CnName+": "+r[e.Name]).join(", ");let t=i.get(e);t||(t=[],i.set(e,t)),t.push(r)});let t=0;for(const s of i.keys()){var n=i.get(s);if(!(n.length<=1)){const o=new Map;n.forEach(e=>{var r=e.Branch;let t=o.get(r);t||(t=[],o.set(e.Branch,t)),t.push(e)}),1<o.size?t+=this.zil(s,o,e):(t++,e.push(`【${Array.from(new Set(n.map(e=>e.Branch))).join(", ")}】存在重复的索引【${s}】`))}}return t}BaseCheck(e){var r=0;return r+=this.Jil(e)}Check(e){return 0}CreateDefault(e){return e}GetAllRowsData(){var e=[];e.push({Branch:this.Branch,Rows:this.Rows});for(const r of[...this.OtherBranchCsv,...this.HigherBranchCsv??[]])(0,BranchDefine_1.isReachBranch)(r.Branch)&&e.push({Branch:r.Branch,Rows:r.Rows});return e}}exports.GlobalCsv=GlobalCsv;class CsvLoader{constructor(e,r){this.bkn=[],this.T=new Map,this.FieldTypes=r.slice(),this.Name=e,r.forEach(e=>{this.T.set(e.Name,e)}),this.v(),this.g()}v(){let r=0;if(this.FieldTypes.forEach(e=>{"1"===e.Filter&&r++}),r<=0)throw new Error(`[${this.Name}]: No index key (field [filter] = 1)`)}g(){this.FieldTypes.forEach(e=>{var r=valueTypeByRenderType[e.RenderType];if(r!==e.Type)throw new Error(`[${this.Name}]: [${e.Name}] Type [${e.Type}] not match renderType [${e.RenderType}][${r}]`)})}I(r,e){var t=csvFieldValidValues[e];for(let e=1;e<r.length;e++)if(t.Range){var i=r[e];if(!t.Range.includes(i))throw new Error(`CSV file [${this.Name}] head field invalid, [${t.CnName}], expect of [${t.Range.join(",")}], actual[${i}]`)}}L(e,r){const t=[];var i=csvFieldValidValues[r];t.push(i.CnName),this.FieldTypes.forEach(e=>{t.push(e[r])}),e.Write(t)}M(r){for(let e=0;e<MAX_HEADER_COUNT;e++){var t,i=r.ReadNext();if(!i)throw new Error(`CSV [${this.Name}] header row count [${r.TotalLine}] not enough`);if("#"===i[0])return;if(1===e&&(this.bkn=i),2===e)for(let e=0;e<i.length;e++){var n=[...i[e].matchAll(/】(?:[^\n]*)/g)];0<n.length&&(n=n[n.length-1][0].replace(/】/,""),i[e]=n)}for(const a in csvFieldValidValues)csvFieldValidValues[a].IgnoreSerialize||(t=csvFieldValidValues[a],i[0]===t.CnName&&this.I(i,a))}}GetCsvFieldConfig(e){return this.T.get(e)}F(e){var r=e.ReadNext();if(!r)throw new Error(`CSV [${this.Name}] row count [${e.TotalLine}] not enough`);if(!r[0]?.startsWith("#")){if(""!==r.toString()&&r.length<this.bkn.length)throw new Error(`CSV [${this.Name}] 行解析失败，行内容 【${r.toString()}】`);var t={};for(let e=1;e<r.length;e++){var i=this.bkn[e],n=this.T.get(i);if(n){var a=r[e];switch(n.Type){case"Int":""===r[e]?t[n.Name]=void 0:t[n.Name]=parseInt(a,10);break;case"Long":case"Long54":t[n.Name]=BigInt(a);break;case"String":t[n.Name]=a;break;case"Bool":t[n.Name]=(0,Util_1.parseBool)(a);break;case"Float":t[n.Name]=parseFloat(a);break;case"Array<Int>":t[n.Name]=(0,Util_1.parseCsvIntArray)(a);break;case"Array<String>":t[n.Name]=(0,Util_1.parseCsvStringArray)(a);break;case"Array<Float>":t[n.Name]=(0,Util_1.parseCsvFloatArray)(a);break;case"Array<Long>":case"Array<Long54>":t[n.Name]=(0,Util_1.parseCsvIntArray)(a);break;case"Array<IntArray>":t[n.Name]=(0,Util_1.parseCsvInt2Array)(a);break;case"Map<Int,Int>":t[n.Name]=a}}}return t}}P(e){for(var r=[];!e.IsEnd;){var t=this.F(e);t&&r.push(t)}return r}O(e){for(const r in csvFieldValidValues)csvFieldValidValues[r].IgnoreSerialize||this.L(e,r)}k(e,i){const n=[];n.push(""),this.FieldTypes.forEach(e=>{var r=i[e.Name];if(void 0===r)n.push("");else if("Array<String>"===e.Type||"Array<Int>"===e.Type||"Array<Float>"===e.Type||"Array<Long>"===e.Type)n.push(`[${r}]`);else if("Array<IntArray>"===e.Type&&(0,Util_1.isNumber2dArray)(r)){const t=[];r.forEach(e=>{t.push([e])});e=JSON.stringify(t);n.push(e)}else"string"==typeof r?n.push(r):n.push(r.toString())}),e.Write(n)}q(r,e){e.forEach(e=>{this.k(r,e)})}Parse(e){e=new CsvParser_1.LineReader(e);return e.IsValid?(this.M(e),this.P(e)):[]}ParseOne(e){e=new CsvParser_1.LineReader(e);if(e.IsValid)return this.M(e),this.F(e)}Stringify(e){var r=new CsvParser_1.LineWriter;return this.O(r),this.q(r,e),r.Gen()}StringifyOne(e){var r=new CsvParser_1.LineWriter;return this.O(r),this.k(r,e),r.Gen()}Load(r){var e=(0,File_1.readFile)(r);if(e)try{return(0,Log_1.log)(`Load csv: [${r}]`),this.Parse(e)}catch(e){if(e instanceof Error)throw new Error(`CSV [${r}] 解析失败，错误如下:
`+e.message)}return[]}TryLoad(r){try{var e=(0,File_1.readFile)(r);return e?this.Parse(e):[]}catch(e){if(e instanceof Error)throw new Error(`CSV [${r}] 解析失败，错误如下:
`+e.message)}return[]}LoadOne(e){e=(0,File_1.readFile)(e);if(e)return this.ParseOne(e)}Save(e,r){(0,File_1.writeFile)(r,this.Stringify(e))}SaveOne(e,r){(0,File_1.writeFile)(r,this.StringifyOne(e))}GetHigherBranchCsvPath(e,r){return(0,File_1.getSavePath)(`Editor/c.Csv/${e}/${r}.csv`).replace("\\","/")}QBl(r,e){var t,i=new Map,e="p4 files "+e.map(e=>`//aki/development/Source/Config/Raw/Tables/k.可视化编辑/c.Csv/${r}/${e}.csv`).join(" "),[e,n]=(0,Util_1.exec)(e);if(e)for(const a of n.split("\n"))a.endsWith("no such file(s).")||/(?<m>delete|move\/delete) change \d+/.test(a)||([t]=a.split(" - "),[t]=t.split("#"),t=t.split("/").pop().replace(".csv",""),i.set(t,!0));return i}RequestDepotCsv(e,r){if(!(0,Util_1.isUePlatform)())return"";r=(0,File_1.getDirName)((0,File_1.getDir)(r));let t=e;var i=`//aki/${t=(0,BranchDefine_1.isPlannedBranch)(e)?"development":t}/Source/Config/Raw/Tables/k.可视化编辑/c.Csv/${r}/${e}.csv`;return depotCsvCache.has(i)?depotCsvCache.get(i):(e=`p4 print -q -o ${r=this.GetHigherBranchCsvPath(r,e)} `+i,(0,Util_1.exec)(e),depotCsvCache.set(i,r),r)}V(e){return e.replace(/\\/g,"/").split("/").pop().replace(".csv","")}qkn(e,r){e.forEach(e=>{e.Branch=r})}GetRowIdSegment(e){var r=((0,BranchDefine_1.isPlannedBranch)(e)?(0,BranchDefine_1.getPlannedBranchSegment):(0,BranchDefine_1.getBranchSegment))(e);if(r)return r;throw new Error(`[${e}] id segment not found`)}j(e){var r=this.V(e),t=(0,File_1.getDir)(e),e=(0,BranchDefine_1.getAllBranches)();if(!e)return[];var i,n=[];for(const a of e)a!==r&&(0,BranchDefine_1.isReachBranch)(a)&&(i=`${t}/${a}.csv`,i=this.Load(i),this.qkn(i,a),n.push({Name:a,FieldTypes:this.FieldTypes,Rows:i,Tables:[],Branch:a,Segment:this.GetRowIdSegment(a),OtherBranchCsv:[]}));return n}LoadCsv(e){var r=this.V(e),t=this.Load(e);return this.qkn(t,r),{Name:this.Name,FieldTypes:this.FieldTypes,Rows:t,Tables:[],Branch:r,Segment:this.GetRowIdSegment(r),OtherBranchCsv:this.j(e)}}LoadHigherBranchCsv(e,r){if(!r.HigherBranchCsv){var t=(0,BranchDefine_1.getAllBranches)();if(t&&!(r.Tables.length<=0)){var i,n=e+"/"+r.Tables[0].TablePath,e=(r.HigherBranchCsv=[],t.filter(e=>(0,BranchDefine_1.isHigherBranch)(e,r.Branch))),a=this.QBl(r.Tables[0].TablePath,e);for(const s of e){let e=[];a.get(s)&&(i=n+`/${s}.csv`,i=this.RequestDepotCsv(s,i),e=this.TryLoad(i)),this.qkn(e,s),r.HigherBranchCsv.push({Name:s,FieldTypes:this.FieldTypes,Rows:e,Tables:[],Branch:s,Segment:this.GetRowIdSegment(s),OtherBranchCsv:[]})}}}}SaveCsv(e,r){this.Save(e.Rows,r)}OnModifyRow(e,r){}}exports.CsvLoader=CsvLoader;class CsvMapFieldResolver{static ResolveNumberMapField(e){return e?e.slice(1,-1).split(",").map(e=>{var[e,r]=e.split(":").map(Number);return{Key:e,Value:r}}):[]}}exports.CsvMapFieldResolver=CsvMapFieldResolver;
//# sourceMappingURL=CsvLoader.js.map