
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LevelEventMoveWithSpline=void 0;const UE=require("ue"),Log_1=require("../../../Core/Common/Log"),Protocol_1=require("../../../Core/Define/Net/Protocol"),QueryTypeDefine_1=require("../../../Core/Define/QueryTypeDefine"),Net_1=require("../../../Core/Net/Net"),ResourceSystem_1=require("../../../Core/Resource/ResourceSystem"),TimerSystem_1=require("../../../Core/Timer/TimerSystem"),CurveFloatHandle_1=require("../../../Core/Utils/CurveFloatHandle"),Rotator_1=require("../../../Core/Utils/Math/Rotator"),Vector_1=require("../../../Core/Utils/Math/Vector"),MathUtils_1=require("../../../Core/Utils/MathUtils"),TraceElementCommon_1=require("../../../Core/Utils/TraceElementCommon"),IAction_1=require("../../../UniverseEditor/Interface/IAction"),IComponent_1=require("../../../UniverseEditor/Interface/IComponent"),EventDefine_1=require("../../Common/Event/EventDefine"),EventSystem_1=require("../../Common/Event/EventSystem"),ControllerHolder_1=require("../../Manager/ControllerHolder"),ModelManager_1=require("../../Manager/ModelManager"),CharacterUnifiedStateTypes_1=require("../../NewWorld/Character/Common/Component/Abilities/CharacterUnifiedStateTypes"),SceneItemMoveComponent_1=require("../../NewWorld/SceneItem/Common/Component/SceneItemMoveComponent"),LevelGameplayActionsDefine_1=require("../LevelGameplayActionsDefine"),LevelGeneralBase_1=require("../LevelGeneralBase"),LevelGeneralContextDefine_1=require("../LevelGeneralContextDefine"),CHARACTER_TRACE_DISTANCE=50;class MoveWithSplineTaskBase{constructor(e){this.EntityHandle=e,this.OnRemoveEntity=(e,t)=>{Log_1.Log.CheckWarn()&&Log_1.Log.Warn("LevelEvent",39,"[MoveWithSplineTask]检测到移动实体被销毁，直接结束Task"),this.EndTask(!0)},this.OnClearWorld=()=>{Log_1.Log.CheckWarn()&&Log_1.Log.Warn("LevelEvent",39,"[MoveWithSplineTask]检测到世界清理，直接结束Task"),this.EndTask(!0)}}IsValid(){return LevelEventMoveWithSpline.MoveWithSplineTasks.has(this)}StartTask(){Log_1.Log.CheckInfo()&&Log_1.Log.Info("LevelEvent",39,"[MoveWithSplineTask] StartTask",["EntityId",this.EntityHandle.Id]),LevelEventMoveWithSpline.MoveWithSplineTasks.add(this),this.OnStartTask()}EndTask(e){Log_1.Log.CheckInfo()&&Log_1.Log.Info("LevelEvent",39,"[MoveWithSplineTask] EndTask",["Success",e],["EntityId",this.EntityHandle.Id]),this.OnEndTask(e),LevelEventMoveWithSpline.MoveWithSplineTasks.delete(this)}OnStartTask(){this.EntityHandle&&!EventSystem_1.EventSystem.HasWithTarget(this.EntityHandle,EventDefine_1.EEventName.RemoveEntity,this.OnRemoveEntity)&&EventSystem_1.EventSystem.AddWithTarget(this.EntityHandle,EventDefine_1.EEventName.RemoveEntity,this.OnRemoveEntity),EventSystem_1.EventSystem.Has(EventDefine_1.EEventName.ClearWorld,this.OnClearWorld)||EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.ClearWorld,this.OnClearWorld)}OnEndTask(e){this.EntityHandle&&EventSystem_1.EventSystem.HasWithTarget(this.EntityHandle,EventDefine_1.EEventName.RemoveEntity,this.OnRemoveEntity)&&EventSystem_1.EventSystem.RemoveWithTarget(this.EntityHandle,EventDefine_1.EEventName.RemoveEntity,this.OnRemoveEntity),EventSystem_1.EventSystem.Has(EventDefine_1.EEventName.ClearWorld,this.OnClearWorld)&&EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.ClearWorld,this.OnClearWorld)}}class SceneItemMoveWithSplineTask extends MoveWithSplineTaskBase{constructor(e,t,i){super(e),this.Spline=t,this.SplineData=i,this.SV_=-1,this.MV_=-1,this.nx=void 0,this.gLe=void 0,this.MCl=!1,this.ecn=!1,this.tcn=!1,this.SCl=void 0,this.yCl=void 0,this.ECl=!1,this.JHr=!1,this.ICl=void 0,this.TCl=void 0,this.enh=void 0,this.B7=void 0,this.Kd_=!1,this.$d_=e=>{if(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",42,"[SceneItemMoveWithSplineTask] OnArrivePointIndexCallback",["EntityId",this.EntityHandle.Entity?.Id],["index",e]),!this.Kd_){if(this.Kd_=!0,this.SplineData.Type===IComponent_1.ESplineType.ContinuesVariableSpeedMovement){e=this.SplineData.Points[e].ConditionActions;if(e)for(const t of e)ControllerHolder_1.ControllerHolder.LevelGeneralController.CheckConditionNew(t.Condition,void 0)&&TimerSystem_1.TimerSystem.Next(()=>{this.nx&&t?.Action&&ControllerHolder_1.ControllerHolder.LevelGeneralController.ExecuteActionsNew(t.Action,LevelGeneralContextDefine_1.GeneralContext.Copy(this.nx))})}this.Kd_=!1}}}static Create(e,t,i,s,h,n,o){e=new SceneItemMoveWithSplineTask(e,t,i);return e.gLe=s,e.JHr=h,e.B7=n,e.StartTask(),e.nx=o,e}OnStartTask(){super.OnStartTask(),this.LCl(),this.ODe()}OnEndTask(e){if(super.OnEndTask(e),this.enh)for(var[,t]of this.enh)t!==ResourceSystem_1.ResourceSystem.InvalidId&&ResourceSystem_1.ResourceSystem.CancelAsyncLoad(t);this.enh?.clear(),this.B7?.(e)}ODe(){if(this.EntityHandle?.Valid){var e=this.EntityHandle.Entity.GetComponent(126);if(e?.Valid){var t,i,s,h=this.SplineData.Type===IComponent_1.ESplineType.ContinuesVariableSpeedMovement?0:this.SplineData.Points[0].MoveSpeed;if(this.ICl){this.enh=new Map,this.TCl=new Map;for(const n of this.ICl)this.TCl.has(n)||(t=ResourceSystem_1.ResourceSystem.LoadAsync(n,UE.CurveFloat,e=>{this.TCl?.set(n,e),this.enh?.delete(n),this.ECl&&this.TCl?.size===this.ICl?.size&&this.BDe()}))===ResourceSystem_1.ResourceSystem.InvalidId||this.TCl?.has(n)||this.enh.set(n,t)}0<h?(i=Vector_1.Vector.Create(this.Spline.D_GetLocationAtSplinePoint(0,1)),s=Vector_1.Vector.Create(this.EntityHandle.Entity.GetComponent(1).ActorLocationProxy),s=Vector_1.Vector.Dist(i,s),e.AddStopMoveCallback(()=>{this.ECl=!0,this.ECl&&this.TCl?.size===this.ICl?.size&&this.BDe()}),e.AddMoveTarget(new SceneItemMoveComponent_1.MoveTarget(i,s/h))):(this.ECl=!0,this.ECl&&this.TCl?.size===this.ICl?.size&&this.BDe())}else Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",31,"[SceneItemMoveWithSplineTask.MoveAlongPath] 实体没有SceneItemMoveComponent",["EntityId",this.EntityHandle.Entity?.Id]),this.EndTask(!1)}else Log_1.Log.CheckError()&&Log_1.Log.Error("Level",39,"[SceneItemMoveWithSplineTask.MoveAlongPath 实体不存在"),this.EndTask(!1)}BDe(){var e,t;this.enh&&0<this.enh.size||((e=this.EntityHandle.Entity.GetComponent(126))?.Valid?(t=this.tnh())?(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("SceneItem",39,"[SceneItemMoveWithSplineTask.StartPatrol] 样条移动开始",["EntityId",this.EntityHandle.Entity?.Id],["PbDataId]",this.EntityHandle.PbDataId],["StartIndex",this.SV_],["EndIndex",this.MV_],["MoveParam",t]),e.StartPatrolAtConstantTime(t,()=>{this.EndTask(!0)},this.JHr)):(Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",39,"[SceneItemMoveWithSplineTask.StartPatrol] 解析SceneItemSplineMoveParam失败",["EntityId",this.EntityHandle.Entity?.Id]),this.EndTask(!1)):(Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",31,"[SceneItemMoveWithSplineTask.StartPatrol] 实体没有SceneItemMoveComponent",["EntityId",this.EntityHandle.Entity?.Id]),this.EndTask(!1)))}tnh(){var i=new SceneItemMoveComponent_1.SceneItemSplineMoveAtConstantTimeParam(this.Spline),h=(i.IsRepeat=this.MCl,i.IsCycle=this.ecn,i.StartTimeOffset=0,this.Spline);let n=h.GetSplineLength(),s=0;var e,o=this.EntityHandle.Entity.GetComponent(126);if(o.IsMoving&&o.StopMove(),o?.RemoveAllOnArrivePointCallbacks(),o?.AddOnArrivePointCallback(this.$d_),-1!==this.SV_&&(i.StartDis=h.GetDistanceAlongSplineAtSplinePoint(this.SV_)),-1!==this.MV_&&(i.EndDis=h.GetDistanceAlongSplineAtSplinePoint(this.MV_)),i.IsKeepLookAt=this.tcn,this.MCl&&this.ecn&&!h.IsClosedLoop()&&(o=h.GetNumberOfSplinePoints()-1,e=h.D_GetLocationAtSplinePoint(0,0),r=h.D_GetLeaveTangentAtSplinePoint(o,0),v=h.D_GetLeaveTangentAtSplinePoint(0,0),e=e.op_Subtraction(r).GetSafeNormal(MathUtils_1.MathUtils.SmallNumber),r=h.D_GetArriveTangentAtSplinePoint(o,0),a=e,h.SetClosedLoop(!0),h.D_SetTangentsAtSplinePoint(0,e,v,0),h.D_SetTangentsAtSplinePoint(o,r,a,0),e=h.GetSplineLength(),s=e-n,n=e),this.SCl){if(0===this.SCl.Type)return i.TimeSec=Math.abs(n/this.SCl.Speed),i;if(1!==this.SCl.Type)return;{let e=this.SCl.Time;var r,a,v=this.TCl?.get(this.SCl.TimeDisCurve??"");let t=v;return this.MCl&&this.ecn&&s&&(o=(n-s)/e,r=s/o,e+=r,v)&&r&&((a=new CurveFloatHandle_1.CurveFloatHandle(v)).MapRangeClampedTimeAndValue([0,e/(e-r)],[0,1],[0,n/(n-s)],[0,1]),a.AddKey(1,1,1),t=a.ToUeCurveFloat()),i.TimeSec=e,i.TimeDisCurve=t,i}}if(this.yCl){var l=new CurveFloatHandle_1.CurveFloatHandle;let s=0;for(let i=0;i<=h.GetNumberOfSplineSegments();i++){var _=i<this.yCl.length?this.yCl[i]:void 0,S=h.GetDistanceAlongSplineAtSplinePoint(i),c=_?.WaitTime??0;let e=0;if(i<h.GetNumberOfSplineSegments()&&(m=h.GetDistanceAlongSplineAtSplinePoint(i+1),e=m-S),!_||!e&&!c){l.AddKey(s,S,1);break}if(l.AddKey(s,S),!e){l.AddKey(s+c,S,1),s+=c;break}c&&l.AddKey(s+c,S);let t=0;if(0===_.Type)t=_.Speed?Math.abs(e/_.Speed):0;else if(1===_.Type){t=_.Time;var m=this.TCl?.get(_.TimeDisCurve??"");if(m){_=new CurveFloatHandle_1.CurveFloatHandle(m);_.MapRangeClampedTimeAndValue([0,1],[s+c,s+c+t],[0,1],[S,S+e]);for(const p of _.FloatCurveKeys)l.AddKey(p)}}l.AddKey(s+c+t,S+e,1),s+=c+t}return l.MapRangeClampedTimeAndValue([0,s],[0,1],[0,n],[0,1]),i.TimeSec=s,i.TimeDisCurve=l.ToUeCurveFloat(),i}}LCl(){var e=this.Spline.GetNumberOfSplinePoints();if(void 0!==this.gLe.StartPointIndex&&(this.SV_=MathUtils_1.MathUtils.Clamp(this.gLe.StartPointIndex,0,e-1)),void 0!==this.gLe.EndPointIndex&&(this.MV_=MathUtils_1.MathUtils.Clamp(this.gLe.EndPointIndex,0,e-1)),this.tcn=!!this.gLe?.IsLookDir,this.ICl?this.ICl.clear():this.ICl=new Set,this.SplineData.Type===IComponent_1.ESplineType.ContinuesVariableSpeedMovement)if(this.SplineData.EntireTimePathConfig)this.SCl={Type:1,Time:this.SplineData.EntireTimePathConfig.TotalTime,TimeDisCurve:this.SplineData.EntireTimePathConfig.TimePathCurve},this.SplineData.EntireTimePathConfig.TimePathCurve&&this.ICl.add(this.SplineData.EntireTimePathConfig.TimePathCurve),this.yCl=void 0;else{this.SCl=void 0,this.yCl=[];for(let e=0;e<this.SplineData.Points.length;e++){var t=this.SplineData.Points[e];t.IntervalTimePathConfig?(this.yCl.push({Type:1,Time:t.IntervalTimePathConfig.TotalTime,TimeDisCurve:t.IntervalTimePathConfig.TimePathCurve}),t.IntervalTimePathConfig.TimePathCurve&&this.ICl.add(t.IntervalTimePathConfig.TimePathCurve)):t.KeepSpeed?this.yCl.push({Type:0,Speed:t.KeepSpeed}):Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",39,"[SceneItemMoveWithSplineTask.ParseTaskParam] 样条中包含错误配置的点",["EntityId",this.EntityHandle.Entity?.Id],["PointIndex",e])}}else{this.SCl=void 0,this.yCl=[];for(const i of this.SplineData.Points)this.yCl.push({Type:0,Speed:i.MoveSpeed,WaitTime:i.StayTime});this.SplineData.CycleOption?.Type===IComponent_1.EPatrolCycleMode.Loop&&(this.MCl=!0,this.ecn=this.SplineData.CycleOption.IsCircle)}}}class CharacterMoveWithSplineTask extends MoveWithSplineTaskBase{constructor(e,t,i){super(e),this.Spline=t,this.SplineData=i,this.gLe=void 0,this.RCl=!1,this.il=0,this.wXt=0,this.B7=void 0,this.xsa=(e,t)=>{this.EntityHandle?.Entity?.Valid&&t!==CharacterUnifiedStateTypes_1.ECharPositionState.Climb&&(t=this.EntityHandle.Entity.GetComponent(44))&&t.IsMovingToLocation()&&(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("AI",42,"MoveWithSpline打断墙上移动"),t.MoveToLocationEnd(2))}}static Create(e,t,i,s,h,n){e=new CharacterMoveWithSplineTask(e,t,i);return e.gLe=s,e.RCl=h,e.B7=n,e.StartTask(),e}OnStartTask(){super.OnStartTask(),this.EntityHandle.Entity.GetComponent(0)?.IsNpc()&&this.gLe?.NpcFollow?(this.EntityHandle.Entity.GetComponent(185)?.PauseAi("StartMoveWithSpline"),EventSystem_1.EventSystem.EmitWithTarget(this.EntityHandle.Entity,EventDefine_1.EEventName.StartMoveWithSpline,this.gLe,this.RCl,e=>{this.EndTask(e)})):(this.LCl(),this.ODe())}OnEndTask(e){super.OnEndTask(e);var t,i,s=this.EntityHandle.Entity.GetComponent(3);s?.Actor.CapsuleComponent.SetCollisionResponseToChannel(QueryTypeDefine_1.KuroCollisionChannel.PawnPlayer,2),this.gLe?.CheckClimb&&this.EntityHandle?.Entity?.Valid&&EventSystem_1.EventSystem.HasWithTarget(this.EntityHandle.Entity,EventDefine_1.EEventName.CharOnPositionStateChanged,this.xsa)&&EventSystem_1.EventSystem.RemoveWithTarget(this.EntityHandle.Entity,EventDefine_1.EEventName.CharOnPositionStateChanged,this.xsa),s?.ClearInput(),"Player"===this.gLe?.MoveTarget.Type&&(s=this.EntityHandle.Entity.GetComponent(44),t=this.EntityHandle.Entity.GetComponent(99),s&&(s.StopMove(!1),i=t?.MoveState,s.ResetMaxSpeed(i)),this.gLe?.CheckClimb&&(s=this.EntityHandle.Entity.GetComponent(34))&&t&&t.PositionState===CharacterUnifiedStateTypes_1.ECharPositionState.Climb&&s.KickWallExit(),(i=this.EntityHandle.Entity.GetComponent(61))?.ClearMoveVectorCache(),i?.SetActive(!0)),this.EntityHandle.Entity.GetComponent(44).IsSpecialMove=!1,this.EntityHandle.Entity.GetComponent(0)?.IsNpc()&&this.gLe?.NpcFollow&&this.EntityHandle.Entity.GetComponent(185)?.ResumeAi("StartMoveWithSpline"),this.B7?.(e)}nKl(e,t){var i=ModelManager_1.ModelManager.TraceElementModel.CommonStartLocation,s=(i.Set(e.X,e.Y,e.Z),this.gLe.CheckClimb.Direction),h=CharacterMoveWithSplineTask.Gco,n=CharacterMoveWithSplineTask.jye,s=(h.Set(s.Y??0,s.Z??0,s.X??0),h.Vector(n),n.Normalize(),n.MultiplyEqual(this.gLe.CheckClimb.Distance),ModelManager_1.ModelManager.TraceElementModel.CommonEndLocation),h=(s.Set(e.X+n.X,e.Y+n.Y,e.Z+n.Z),ModelManager_1.ModelManager.TraceElementModel.GetLineTrace()),e=(h.WorldContextObject=t.Owner,h.ActorsToIgnore.Empty(),h.ActorsToIgnore.Add(t.Owner),TraceElementCommon_1.TraceElementCommon.SetStartLocation(h,i),TraceElementCommon_1.TraceElementCommon.SetEndLocation(h,s),TraceElementCommon_1.TraceElementCommon.LineTrace(h,"MoveWithSplineDetectClimb")),n=h.HitResult;return h.ClearCacheData(),[e,n]}sKl(){var e=this.EntityHandle.Entity.GetComponent(1),t=e.ActorLocationProxy,t=this.nKl(t,e.Owner);if(!t[0])return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("AI",42,"MoveWithSpline上墙失败,射线检测不到墙面"),!1;var t=t[1],i=CharacterMoveWithSplineTask.jye,s=(TraceElementCommon_1.TraceElementCommon.GetImpactNormal(t,0,i),i.MultiplyEqual(CHARACTER_TRACE_DISTANCE),CharacterMoveWithSplineTask.RTe),t=(TraceElementCommon_1.TraceElementCommon.GetImpactPoint(t,0,s),s.AdditionEqual(i),this.EntityHandle.Entity.GetComponent(175)),h=t.GetMeshTransform(),e=(e.SetActorLocation(s.ToUeVector(),"MoveWithSplineDetectClimb",!0),t.SetModelBuffer(h,10),i),s=(e.UnaryNegation(e),this.EntityHandle.Entity.GetComponent(99));if(s?.PositionState!==CharacterUnifiedStateTypes_1.ECharPositionState.Climb&&!this.EntityHandle.Entity.GetComponent(34)?.DetectClimbWithDirect(!1,e.ToUeVector(),!0))return!1;return!0}ODe(){if(this.gLe?.CheckClimb&&!this.sKl())return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("AI",42,"MoveWithSpline上墙失败"),void this.EndTask(!1);var t=this.SplineData&&this.SplineData.Points.length,i=[];for(let e=this.il;e<=this.wXt;++e)i.push(Vector_1.Vector.Create(this.Spline.D_GetLocationAtSplinePoint(e,1)));var s=[];for(let e=this.il;e<=this.wXt;++e){var h,n=e-this.il,n={Index:n,Position:i[n]};t&&((h=this.SplineData.Points[e])?.MoveSpeed&&(n.MoveSpeed=h.MoveSpeed),h?.MoveState)&&(n.MoveState=h.MoveState),s.push(n)}var e={Points:s,Navigation:this.SplineData?.IsNavigation??!1,IsFly:this.gLe?.IsFollowStrictly??this.SplineData?.IsFloating??!1,DebugMode:!0,Loop:!1,UseNearestPoint:!0,Callback:e=>{1===e?this.EndTask(!0):this.EndTask(!1)},ReturnFalseWhenNavigationFailed:!1,NoAsyncPoint:this.RCl,StartIndex:this.gLe?.CheckClimb&&1<s.length?1:0},o=(this.SplineData?.CycleOption&&this.SplineData.CycleOption.Type===IComponent_1.EPatrolCycleMode.Loop&&(e.Loop=!0,e.CircleMove=this.SplineData.CycleOption.IsCircle),this.SplineData?.TurnSpeed&&(e.TurnSpeed=this.SplineData.TurnSpeed),this.EntityHandle.Entity.GetComponent(44));o.IsMovingToLocation()&&o.MoveToLocationEnd(1),this.EntityHandle.Entity.GetComponent(3)?.Actor.CapsuleComponent.SetCollisionResponseToChannel(QueryTypeDefine_1.KuroCollisionChannel.PawnPlayer,0),o.MoveAlongPath(e),this.gLe?.CheckClimb&&this.EntityHandle.Entity?.Valid&&!EventSystem_1.EventSystem.HasWithTarget(this.EntityHandle.Entity,EventDefine_1.EEventName.CharOnPositionStateChanged,this.xsa)&&EventSystem_1.EventSystem.AddWithTarget(this.EntityHandle.Entity,EventDefine_1.EEventName.CharOnPositionStateChanged,this.xsa)}LCl(){var e=this.Spline.GetNumberOfSplinePoints();this.il=this.gLe.StartPointIndex?MathUtils_1.MathUtils.Clamp(this.gLe.StartPointIndex,0,e-1):0,this.wXt=this.gLe.EndPointIndex?MathUtils_1.MathUtils.Clamp(this.gLe.EndPointIndex,0,e-1):e-1}}CharacterMoveWithSplineTask.Gco=Rotator_1.Rotator.Create(),CharacterMoveWithSplineTask.jye=Vector_1.Vector.Create(),CharacterMoveWithSplineTask.RTe=Vector_1.Vector.Create();class LevelEventMoveWithSpline extends LevelGeneralBase_1.LevelEventBase{constructor(){super(...arguments),this.sDe=void 0,this.E0=0,this.gLe=void 0,this.YLe=!1,this.wDe=0,this.UCl=e=>{this.IsAsync||this.FinishExecute(!0)},this.DCl=e=>{this.IsAsync||this.FinishExecute(e)},this.cwl=e=>{this.IsAsync||this.FinishExecute(e)},this.zpe=(e,t)=>{Log_1.Log.CheckWarn()&&Log_1.Log.Warn("LevelEvent",42,"[LevelEventMoveWithSpline]检测到移动实体被销毁，直接设置节点执行成功"),this.FinishExecute(!0)}}ExecuteInGm(e,t){this.FinishExecute(!0)}ExecuteNew(e,t){if(e){switch(this.gLe=e,this.gLe.MoveTarget.Type){case"Entity":this.YLe=!1,this.E0=this.gLe.MoveTarget.EntityId;break;case"Player":return this.YLe=!0,void this.ExecuteWhenEntitiesReady()}this.E0?this.CreateWaitEntityTask(this.E0):(Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",7,"[MoveWithSpline]配置的目标Id无效",["PbDataId",this.E0]),this.FinishExecute(!1))}else this.FinishExecute(!1)}ExecuteWhenEntitiesReady(){var e,t,i,s,h;this.YLe?this.sDe=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity:this.sDe=ModelManager_1.ModelManager.CreatureModel.GetEntityByPbDataId(this.E0),this.sDe&&!EventSystem_1.EventSystem.HasWithTarget(this.sDe,EventDefine_1.EEventName.RemoveEntity,this.zpe)&&EventSystem_1.EventSystem.AddWithTarget(this.sDe,EventDefine_1.EEventName.RemoveEntity,this.zpe),this.sDe?.IsInit?(e=this.sDe.Entity.GetComponent(46),i=this.sDe.Entity.GetComponent(1),e?.IsAiDriver?(Log_1.Log.CheckWarn()&&Log_1.Log.Warn("LevelEvent",7,"当前实体正在由行为树AI驱动，请检查需求设计是否合理（沿着样条移动）",["PbDataId",this.E0],["Name",i.Owner.GetName()]),this.FinishExecute(!1)):(e=this.gLe.SplineEntityId,(i=ModelManager_1.ModelManager.CreatureModel.GetCompleteEntityData(e))?(t=(0,IComponent_1.getComponent)(i.ComponentsData,"SplineComponent"))?(i=Vector_1.Vector.Create(i.Transform?.Pos.X??0,i.Transform?.Pos.Y??0,i.Transform?.Pos.Z??0),t.Option.Type!==IComponent_1.ESplineType.Patrol&&t.Option.Type!==IComponent_1.ESplineType.ContinuesVariableSpeedMovement?(Log_1.Log.CheckError()&&Log_1.Log.Error("Level",31,"[LevelEventMoveWithSpline.ExecuteWhenEntitiesReady] SplineComponent配置类型不是patrol或ContinuesVariableSpeedMovement",["SplineEntityId",e]),this.FinishExecute(!1)):(this.wDe=this.sDe.Entity.GetComponent(0).GetPbDataId(),s=ModelManager_1.ModelManager.GameSplineModel.LoadAndGetSplineComponent(e,this.wDe),(h=ModelManager_1.ModelManager.GameSplineModel.GetSplineActorBySplineId(e))?.IsValid()?(h.D_K2_SetActorLocation(i.ToUeVector(),!1,void 0,!1),this.NDe(s,t.Option)):(Log_1.Log.CheckError()&&Log_1.Log.Error("Level",31,"[LevelEventMoveWithSpline.ExecuteWhenEntitiesReady] 获取的spline actor非法",["SplineEntityId",e]),this.FinishExecute(!1)))):(Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Level",31,"[LevelEventMoveWithSpline.ExecuteWhenEntitiesReady] 无法找到SplineComponent配置",["SplineEntityId",e]),this.FinishExecute(!1)):(Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Level",31,"[LevelEventMoveWithSpline.ExecuteWhenEntitiesReady] 无法找到Spline Entity",["SplineEntityId",e]),this.FinishExecute(!1)))):(Log_1.Log.CheckWarn()&&Log_1.Log.Warn("LevelEvent",7,"[MoveWithSpline]实体无效",["PbDataId",this.E0]),this.FinishExecute(!0))}NDe(t,e){var i=t.GetNumberOfSplinePoints(),s=this.gLe.StartPointIndex?MathUtils_1.MathUtils.Clamp(this.gLe.StartPointIndex,0,i-1):0,h=this.gLe.EndPointIndex?MathUtils_1.MathUtils.Clamp(this.gLe.EndPointIndex,0,i-1):i-1,n=[];for(let e=s;e<=h;++e)n.push(Vector_1.Vector.Create(t.D_GetLocationAtSplinePoint(e,1)));this.gLe.IsForceToFirstPoint&&(i=n[0],s=t.GetRotationAtSplinePoint(s,1),i={TelePortConfig:{TargetPos:{X:i.X,Y:i.Y,Z:i.Z,A:s.Yaw},Type:IAction_1.ETeleportType.FixedPos}},(s=new LevelGameplayActionsDefine_1.CommonActionInfo).Name="SetPlayerPos",s.Params=i,Log_1.Log.CheckInfo())&&Log_1.Log.Info("Level",31,"[LevelEventMoveWithSpline.SetMoveAction] SetPlayerPos已为服务端行为，无法执行",["ActionInfo",s]),this.YLe&&(this.sDe.Entity.GetComponent(3).ClearInput(),(i=this.sDe.Entity.GetComponent(61)).ClearMoveVectorCache(),i.SetActive(!1),s=this.sDe.Entity.GetComponent(39))&&s.EndOwnerAndFollowSkills(),this.ODe(t,e)}ODe(e,t){switch(this.sDe.Entity.GetComponent(0)?.GetEntityType()){case Protocol_1.Aki.Protocol.kks.Proto_SceneItem:this.SceneItemMoveAlongPath(e,t);break;case Protocol_1.Aki.Protocol.kks.HI_:this.VehicleMoveAlongPath(e,t);break;default:this.CharacterMoveAlongPath(e,t)}}SceneItemMoveAlongPath(e,t){switch(t?.Type){case IComponent_1.ESplineType.Patrol:case IComponent_1.ESplineType.ContinuesVariableSpeedMovement:SceneItemMoveWithSplineTask.Create(this.sDe,e,t,this.gLe,!this.IsAsync,this.IsAsync?void 0:this.DCl,this.BaseContext),this.IsAsync&&this.FinishExecute(!0);break;default:Log_1.Log.CheckError()&&Log_1.Log.Error("Level",39,"[LevelEventMoveWithSpline.MoveAlongPath] 暂不支持该样条类型"),this.FinishExecute(!1)}}CharacterMoveAlongPath(e,t){t?.Type!==IComponent_1.ESplineType.Patrol?(Log_1.Log.CheckError()&&Log_1.Log.Error("Level",39,"[LevelEventMoveWithSpline.MoveAlongPath] 角色样条移动暂不支持该样条类型"),this.FinishExecute(!1)):(CharacterMoveWithSplineTask.Create(this.sDe,e,t,this.gLe,this.IsAsync,this.IsAsync?void 0:this.UCl),this.IsAsync&&this.FinishExecute(!0))}VehicleMoveAlongPath(e,t){var i=this.gLe?.SplineEntityId,s=this.sDe?.Entity;i&&(s=s&&s.GetComponent(233))?(s.MoveAlongPath({SplineId:i,ForceToFirstPoint:!!this.gLe?.IsForceToFirstPoint,StartFromNearest:!0,OnMoveEndHandle:this.IsAsync?void 0:this.cwl}),this.IsAsync&&this.FinishExecute(!0)):this.FinishExecute(!1)}OnReset(){this.gLe&&(this.gLe=void 0)}OnFinish(){this.sDe&&EventSystem_1.EventSystem.HasWithTarget(this.sDe,EventDefine_1.EEventName.RemoveEntity,this.zpe)&&EventSystem_1.EventSystem.RemoveWithTarget(this.sDe,EventDefine_1.EEventName.RemoveEntity,this.zpe);var e,t=ModelManager_1.ModelManager.CreatureModel.GetCreatureDataIdByPbDataId(this.E0);!this.YLe&&t&&((e=Protocol_1.Aki.Protocol.f1s.create()).F4n=MathUtils_1.MathUtils.NumberToLong(t),Net_1.Net.Call(27542,e,e=>{e&&e.BEs!==Protocol_1.Aki.Protocol.Q4n.KRs&&ControllerHolder_1.ControllerHolder.ErrorCodeController.OpenErrorCodeTipView(e.BEs,25568)}))}}(exports.LevelEventMoveWithSpline=LevelEventMoveWithSpline).MoveWithSplineTasks=new Set;
//# sourceMappingURL=LevelEventMoveWithSpline.js.map