
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LevelEventSetSubLevelsVisible=void 0;const UE=require("ue"),CustomPromise_1=require("../../../Core/Common/CustomPromise"),Log_1=require("../../../Core/Common/Log"),ResourceSystem_1=require("../../../Core/Resource/ResourceSystem"),TimerSystem_1=require("../../../Core/Timer/TimerSystem"),StringUtils_1=require("../../../Core/Utils/StringUtils"),EffectSystem_1=require("../../Effect/EffectSystem"),Global_1=require("../../Global"),GlobalData_1=require("../../GlobalData"),ControllerHolder_1=require("../../Manager/ControllerHolder"),ModelManager_1=require("../../Manager/ModelManager"),ScreenEffectSystem_1=require("../../Render/Effect/ScreenEffectSystem/ScreenEffectSystem"),SubLevelController_1=require("../../World/Controller/SubLevelController"),LevelGeneralBase_1=require("../LevelGeneralBase");class LevelEventSetSubLevelsVisible extends LevelGeneralBase_1.LevelEventBase{constructor(){super(...arguments),this.z$_=void 0,this.eW_=void 0,this.tW_=void 0,this.iW_=0}ExecuteInGm(e,t){this.FinishExecute(!0)}ExecuteNew(e,t){e&&((e=e)?(this.qSr(),this.oW_(e).then(()=>{this.FinishExecute(!0)})):Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible 参数不正确"))}async oW_(t){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 开始");var l=t.TransitionOption;if(l)if(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 开始执行转换表现"),!l.SceneCaptureEffect||StringUtils_1.StringUtils.IsBlank(l.SceneCaptureEffect))if(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 切屏表现为空，开始执行屏幕特效"),l.ScreenEffect&&!StringUtils_1.StringUtils.IsBlank(l.ScreenEffect)){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 开始播放屏幕特效");const e=await this.nW_(l.ScreenEffect);Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 屏幕特效已经打开"),await this.sW_(t),e.IsValid()&&ScreenEffectSystem_1.ScreenEffectSystem.GetInstance().EndScreenEffect(e),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 切换流程结束 屏幕特效结束")}else Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 屏幕特效为空，直接开始切换"),await this.sW_(t),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 屏幕特效为空，切换结束");else{Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 截屏完成，生成截屏特效"),this.iW_=EffectSystem_1.EffectSystem.SpawnUnloopedEffect(GlobalData_1.GlobalData.World,Global_1.Global.BaseCharacter?.D_GetTransform(),l.SceneCaptureEffect,"[LevelEventSetSubLevelsVisible]",void 0,3,void 0,e=>{this.eW_.SetResult(e)});var i=await this.eW_.Promise,i=(5!==i&&Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 加载屏幕特效错误",["loadResult",i],["SceneCaptureEffectPath",l.SceneCaptureEffect]),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 加载截屏特效结束，开始截屏"),EffectSystem_1.EffectSystem.GetEffectModel(this.iW_)),i=i?.StartTime??1;UE.KismetSystemLibrary.ExecuteConsoleCommand(GlobalData_1.GlobalData.World,"r.KuroCaptureSceneColor.ImmediateCapture "+i);let e=void 0;l.ScreenEffect&&!StringUtils_1.StringUtils.IsBlank(l.ScreenEffect)&&(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 生成屏幕特效"),e=await this.nW_(l.ScreenEffect),Log_1.Log.CheckDebug())&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 生成屏幕特效结束"),TimerSystem_1.TimerSystem.Next(()=>{this.tW_.SetResult()}),await this.tW_.Promise,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 开始切换"),await this.sW_(t),e?.IsValid()&&ScreenEffectSystem_1.ScreenEffectSystem.GetInstance().EndScreenEffect(e),EffectSystem_1.EffectSystem.IsValid(this.iW_)&&(EffectSystem_1.EffectSystem.StopEffectById(this.iW_,"[WorldLevelUpView.RecycleEffect]",!1),this.iW_=0),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 切换流程结束")}else await this.sW_(t),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible 切换流程结束")}async sW_(e){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible SetVisibleImp开始");var t=new Array;if(e.EnableLevels)for(const l of e.EnableLevels)t.push(this.mdc(l));if(await Promise.all(t),t.length=0,e.DisableLevels)for(const i of e.DisableLevels)t.push(this.fdc(i));ControllerHolder_1.ControllerHolder.SubLevelController.RequestSetSubLevelVisible(e.EnableLevels,e.DisableLevels),await Promise.all(t),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible SetVisibleImp结束")}async mdc(e){var t=ModelManager_1.ModelManager.SubLevelModel,l=t.GetPreloadOrLoadedSubLevel(e);if(l?.Level){if(!l.Level.IsLevelVisible()){const s=new CustomPromise_1.CustomPromise;var i=()=>{s.SetResult()};l.Level.OnLevelShown.Add(i),l.Level.bShouldBlockOnLoad=!0,l.Level.SetShouldBeVisible(!0),await s.Promise,l.Level.OnLevelShown.Remove(i),l.Level.bShouldBlockOnLoad=!1,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible EnableLevel",["levelPath",e])}t.MovePreloadSubLevelToSubLevel(e)}else Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible 想要enable的子关卡没有预加载,强制执行加载后显示",["subLevelPath",e]),await SubLevelController_1.SubLevelController.LoadSubLevel(e,!0)}async fdc(e){var t=ModelManager_1.ModelManager.SubLevelModel.GetPreloadOrLoadedSubLevel(e);if(t&&t.Level){if(t.Level.IsLevelVisible()){const i=new CustomPromise_1.CustomPromise;var l=()=>{i.SetResult()};t.Level.OnLevelHidden.Add(l),t.Level.bShouldBlockOnUnload=!0,t.Level.SetShouldBeVisible(!1),await i.Promise,t.Level.OnLevelHidden.Remove(l),t.Level.bShouldBlockOnUnload=!1,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible:StartSetSubLevelsVisible DisableLevel",["levelPath",e])}}else Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible 想要Disable的子关卡没有加载",["subLevelPath",e])}async nW_(e){ResourceSystem_1.ResourceSystem.LoadAsync(e,UE.EffectScreenPlayData_C,e=>{this.z$_.SetResult(e)});var t=await this.z$_.Promise;return t?.IsValid()?ScreenEffectSystem_1.ScreenEffectSystem.GetInstance().PlayScreenEffect(t):Log_1.Log.CheckError()&&Log_1.Log.Error("LevelEvent",18,"执行行为.LevelEventSetSubLevelsVisible 屏幕特效资源无效",["effectPath",e]),t}qSr(){this.z$_=new CustomPromise_1.CustomPromise,this.tW_=new CustomPromise_1.CustomPromise,this.eW_=new CustomPromise_1.CustomPromise}aW_(){this.z$_=void 0,this.eW_=void 0,this.tW_=void 0}OnFinish(){this.aW_()}}exports.LevelEventSetSubLevelsVisible=LevelEventSetSubLevelsVisible;
//# sourceMappingURL=LevelEventSetSubLevelsVisible.js.map