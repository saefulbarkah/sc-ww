
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GravityFlipView=void 0;const UE=require("ue"),Log_1=require("../../../Core/Common/Log"),Protocol_1=require("../../../Core/Define/Net/Protocol"),Net_1=require("../../../Core/Net/Net"),MathUtils_1=require("../../../Core/Utils/MathUtils"),EventDefine_1=require("../../Common/Event/EventDefine"),EventSystem_1=require("../../Common/Event/EventSystem"),ControllerHolder_1=require("../../Manager/ControllerHolder"),ModelManager_1=require("../../Manager/ModelManager"),LevelSequencePlayer_1=require("../../Module/Common/LevelSequencePlayer"),UiViewBase_1=require("../../Ui/Base/UiViewBase");class GravityFlipView extends UiViewBase_1.UiViewBase{constructor(){super(...arguments),this.vQ_=void 0,this.yQ_=void 0,this.SQ_=void 0,this.plc=void 0,this.cCc=void 0,this.Hea=void 0,this.z_e=-1,this.d1c=!1,this.lPe=()=>{var e;this.d1c||(e=this.OpenParam.SelectCallback,ControllerHolder_1.ControllerHolder.GravityFlipController.ListenTeleportCompleteEvent(e),ModelManager_1.ModelManager.GravityFlipModel.GravityFlipComp?.OnExitInteract(),this.dY_(),this.CloseMe())},this.bQ_=()=>{this.LQ_(0)},this.wQ_=()=>{this.LQ_(1)},this.RQ_=()=>{this.LQ_(2)},this.vlc=()=>{this.LQ_(4)},this.NQ_=()=>{this.VQ_(),this.Hea?.PlayLevelSequenceByName("Turn_Finish"),this.UiViewSequence?.PlaySequence("Turn_Finish"),this.d1c=!1}}OnRegisterComponent(){this.ComponentRegisterInfos=[[0,UE.UIButtonComponent],[1,UE.UIButtonComponent],[2,UE.UIButtonComponent],[3,UE.UIButtonComponent],[4,UE.UIButtonComponent],[5,UE.UIItem],[6,UE.UIItem]],this.BtnBindInfo=[[0,this.bQ_],[1,this.wQ_],[2,this.RQ_],[3,this.lPe],[4,this.vlc]]}OnStart(){this.vQ_=this.GetButton(0),this.SQ_=this.GetButton(1),this.yQ_=this.GetButton(2),this.plc=this.GetButton(4),this.Hea=new LevelSequencePlayer_1.LevelSequencePlayer(this.RootItem),this.cCc=new LevelSequencePlayer_1.LevelSequencePlayer(this.plc.RootUIComp),this.z_e=ModelManager_1.ModelManager.GravityFlipModel.TargetDirection,-1===this.z_e&&this.GetItem(6)?.SetUIActive(!1),ModelManager_1.ModelManager.GravityFlipModel.ViewCallBackCache=this.OpenParam.SelectCallback}OnBeforeShow(){this.VQ_(!0)}OnAddEventListener(){EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnGravityFlipAnimFinish,this.NQ_)}OnRemoveEventListener(){EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnGravityFlipAnimFinish,this.NQ_)}LQ_(s){if(!this.d1c){let e=-1,t=0,i="Turn_180";switch(s){case 0:t=180,e=2,i="Turn_180";break;case 1:t=90,e=1,i="Turn_90_Zheng";break;case 2:t=270,e=0,i="Turn_90_Fu";break;case 4:t=0}s=ModelManager_1.ModelManager.GravityFlipModel.CurrentGravityDirection;ModelManager_1.ModelManager.GravityFlipModel.CurrentGravityDirection=(t+s)%360,-1!==e&&((0,this.OpenParam.SelectCallback)?.(e),this.Hea?.PlayLevelSequenceByName("Turn"),this.UiViewSequence?.PlaySequence(i),ControllerHolder_1.ControllerHolder.GravityFlipController.OnChangeGravityDirection(t),this.d1c=!0),this.Xxe(!1)}}VQ_(e=!1){this.Xxe(!1);let t=!1,i=!1,s=!1;var r=-1===this.z_e?0:this.z_e,r=(360+ModelManager_1.ModelManager.GravityFlipModel.GravityFlipComp.CurGravityDirection-r)%360,e=(e&&-1!==this.z_e&&this.GetItem(6)?.SetUIRelativeRotation(new UE.Rotator(0,r,0)),ModelManager_1.ModelManager.GravityFlipModel.ValidGravityDirections);for(const o of e)switch((360-ModelManager_1.ModelManager.GravityFlipModel.CurrentGravityDirection+o)%360){case 270:i=!0;break;case 180:s=!0;break;case 90:t=!0}i!==this.yQ_.GetSelfInteractive()&&(this.yQ_?.SetSelfInteractive(i),this.yQ_?.RootUIComp.SetUIActive(i)),t!==this.SQ_.GetSelfInteractive()&&(this.SQ_?.SetSelfInteractive(t),this.SQ_?.RootUIComp.SetUIActive(t)),s!==this.vQ_.GetSelfInteractive()&&(this.vQ_?.SetSelfInteractive(s),this.vQ_?.RootUIComp.SetUIActive(s)),this.cCc?.StopCurrentSequence(),this.cCc?.PlayLevelSequenceByName("Gray")}Xxe(e){this.vQ_?.SetSelfInteractive(e),this.vQ_?.RootUIComp.SetUIActive(e),this.SQ_?.SetSelfInteractive(e),this.SQ_?.RootUIComp.SetUIActive(e),this.yQ_?.SetSelfInteractive(e),this.yQ_?.RootUIComp.SetUIActive(e),this.plc?.SetSelfInteractive(e)}dY_(){var e,t,i;ModelManager_1.ModelManager.GravityFlipModel.NeedChangeGravity()?-1===(e=ModelManager_1.ModelManager.GravityFlipModel.GravityFlipEntityCreatureDataId)?(Log_1.Log.CheckError()&&Log_1.Log.Error("SceneItem",31,"[GravityFlipView] 未找到重力翻转实体"),ControllerHolder_1.ControllerHolder.GravityFlipController.CancelWaitTeleport()):(t=ModelManager_1.ModelManager.GravityFlipModel.CurGravityFlipType,(i=Protocol_1.Aki.Protocol.iY_.create()).nY_=MathUtils_1.MathUtils.NumberToLong(e),i.sY_=t,Net_1.Net.Call(21476,i,e=>{switch(e.Q4n){case Protocol_1.Aki.Protocol.Q4n.KRs:break;case Protocol_1.Aki.Protocol.Q4n.Proto_ErrOnlineInteractNotOpen:case Protocol_1.Aki.Protocol.Q4n.Proto_ErrOnlineInteractNoPermission:ControllerHolder_1.ControllerHolder.GravityFlipController.CancelWaitTeleport();break;default:ControllerHolder_1.ControllerHolder.GravityFlipController.CancelWaitTeleport(),ControllerHolder_1.ControllerHolder.ErrorCodeController.OpenErrorCodeTipView(e.Q4n,22800)}ModelManager_1.ModelManager.GravityFlipModel.GravityFlipComp.SetGravityDirection(e.aY_)})):ControllerHolder_1.ControllerHolder.GravityFlipController.CancelWaitTeleport()}}exports.GravityFlipView=GravityFlipView;
//# sourceMappingURL=GravityFlipView.js.map