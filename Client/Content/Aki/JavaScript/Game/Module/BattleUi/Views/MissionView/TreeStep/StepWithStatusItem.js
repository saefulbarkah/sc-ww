
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.StepWithStatusItem=void 0;const ue_1=require("ue"),IQuest_1=require("../../../../../../UniverseEditor/Interface/IQuest"),LevelGeneralContextDefine_1=require("../../../../../LevelGamePlay/LevelGeneralContextDefine"),ControllerHolder_1=require("../../../../../Manager/ControllerHolder"),ModelManager_1=require("../../../../../Manager/ModelManager"),GeneralLogicTreeController_1=require("../../../../GeneralLogicTree/GeneralLogicTreeController"),MissionViewStepTextUtil_1=require("../MissionViewStepTextUtil"),StepBaseItem_1=require("./StepBaseItem");class StepWithStatusItem extends StepBaseItem_1.StepBaseItem{constructor(){super(...arguments),this.StepStatusNode=void 0,this.StepSuccess=void 0,this.StepLose=void 0,this.StatusNodeVisible=!1,this.CurrentStatusType=0}OnRegisterComponent(){super.OnRegisterComponent(),this.ComponentRegisterInfos.push([2,ue_1.UISprite],[3,ue_1.UISprite],[4,ue_1.UISprite])}OnStart(){super.OnStart(),this.StepStatusNode=this.GetSprite(4),this.StepSuccess=this.GetSprite(2),this.StepLose=this.GetSprite(3)}async OnReset(){this.CurrentStatusType=0,this.Pj_(this.CurrentStatusType),await super.OnReset()}UpdateStepInfo(){super.UpdateStepInfo(),this.StatusNodeVisible=this.UpdateStepStatusNode(),this.StepStatusNode.SetUIActive(this.StatusNodeVisible)}async OnConfigRefresh(e,t){await super.OnConfigRefresh(e,t),this.CurrentStatusType=0,this.Pj_(this.CurrentStatusType)}UpdateStepStatusNode(){var e,t=this.CheckCanShowStatusRoot();return!!t&&(this.CheckCanUpdateStatusNode()&&(e=this.xj_(),this.CurrentStatusType!==e)&&(this.CurrentStatusType=e,this.Pj_(this.CurrentStatusType)),t)}Pj_(e){switch(e){case 0:this.FYt(!1),this.VYt(!1);break;case 1:this.FYt(!0),this.VYt(!1);break;case 2:this.FYt(!1),this.VYt(!0)}this.OnStatusChanged(this.CurrentStatusType)}xj_(){if(this.Config&&this.ShowData){var e=this.Config.QuestScheduleType;switch(e.Type){case"FishingEntrust":var t=this.Config,s=ModelManager_1.ModelManager.DockyardModel.GetItemCountByItemId(t.ProgressTargetId);return MissionViewStepTextUtil_1.MissionViewStepTextUtil.GetEntrustProgressTotalCount(t.ProgressTargetId)<=s?1:0;case IQuest_1.EQuestScheduleType.ChildQuestCompleted:t=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(this.ShowData.Id);return t?!(s=t.GetNode(e.ChildQuestId))||s.IsProcessing?0:s.IsSuccess?1:2:0;case IQuest_1.EQuestScheduleType.TimeLeft:var t=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(this.ShowData.Id);return t?(s=e.TimerType,(t=t.GetChallengeRemainTime(s))?e.TimeLeft<=t?1:2:0):0;case IQuest_1.EQuestScheduleType.Condition:var s=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(this.ShowData.Id);return s?(t=e.Condition)?(s=LevelGeneralContextDefine_1.GeneralLogicTreeContext.Create(s.BtType,s.TreeIncId,s.TreeConfigId),ControllerHolder_1.ControllerHolder.LevelGeneralController.CheckConditionNew(t,void 0,s)?1:2):0:0}}return 0}FYt(e){(this.StepSuccess.IsUIActiveSelf()&&1===this.StepSuccess.Alpha)!==e&&this.StepSuccess.SetUIActive(e)}VYt(e){this.StepLose.IsUIActiveSelf()!==e&&this.StepLose.SetUIActive(e)}CheckCanShowStatusRoot(){if(this.Config)switch(this.Config.ShowSource){case 0:return GeneralLogicTreeController_1.GeneralLogicTreeController.IsShowNodeStatus(this.Config);case 1:return!0}return!1}CheckCanUpdateStatusNode(){return!0}OnStatusChanged(e){}}exports.StepWithStatusItem=StepWithStatusItem;
//# sourceMappingURL=StepWithStatusItem.js.map