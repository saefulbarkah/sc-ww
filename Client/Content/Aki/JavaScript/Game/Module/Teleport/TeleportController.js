
"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.TeleportController=void 0;const cpp_1=require("cpp"),puerts_1=require("puerts"),UE=require("ue"),Log_1=require("../../../Core/Common/Log"),CommonParamById_1=require("../../../Core/Define/ConfigCommon/CommonParamById"),Protocol_1=require("../../../Core/Define/Net/Protocol"),ControllerBase_1=require("../../../Core/Framework/ControllerBase"),Net_1=require("../../../Core/Net/Net"),ResourceSystem_1=require("../../../Core/Resource/ResourceSystem"),TimerSystem_1=require("../../../Core/Timer/TimerSystem"),FNameUtil_1=require("../../../Core/Utils/FNameUtil"),Rotator_1=require("../../../Core/Utils/Math/Rotator"),Vector_1=require("../../../Core/Utils/Math/Vector"),MathUtils_1=require("../../../Core/Utils/MathUtils"),IAction_1=require("../../../UniverseEditor/Interface/IAction"),CameraController_1=require("../../Camera/CameraController"),CameraUtility_1=require("../../Camera/CameraUtility"),EventDefine_1=require("../../Common/Event/EventDefine"),EventSystem_1=require("../../Common/Event/EventSystem"),Global_1=require("../../Global"),GlobalData_1=require("../../GlobalData"),ConfigManager_1=require("../../Manager/ConfigManager"),ControllerHolder_1=require("../../Manager/ControllerHolder"),ModelManager_1=require("../../Manager/ModelManager"),CharacterController_1=require("../../NewWorld/Character/CharacterController"),RoleAudioController_1=require("../../NewWorld/Character/Role/RoleAudioController"),RoleTriggerController_1=require("../../NewWorld/Character/Role/RoleTriggerController"),PerfSightController_1=require("../../PerfSight/PerfSightController"),ScreenEffectSystem_1=require("../../Render/Effect/ScreenEffectSystem/ScreenEffectSystem"),InputDistributeController_1=require("../../Ui/InputDistribute/InputDistributeController"),GameModeController_1=require("../../World/Controller/GameModeController"),WorldController_1=require("../../World/Controller/WorldController"),WorldDefine_1=require("../../World/Define/WorldDefine"),AsyncTask_1=require("../../World/Task/AsyncTask"),TaskSystem_1=require("../../World/Task/TaskSystem"),AreaController_1=require("../Area/AreaController"),DeadReviveController_1=require("../DeadRevive/DeadReviveController"),GenericPromptController_1=require("../GenericPrompt/GenericPromptController"),LevelLoadingController_1=require("../LevelLoading/LevelLoadingController"),PlotData_1=require("../Plot/PlotData"),SeamlessTravelDefine_1=require("../SeamlessTravel/SeamlessTravelDefine"),SeamlessTravelTreadmill_1=require("../SeamlessTravel/SeamlessTravelTreadmill"),TeleportDefine_1=require("../Teleport/TeleportDefine"),VideoLauncher_1=require("../Video/VideoLauncher"),DISTANCE_THRESHOLD_1=3e3,DISTANCE_THRESHOLD_2=MathUtils_1.MathUtils.MaxFloat,SKIP_FALL_INJURE_TIME=1e3,DELAYCLOSETIME=1500;class TeleportController extends ControllerBase_1.ControllerBase{static OnInit(){return Net_1.Net.Register(21722,this.AIo),Net_1.Net.Register(21811,this.A2l),Net_1.Net.Register(29052,this.PIo),Net_1.Net.Register(20118,this.u3l),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.InitArea,this.Hlh),!0}static OnClear(){return Net_1.Net.UnRegister(21722),Net_1.Net.UnRegister(21811),Net_1.Net.UnRegister(29052),Net_1.Net.UnRegister(20118),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.InitArea,this.Hlh),!0}static OnTick(e){ModelManager_1.ModelManager.TeleportModel.Treadmill&&ModelManager_1.ModelManager.TeleportModel.Treadmill.Tick(e),ModelManager_1.ModelManager.TeleportModel.IsTeleport||void 0!==TeleportController.xIo&&this.AIo(TeleportController.xIo)}static CheckCanTeleport(){return ModelManager_1.ModelManager.TeleportModel.AllowTeleport}static SetAllowTeleport(e,o){Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",48,"设置是否允许传送",["AllowTeleport",e],["Reason",o]),ModelManager_1.ModelManager.TeleportModel.AllowTeleport=e}static async TeleportToPositionNoLoading(e,o,r,t=!0,l=!1){return Global_1.Global.BaseCharacter?.IsValid()?this.QueryCanTeleportNoLoading(e,l)?this.wIo(e,o,r,void 0,0,t):(ModelManager_1.ModelManager.TeleportModel.TeleportMode=2,this.BIo(e,o,r,new TeleportDefine_1.TeleportContext)):(Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",29,"无加载传送:失败,找不到当前玩家",["Reason",r]),!1)}static QueryCanTeleportNoLoading(e,o=!1){var r=Global_1.Global.BaseCharacter;return r?.IsValid()?(o?UE.VectorDouble.Dist2D(r.CharacterActorComponent.ActorLocation,e):UE.VectorDouble.Dist(r.CharacterActorComponent.ActorLocation,e))<(ControllerHolder_1.ControllerHolder.GameModeController.IsInInstance()&&!ModelManager_1.ModelManager.GameModeModel.UseWorldPartition?DISTANCE_THRESHOLD_2:DISTANCE_THRESHOLD_1):(Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",29,"查询是否可以无加载传送:失败,找不到当前玩家"),!1)}static async TeleportToPosition(e,o,r,t){Global_1.Global.BaseCharacter?.IsValid()||Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Teleport",29,"传送:传送时无主角，建议调整配置，避免在切换编队过程中传送",["Reason",r]);let l=t;return((l=l||new TeleportDefine_1.TeleportContext).TeleportReason===Protocol_1.Aki.Protocol.v4s.ns1||l.TeleportReason===Protocol_1.Aki.Protocol.v4s.Xvs)&&ModelManager_1.ModelManager.AutoRunModel.IsInLogicTreeGmMode()||l.TeleportReason===Protocol_1.Aki.Protocol.v4s.Proto_Gm&&ModelManager_1.ModelManager.PlotModel.IsInHighLevelPlot()?(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Teleport",39,"传送:遇到不应执行传送的情况，使用伪传送替代",["TeleportReason",l.TeleportReason],["Reason",r]),TeleportController.bIo(l,r)):TeleportController.BIo(e,o,r,l)}static async TeleportToPositionNoSync(e,o,r,t){Global_1.Global.BaseCharacter?.IsValid()||Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Teleport",29,"传送:传送时无主角，建议调整配置，避免在切换编队过程中传送",["Reason",r]);let l=t;return!!(((l=l||new TeleportDefine_1.TeleportContext).TeleportReason===Protocol_1.Aki.Protocol.v4s.ns1||l.TeleportReason===Protocol_1.Aki.Protocol.v4s.Xvs)&&ModelManager_1.ModelManager.AutoRunModel.IsInLogicTreeGmMode()||l.TeleportReason===Protocol_1.Aki.Protocol.v4s.Proto_Gm&&ModelManager_1.ModelManager.PlotModel.IsInHighLevelPlot())||TeleportController.BIo(e,o,r,l,!1)}static SendTeleportTransferRequest(e){ModelManager_1.ModelManager.WorldMapModel.WaitToTeleportMarkConfigId=e,ModelManager_1.ModelManager.LoadingModel.TargetTeleportId=e,this.SendTeleportTransferRequestById(e)}static SendTeleportTransferRequestById(e){ModelManager_1.ModelManager.GameModeModel.IsTeleport=!0,ModelManager_1.ModelManager.GameModeModel.AddLoadMapHandle("SendTeleportTransferRequestById");e=Protocol_1.Aki.Protocol.mCs.create({s5n:e});Net_1.Net.Call(25269,e,e=>{ModelManager_1.ModelManager.GameModeModel.RemoveLoadMapHandle("SendTeleportTransferRequestById"),GlobalData_1.GlobalData.World?e.Q4n!==Protocol_1.Aki.Protocol.Q4n.Proto_ErrPlayerIsTeleportCanNotDoTeleport&&e.Q4n!==Protocol_1.Aki.Protocol.Q4n.KRs&&(ModelManager_1.ModelManager.GameModeModel.IsTeleport=!1,ModelManager_1.ModelManager.WorldMapModel.WaitToTeleportMarkConfigId=void 0,ControllerHolder_1.ControllerHolder.ErrorCodeController.OpenErrorCodeTipView(e.Q4n,15234)):(ModelManager_1.ModelManager.GameModeModel.IsTeleport=!1,ModelManager_1.ModelManager.WorldMapModel.WaitToTeleportMarkConfigId=void 0)})}static async wIo(e,o,r,t,l=0,a=!0){var _=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity;let n=void 0;_&&(n=_.Entity.GetComponent(3));const i=ModelManager_1.ModelManager.TeleportModel;if(i.IsTeleport)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Teleport",29,"无加载传送:重复调用,正在传送中",["Reason",r]),!1;i.CallSource=l,n?.Valid&&(i.StartPosition.DeepCopy(n.ActorLocationProxy),i.StartRotation.DeepCopy(n.ActorRotationProxy)),i.TargetPosition.DeepCopy(e),o?(i.TargetRotation.DeepCopy(o),i.TargetRotation.Pitch=0):(i.TargetRotation.Pitch=0,n?.Valid?i.TargetRotation.Yaw=n.ActorRotationProxy.Yaw:i.TargetRotation.Yaw=0),i.TargetRotation.Roll=0,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:开始",["开始位置",n.ActorLocationProxy],["目标位置",e],["开始角度",n.ActorRotationProxy.Yaw],["目标角度",o],["Reason",r]),i.IsTeleport=!0,ModelManager_1.ModelManager.GameModeModel.LoadingPhase=2,ModelManager_1.ModelManager.GameModeModel.IsTeleport=!0,ModelManager_1.ModelManager.GameModeModel.SetBornInfo(e,o),ModelManager_1.ModelManager.GameModeModel.AddLoadMapHandle("TeleportToPositionNoLoadingImpl"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:处理开始事件(开始)"),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.TeleportStart,!1),_?.Valid&&EventSystem_1.EventSystem.EmitWithTarget(_.Entity,EventDefine_1.EEventName.TeleportStartEntity,!1),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:处理开始事件(完成)"),4!==i.TeleportMode&&this.qIo(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:设置角色状态(开始)"),TeleportController.GIo(!1),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:设置角色状态(完成)"),ModelManager_1.ModelManager.GameModeModel.IsTeleport=!1,i.CreatePromise();r=new AsyncTask_1.AsyncTask("TeleportToPositionNoLoadingImpl",async()=>(ModelManager_1.ModelManager.TeleportModel.NeedRestoreCamera=a,ControllerHolder_1.ControllerHolder.GameModeController.IsInInstance()&&!ModelManager_1.ModelManager.GameModeModel.UseWorldPartition||(ModelManager_1.ModelManager.GameModeModel.LoadingPhase=11,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:检测体素流送(开始)"),await this.NIo(!0),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:检测体素流送(完成)"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=12,ModelManager_1.ModelManager.GameModeModel.LoadingPhase=13,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:检测场景流送(开始)"),await this.NIo(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:检测场景流送(完成)"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=14),ModelManager_1.ModelManager.GameModeModel.RemoveLoadMapHandle("TeleportToPositionNoLoadingImpl"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=15,ControllerHolder_1.ControllerHolder.CreatureController.CreateEntityFromPending(Protocol_1.Aki.Protocol.Nks.Proto_Normal),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=16,i.ResetPromise(),i.IsTeleport=!1,RoleAudioController_1.RoleAudioController.SetUpdateAudioDynamicTrace(!0),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:处理完成事件(开始)"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=1,EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.TeleportComplete,l),ModelManager_1.ModelManager.TeleportModel.NeedRestoreCamera=!0,TeleportController.OIo(t),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:处理完成事件(完成)"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"无加载传送:完成"),ModelManager_1.ModelManager.TeleportModel.TeleportMode=1,!0));return TaskSystem_1.TaskSystem.AddTask(r),TaskSystem_1.TaskSystem.Run(),r.Promise}static async bIo(e,o){const r=ModelManager_1.ModelManager.TeleportModel;if(r.IsTeleport)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Teleport",39,"伪传送:无法调用,正在传送中",["Reason",o]),!1;Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",39,"伪传送:开始",["原因",e.TeleportReason],["Reason",o]),r.IsTeleport=!0;var t=new AsyncTask_1.AsyncTask("FakeTeleportToPositionImpl",async()=>(r.CreatePromise(),e.TeleportReason===Protocol_1.Aki.Protocol.v4s.Proto_Gm&&await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(6),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",39,"伪传送:通知服务器传送完成(开始)"),this.kIo(),await r.TeleportFinishRequest.Promise,EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.PlotTeleportToPositionFinished),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",39,"伪传送:通知服务器传送完成(完成)"),r.ResetPromise(),r.IsTeleport=!1,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",39,"伪传送:完成",["Reason",o]),ModelManager_1.ModelManager.TeleportModel.TeleportMode=1,!0));return TaskSystem_1.TaskSystem.AddTask(t),TaskSystem_1.TaskSystem.Run(),t.Promise}static async BIo(e,o,r,t,l=!0,a=0){const _=ModelManager_1.ModelManager.TeleportModel;if(_.IsTeleport)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("Teleport",29,"传送:重复调用,正在传送中",["Reason",r]),!1;_.TeleportEntityCreatureDataId=a;let n=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity,i=void 0;switch((n=0!==a?ModelManager_1.ModelManager.CreatureModel.GetEntity(_.TeleportEntityCreatureDataId):n)&&(i=CharacterController_1.CharacterController.GetActorComponent(n)),_.CallSource=t.TeleportCallSource,i?.Valid&&(_.StartPosition.DeepCopy(i.ActorLocationProxy),_.StartRotation.DeepCopy(i.ActorRotationProxy)),_.TargetPosition.DeepCopy(e),o?(_.TargetRotation.DeepCopy(o),_.TargetRotation.Pitch=0):(_.TargetRotation.Pitch=0,i?.Valid?_.TargetRotation.Yaw=i.ActorRotationProxy.Yaw:_.TargetRotation.Yaw=0),_.TargetRotation.Roll=0,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:开始",["传送实体",_.TeleportEntityCreatureDataId],["开始位置",_.StartPosition],["目标位置",_.TargetPosition],["开始角度",_.StartRotation.Yaw],["目标角度",_.TargetRotation.Yaw],["原因",t.TeleportReason],["传送类型",t.CtxType],["Reason",r]),_.IsTeleport=!0,ModelManager_1.ModelManager.GameModeModel.SetBornInfo(e,o),ModelManager_1.ModelManager.GameModeModel.IsTeleport=!0,ModelManager_1.ModelManager.GameModeModel.LoadingPhase=2,ModelManager_1.ModelManager.GameModeModel.AddLoadMapHandle("TeleportToPositionImpl"),ModelManager_1.ModelManager.GameModeModel.RenderAssetDone=!1,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:处理开始事件(开始)",["Reason",r]),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.TeleportStart,!0),i?.Valid&&EventSystem_1.EventSystem.EmitWithTarget(n.Entity,EventDefine_1.EEventName.TeleportStartEntity,!0),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:处理开始事件(完成)"),_.CreatePromise(),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=3,t.TeleportReason){case Protocol_1.Aki.Protocol.v4s.Proto_Fall:await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(0,_.TeleportMode);break;case Protocol_1.Aki.Protocol.v4s.Proto_Rouge:break;case Protocol_1.Aki.Protocol.v4s.ns1:case Protocol_1.Aki.Protocol.v4s.Xvs:if(t.Option)switch(t.Option.p5n){case Protocol_1.Aki.Protocol.p5n.Proto_PlayMp4:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"TransitionType.PlayMp4开始"),this.FIo(t.Option.y5n);break;case Protocol_1.Aki.Protocol.p5n.Proto_CenterText:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"TransitionType.CenterText开始"),this.TeleportWithCenterTextStart(t.Option.E5n);break;case Protocol_1.Aki.Protocol.p5n.Proto_PlayEffect:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"TransitionType.PlayEffect开始"),""!==t.Option.y5n&&ResourceSystem_1.ResourceSystem.LoadAsync(t.Option.y5n,UE.EffectScreenPlayData_C,e=>{ScreenEffectSystem_1.ScreenEffectSystem.GetInstance().PlayScreenEffect(e)},102);break;case Protocol_1.Aki.Protocol.p5n.Proto_Seamless:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"TransitionType.Seamless开始"),this.SeamlessTeleportStart();break;case Protocol_1.Aki.Protocol.p5n.Proto_FadeInScreen:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"TransitionType.FadeInScreen开始"),ModelManager_1.ModelManager.GameModeModel.UseAsBlackScreen=!0,await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(7,3,1,ModelManager_1.ModelManager.GameModeModel.BlackScreenColor,!1,!1,void 0,!0);break;default:ModelManager_1.ModelManager.TeleportModel.disableAutoFade&&3===ModelManager_1.ModelManager.TeleportModel.TeleportMode||await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(6,_.TeleportMode)}else{if(ModelManager_1.ModelManager.TeleportModel.disableAutoFade&&3===ModelManager_1.ModelManager.TeleportModel.TeleportMode)break;await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(6,_.TeleportMode)}break;case Protocol_1.Aki.Protocol.v4s.Proto_TeleportVehicle:await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(6,_.TeleportMode);break;default:ModelManager_1.ModelManager.TeleportModel.disableAutoFade&&3===ModelManager_1.ModelManager.TeleportModel.TeleportMode||await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(6,_.TeleportMode)}ResourceSystem_1.ResourceSystem.SetLoadModeInLoading(GlobalData_1.GlobalData.World,r),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=4,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:处理打开loading结束事件(开始)",["Reason",r]),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.TeleportOpenLoadingEnd),i?.Valid&&EventSystem_1.EventSystem.EmitWithTarget(n.Entity,EventDefine_1.EEventName.TeleportOpenLoadingEnd),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:处理打开loading结束事件(完成)");const g=2===ModelManager_1.ModelManager.TeleportModel.TeleportMode||1===ModelManager_1.ModelManager.TeleportModel.TeleportMode;g&&ControllerHolder_1.ControllerHolder.WorldController.ForceGarbageCollection(!1),4!==_.TeleportMode&&t.TeleportReason!==Protocol_1.Aki.Protocol.v4s.Proto_TeleportVehicle&&(this.qIo(),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnUpdateSceneTeam,this.qIo));a=new AsyncTask_1.AsyncTask("TeleportToPositionImpl",async()=>{switch(PerfSightController_1.PerfSightController.StartPersistentOrDungeon(),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport"),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.CheckVoxelStreaming"),ControllerHolder_1.ControllerHolder.GameModeController.ForceDisableGamePaused(!0),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:时停解除(开始)",["Reason",r]),4===_.TeleportMode&&(InputDistributeController_1.InputDistributeController.RefreshInputTag(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:等待特效铺满屏幕(开始)"),await _.EffectFillScreen.Promise,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:等待特效铺满屏幕(结束)"),_.SeamlessConfig?.LeastTime)&&(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:等待地板资产加载完成(开始)"),await _.SeamlessAssetLoaded.Promise,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:等待地板资产加载完成(结束)"),TimerSystem_1.TimerSystem.Next(()=>{Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:地板显形(开始)"),_.Treadmill.AppearEffect(()=>{Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:地板显形(结束)"),TimerSystem_1.TimerSystem.Delay(()=>{Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:地板隐形(开始)"),_.Treadmill.DisappearEffect(()=>{Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:地板隐形(结束)"),ModelManager_1.ModelManager.TeleportModel.TransitionMapUnloaded.SetResult(!0)})},_.SeamlessConfig.LeastTime*MathUtils_1.MathUtils.SecondToMillisecond)});var e=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity.Entity.GetComponent(3),o=Vector_1.Vector.Create();_.Treadmill.GetLockOnLocation(o),e.TeleportAndFindStandLocation(o),CameraController_1.CameraController.FightCamera.LogicComponent.ResetFightCameraLogic(!1,!0)})),ModelManager_1.ModelManager.GameModeModel.StartIndependentStreaming(_.TargetPosition.ToUeVector()),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=11,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:检测体素流送(开始)"),g&&ControllerHolder_1.ControllerHolder.WorldController.ManuallyClearStreamingPool(),await this.HIo(!0),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:检测体素流送(完成)"),cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.CheckVoxelStreaming"),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.CheckStreaming"),g&&ControllerHolder_1.ControllerHolder.WorldController.ForceGarbageCollection(!1),ControllerHolder_1.ControllerHolder.GameModeController.AddOrRemoveRenderAssetsQueryViewInfo(e,ResourceSystem_1.WAIT_RENDER_ASSET_DURATION),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=13,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",7,"传送:检测场景流送(开始)"),await this.HIo(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",7,"传送:检测场景流送(完成)"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=14,cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.CheckStreaming"),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.CheckRenderAssets"),g&&(ControllerHolder_1.ControllerHolder.WorldController.ForceGarbageCollection(!1),ControllerHolder_1.ControllerHolder.WorldController.ManuallyResetStreamingPool()),ModelManager_1.ModelManager.GameModeModel.RemoveLoadMapHandle("TeleportToPositionImpl"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=15,ControllerHolder_1.ControllerHolder.CreatureController.CreateEntityFromPending(Protocol_1.Aki.Protocol.Nks.Proto_Normal),await ControllerHolder_1.ControllerHolder.GameModeController.CheckRenderAssetsStreamingCompleted(e,"传送:"),cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.CheckRenderAssets"),4===_.TeleportMode&&t.Option?.R$s?.A$s&&(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",50,"传送:等待地板卸载(开始)"),await _.TransitionMapUnloaded.Promise,Log_1.Log.CheckInfo())&&Log_1.Log.Info("Teleport",50,"传送:等待地板卸载(结束)"),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.LoadTeam"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:等待编队加载(开始)"),await ModelManager_1.ModelManager.SceneTeamModel.LoadTeamPromise?.Promise,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:等待编队加载(完成)"),cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.LoadTeam"),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.CloseLoading"),4!==_.TeleportMode&&EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnUpdateSceneTeam,this.qIo),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:设置角色状态(开始)"),TeleportController.GIo(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:设置角色状态(完成)"),ModelManager_1.ModelManager.GameModeModel?.StopIndependentStreaming(ControllerHolder_1.ControllerHolder.RoleTriggerController.GetMyRoleTriggerOrUndefined()),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=16,ModelManager_1.ModelManager.GameModeModel.IsTeleport=!1,RoleAudioController_1.RoleAudioController.SetUpdateAudioDynamicTrace(!0),ResourceSystem_1.ResourceSystem.SetLoadModeInGame(GlobalData_1.GlobalData.World,r),g&&ControllerHolder_1.ControllerHolder.WorldController.ForceGarbageCollection(!1),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.FixBornLocation),t?.TeleportReason===Protocol_1.Aki.Protocol.v4s.Proto_BtRollbackFailed?TimerSystem_1.TimerSystem.Delay(()=>{ModelManager_1.ModelManager.TeleportModel.TeleportWaitRequest?.SetResult(!0)},DELAYCLOSETIME):ModelManager_1.ModelManager.TeleportModel.TeleportWaitRequest?.SetResult(!0),await ModelManager_1.ModelManager.TeleportModel.TeleportWaitRequest?.Promise,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:CG传送完成(开始)"),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=19,t.TeleportReason){case Protocol_1.Aki.Protocol.v4s.Proto_Fall:await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(0);break;case Protocol_1.Aki.Protocol.v4s.ns1:case Protocol_1.Aki.Protocol.v4s.Xvs:if(t.Option)switch(t.Option.p5n){case Protocol_1.Aki.Protocol.p5n.Proto_PlayMp4:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:CG传送完成(开始)"),await _.CgTeleportCompleted?.Promise,await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(7),ModelManager_1.ModelManager.GameModeModel.PlayTravelMp4=!1,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:CG传送完成(完成)");break;case Protocol_1.Aki.Protocol.p5n.Proto_CenterText:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:黑幕白字传送完成(开始)"),await _.CgTeleportCompleted?.Promise,await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(7),ModelManager_1.ModelManager.GameModeModel.UseShowCenterText=!1,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:黑幕白字传送完成(完成)");break;case Protocol_1.Aki.Protocol.p5n.Proto_PlayEffect:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"TransitionType.PlayEffect结束");break;case Protocol_1.Aki.Protocol.p5n.Proto_Seamless:this.SeamlessTeleportEnd();break;case Protocol_1.Aki.Protocol.p5n.Proto_FadeInScreen:Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:纯黑幕传送完成(开始)"),await _.CgTeleportCompleted?.Promise,await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(7),ModelManager_1.ModelManager.GameModeModel.UseAsBlackScreen=!1,ModelManager_1.ModelManager.GameModeModel.BlackScreenColor=IAction_1.EFadeInScreenShowType.Black,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:纯黑幕传送完成(完成)");break;default:await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(6)}else await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(6);break;default:await LevelLoadingController_1.LevelLoadingController.WaitCloseLoading(6)}return ModelManager_1.ModelManager.GameModeModel.LoadingPhase=20,cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.CloseLoading"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:通知服务器前处理传送事件(开始)"),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.BeforeTeleportComplete),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:通知服务器前处理传送事件(完成)"),l&&(cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.TeleportFinishRequest"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:通知服务器传送完成(开始)"),this.kIo(),await _.TeleportFinishRequest.Promise,Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:通知服务器传送完成(完成)"),cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.TeleportFinishRequest")),cpp_1.FKuroPerfSightHelper.BeginExtTag("Teleport.TeleportFinish"),InputDistributeController_1.InputDistributeController.RefreshInputTag(),_.IsTeleport=!1,TeleportController.OIo(t.TeleportId),_.ResetPromise(),PerfSightController_1.PerfSightController.MarkLevelLoadCompleted(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:处理完成事件(开始)"),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.PlotTeleportToPositionFinished),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.TeleportComplete,t.TeleportCallSource,t.TeleportReason),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:处理完成事件(完成)"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:更新游戏时停状态"),ControllerHolder_1.ControllerHolder.GameModeController.ForceDisableGamePaused(!1),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:时停解除(完成)",["Reason",r]),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:完成",["Reason",r]),ModelManager_1.ModelManager.GameModeModel.LoadingPhase=1,ModelManager_1.ModelManager.TeleportModel.TeleportMode=1,cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport.TeleportFinish"),cpp_1.FKuroPerfSightHelper.EndExtTag("Teleport"),!0});return TaskSystem_1.TaskSystem.AddTask(a),TaskSystem_1.TaskSystem.Run(),a.Promise}static zQs(e,o){const r=UE.KuroRenderingRuntimeBPPluginBPLibrary.GetSubsystem(GlobalData_1.GlobalData.World,UE.WorldPartitionSubsystem.StaticClass()),t=(TeleportController.jIo=3e3,TeleportController.$ml=0,TimerSystem_1.TimerSystem.Forever(()=>{ModelManager_1.ModelManager.GameModeModel.StreamingSource?.IsValid()&&(r&&e.IsStreamingCompletedForLayers(void 0,!1,ResourceSystem_1.STREAMING_SOURCE_RADIUS,!1,void 0,!1)?(TeleportController.jIo=0,TimerSystem_1.TimerSystem.Remove(t),o.SetResult(!0)):(TeleportController.jIo+=ResourceSystem_1.CHECK_STREAMING_INTERVAL,3e3<TeleportController.jIo&&(TeleportController.jIo=0,Log_1.Log.CheckDebug())&&Log_1.Log.Debug("Teleport",29,"无加载传送:流送中",["WorldPartitionSubsystem",r?"true":"false"],["StreamingSource",e.GetOwner().D_K2_GetActorLocation()]),this.Xml(e,ResourceSystem_1.CHECK_STREAMING_INTERVAL)))},ResourceSystem_1.CHECK_STREAMING_INTERVAL));return t}static Xml(e,o,r=!1){TeleportController.$ml+=o,TeleportController.$ml>GameModeController_1.LOG_STREAMING_STUCK_INTERVAL&&(ControllerHolder_1.ControllerHolder.GameModeController.PrintWorldPartitionDebugInfo(e,void 0,!1,ResourceSystem_1.STREAMING_SOURCE_RADIUS,r),TeleportController.$ml=0)}static async NIo(e=!1){var o,r,t=ModelManager_1.ModelManager.TeleportModel;ModelManager_1.ModelManager.GameModeModel.UseWorldPartition?(ModelManager_1.ModelManager.GameModeModel.StreamingSource?.IsValid()&&!e&&ControllerHolder_1.ControllerHolder.WorldController.EnvironmentInfoUpdate(ModelManager_1.ModelManager.GameModeModel.StreamingSource.D_K2_GetActorLocation(),!0,!0),r=e?ModelManager_1.ModelManager.GameModeModel.VoxelStreamingSource:ModelManager_1.ModelManager.GameModeModel.StreamingSource,o=e?t.VoxelStreamingCompleted:t.StreamingCompleted,r=r.GetComponentByClass(UE.WorldPartitionStreamingSourceComponent.StaticClass()),t.CheckStreamingCompletedTimerId=this.zQs(r,o),await o.Promise,t.CheckStreamingCompletedTimerId=void 0):(e?t.VoxelStreamingCompleted:t.StreamingCompleted).SetResult(!0)}static ZQs(o,r,t,l=!1){var e=o.TargetGrids;Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",60,"传送:检测参数",["dataLayers",void 0!==t&&0<t.Num()?t.Get(0).toString():void 0],["targetGrids",void 0!==e&&0<e.Num()?e.Get(0).toString():void 0]);const a=UE.KuroRenderingRuntimeBPPluginBPLibrary.GetSubsystem(GlobalData_1.GlobalData.World,UE.WorldPartitionSubsystem.StaticClass());let _=!1;TeleportController.jIo=3e3,TeleportController.$ml=0;const n=TimerSystem_1.TimerSystem.Forever(()=>{var e=()=>{TeleportController.jIo+=ResourceSystem_1.CHECK_STREAMING_INTERVAL,3e3<TeleportController.jIo&&(a&&!a.IsStreamingEnable()&&a.SetStreamingEnable(!0),TeleportController.jIo=0,Log_1.Log.CheckInfo())&&Log_1.Log.Info("Teleport",29,"传送:流送中",["WorldPartitionSubsystem",a?"true":"false"],["StreamingSource",o.GetOwner().D_K2_GetActorLocation()]),this.Xml(o,ResourceSystem_1.CHECK_STREAMING_INTERVAL,_)};if(a){if(!_){const r=o.IsStreamingCompletedForLayers(t,!1,ResourceSystem_1.STREAMING_SOURCE_RADIUS,!1,void 0,!1);if(!r)return void e();(_=l)&&Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",60,"传送:检测场景物理体(开始)")}if(_){const r=o.IsStreamingCompletedForLayers(t,!1,ResourceSystem_1.STREAMING_SOURCE_RADIUS,!1,void 0,!0);if(!r)return void e();Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",60,"传送:检测场景物理体(结束)")}TeleportController.jIo=0,TimerSystem_1.TimerSystem.Remove(n),r.SetResult(!0)}else e()},ResourceSystem_1.CHECK_STREAMING_INTERVAL);return n}static async HIo(e=!1){var r=ModelManager_1.ModelManager.TeleportModel;if(ModelManager_1.ModelManager.GameModeModel.UseWorldPartition){var t=r.TargetPosition.ToUeVector();let o=void 0;if(e)UE.NewSet(UE.BuiltinName).Add(WorldDefine_1.VOXEL_GRID_NAME);else{o=UE.NewArray(UE.BuiltinName);let e=ControllerHolder_1.ControllerHolder.WorldController.EnvironmentInfoUpdate(t,!0,!0);if(e){t=(0,puerts_1.$ref)(void 0);UE.KuroRenderingRuntimeBPPluginBPLibrary.GetWorldPartitionDataLayerNameByLabel(GlobalData_1.GlobalData.World,e,t),o.Add((0,puerts_1.$unref)(t))}else for(const _ of WorldDefine_1.dataLayerRuntimeHLOD){var l=(0,puerts_1.$ref)(void 0);e=FNameUtil_1.FNameUtil.GetDynamicFName(_),UE.KuroRenderingRuntimeBPPluginBPLibrary.GetWorldPartitionDataLayerNameByLabel(GlobalData_1.GlobalData.World,e,l),o.Add((0,puerts_1.$unref)(l))}}var t=e?ModelManager_1.ModelManager.GameModeModel.VoxelStreamingSource:ModelManager_1.ModelManager.GameModeModel.StreamingSource,a=e?r.VoxelStreamingCompleted:r.StreamingCompleted,t=t.GetComponentByClass(UE.WorldPartitionStreamingSourceComponent.StaticClass());r.CheckStreamingCompletedTimerId=this.ZQs(t,a,o,!e),await a.Promise,r.CheckStreamingCompletedTimerId=void 0}else(e?r.VoxelStreamingCompleted:r.StreamingCompleted).SetResult(!0)}static kIo(){var e=new Protocol_1.Aki.Protocol.pCs;Net_1.Net.Call(25470,e,e=>{Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:TeleportFinishRequestSetResult(开始)"),ModelManager_1.ModelManager.TeleportModel.TeleportFinishRequest.SetResult(!0),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",29,"传送:TeleportFinishRequestSetResult(完成)")})}static GIo(e=!0){const l=ModelManager_1.ModelManager.TeleportModel;if(l.TeleportEntityCreatureDataId)this.P2l(l.TeleportEntityCreatureDataId,l.TargetPosition,l.TargetRotation);else{const a=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity;var o;a?.Valid?(o=a.Entity.GetComponent(3),4!==l.TeleportMode?(o.Actor.CharacterMovement?.SetMovementMode(o.Actor.CharacterMovement?.DefaultLandMovementMode),a.Entity.GetComponent(166)?.MainAnimInstance?.SyncAnimStates(void 0),o.SetInputRotator(l.TargetRotation),o.SetActorRotation(l.TargetRotation.ToUeRotator(),"TeleportController",!1),a.Entity.GetComponent(164)?.ResetCharState(),o.TeleportAndFindStandLocation(l.TargetPosition),CameraController_1.CameraController.FightCamera.LogicComponent.SetRotation(CameraUtility_1.CameraUtility.GetCameraDefaultFocusUeRotator()),CameraController_1.CameraController.FightCamera.LogicComponent.ResetFightCameraLogic(e),EventSystem_1.EventSystem.EmitWithTarget(a.Entity,EventDefine_1.EEventName.TeleportChangeLocation)):TimerSystem_1.TimerSystem.Next(()=>{var e,o,r,t=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity?.Entity?.GetComponent(3);t?.Valid?(e=l.TargetRotation.Yaw-t.ActorRotationProxy.Yaw,t.TeleportAndFindStandLocation(l.TargetPosition),t.SetInputRotator(l.TargetRotation),t.SetActorRotation(l.TargetRotation.ToUeRotator(),"TeleportController",!1),o=t.ActorVelocityProxy,r=Vector_1.Vector.Create(),Rotator_1.Rotator.Create(0,e,0).Quaternion().RotateVector(o,r),t.MoveComp.SetForceSpeed(r),o=CameraController_1.CameraController.FightCamera.LogicComponent.CameraRotation,t=MathUtils_1.MathUtils.WrapAngle(o.Yaw+e),r=new UE.Rotator(o.Pitch,t,o.Roll),CameraController_1.CameraController.FightCamera.LogicComponent.SetRotation(r),CameraController_1.CameraController.FightCamera.LogicComponent.ResetFightCameraLogic(!1,!0),EventSystem_1.EventSystem.EmitWithTarget(a.Entity,EventDefine_1.EEventName.TeleportChangeLocation)):Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",50,"无缝传送:失败,找不到当前实体")}),RoleTriggerController_1.RoleTriggerController.UpdateTransform(),TeleportController.WIo=TimerSystem_1.TimerSystem.Delay(()=>{ModelManager_1.ModelManager.DeadReviveModel.SkipFallInjure=!1,TeleportController.WIo=void 0},SKIP_FALL_INJURE_TIME),1===l.CallSource&&DeadReviveController_1.DeadReviveController.PlayerReviveEnded(),a.Entity.GetComponent(180)?.ResetDrowning()):Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",29,"传送:失败,找不到当前实体")}}static KIo(e){var o;return ControllerHolder_1.ControllerHolder.GameModeController.IsInInstance()||Global_1.Global.BaseCharacter?.IsValid()&&(o=Global_1.Global.BaseCharacter.CharacterActorComponent,o=UE.VectorDouble.Dist(o.ActorLocation,e),e=CommonParamById_1.configCommonParamById.GetIntConfig("TeleportRatingRange")?CommonParamById_1.configCommonParamById.GetIntConfig("TeleportRatingRange"):DISTANCE_THRESHOLD_1,Log_1.Log.CheckInfo()&&Log_1.Log.Info("LevelEvent",45,"QueryDefaultTeleportMode",["threshold",e]),o<e)?3:2}static OIo(e){var o;e&&(o=ConfigManager_1.ConfigManager.WorldMapConfig.GetTeleportEntityConfigId(e))&&(o=(ModelManager_1.ModelManager.CreatureModel?.GetEntityData(o))?.AreaId)&&AreaController_1.AreaController.BeginOverlap(o,"TeleportController.EnterArea teleportId:"+e,!0)}static OnLeaveLevel(){return TeleportController.jIo=0,ModelManager_1.ModelManager.TeleportModel.CheckStreamingCompletedTimerId&&(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Teleport",29,"传送:终止,离开关卡"),TimerSystem_1.TimerSystem.Has(ModelManager_1.ModelManager.TeleportModel.CheckStreamingCompletedTimerId))&&TimerSystem_1.TimerSystem.Remove(ModelManager_1.ModelManager.TeleportModel.CheckStreamingCompletedTimerId),ModelManager_1.ModelManager.TeleportModel.CheckStreamingCompletedTimerId=void 0,ModelManager_1.ModelManager.TeleportModel.CheckPhysicsCompletedTimerId=void 0,ModelManager_1.ModelManager.TeleportModel.VoxelStreamingCompleted?.SetResult(!0),ModelManager_1.ModelManager.TeleportModel.StreamingCompleted?.SetResult(!0),!0}static async FIo(e){Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:CG传送开始(视频)"),ModelManager_1.ModelManager.GameModeModel.PlayTravelMp4=!0,VideoLauncher_1.VideoLauncher.ShowVideoCg(e,()=>{ModelManager_1.ModelManager.TeleportModel.CgTeleportCompleted?.SetResult(!0)}),await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(7,2)}static async TeleportWithCenterTextStart(e){Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"传送:CG传送开始(黑幕白字)"),ModelManager_1.ModelManager.GameModeModel.UseShowCenterText=!0,e?ModelManager_1.ModelManager.PlotModel.PlayFlow=new PlotData_1.PlotFlow(e.v5n,e.M5n,e.S5n):Log_1.Log.CheckInfo()&&Log_1.Log.Info("Teleport",45,"transitionFlow为空"),await LevelLoadingController_1.LevelLoadingController.WaitOpenLoading(7,0),ModelManager_1.ModelManager.PlotModel.ShowCenterTextForTeleport()}static SeamlessTeleportStart(){const r=ModelManager_1.ModelManager.TeleportModel;r.IsInSeamlessTeleport=!0,r.Treadmill=new SeamlessTravelTreadmill_1.SeamlessTravelTreadmill,r.Treadmill.Init(r.SeamlessConfig,e=>{r.SeamlessAssetLoaded?.SetResult(e);e=Vector_1.Vector.Create();e.DeepCopy(r.TargetPosition),e.Z+=SeamlessTravelTreadmill_1.DEFAULT_SEAMLESS_TRANSITION_HEIGHT,r.Treadmill.ResetLockOnLocation(e)}),r.SeamlessConfig?.EffectPath?ResourceSystem_1.ResourceSystem.LoadAsync(r.SeamlessConfig.EffectPath,UE.EffectScreenPlayData_C,(e,o)=>{e?.IsValid()?(ModelManager_1.ModelManager.TeleportModel.SeamlessEffectData=e,ScreenEffectSystem_1.ScreenEffectSystem.GetInstance().PlayScreenEffect(e),TimerSystem_1.TimerSystem.Delay(()=>{ModelManager_1.ModelManager.TeleportModel.EffectFillScreen.SetResult(!0)},(r.SeamlessConfig?.EffectExpandTime??1)*MathUtils_1.MathUtils.SecondToMillisecond)):(Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",50,"加载无缝传送特效失败",["Path",o]),ModelManager_1.ModelManager.TeleportModel.EffectFillScreen.SetResult(!1))},102):(Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",50,"没有配置无缝传送特效路径"),ModelManager_1.ModelManager.TeleportModel.EffectFillScreen.SetResult(!1)),ModelManager_1.ModelManager.BattleUiModel.ChildViewData.HideBattleView(4,[12,23])}static SeamlessTeleportEnd(){var e,o=ModelManager_1.ModelManager.TeleportModel;o.IsInSeamlessTeleport&&(e=o.SeamlessEffectData,ScreenEffectSystem_1.ScreenEffectSystem.GetInstance().EndScreenEffect(e),o.SeamlessEndHandle=TimerSystem_1.TimerSystem.Delay(()=>{this.FinishSeamlessTeleport()},o.SeamlessConfig.EffectCollapseTime*MathUtils_1.MathUtils.SecondToMillisecond),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.SeamlessTravelFinishBeforeShowUI),ModelManager_1.ModelManager.BattleUiModel.ChildViewData.ShowBattleView(4),InputDistributeController_1.InputDistributeController.RefreshInputTag())}static FinishSeamlessTeleport(){var e=ModelManager_1.ModelManager.TeleportModel;e.IsInSeamlessTeleport&&(e.Treadmill.Destroy(),e.Treadmill=void 0,e.SeamlessEffectData=void 0,e.SeamlessEndHandle=void 0,e.IsInSeamlessTeleport=!1,e.SeamlessConfig=void 0,InputDistributeController_1.InputDistributeController.RefreshInputTag())}static ParseTeleportTransitionOptionToPb(e){var o,r=Protocol_1.Aki.Protocol.t4s.create();switch(e?.Type){case IAction_1.ETeleportTransitionType.PlayMp4:r.p5n=Protocol_1.Aki.Protocol.p5n.Proto_PlayMp4,r.y5n=e.Mp4Path;break;case IAction_1.ETeleportTransitionType.PlayEffect:r.p5n=Protocol_1.Aki.Protocol.p5n.Proto_PlayEffect,r.y5n=e.EffectDaPath;break;case IAction_1.ETeleportTransitionType.CenterText:r.p5n=Protocol_1.Aki.Protocol.p5n.Proto_CenterText,r.E5n=Protocol_1.Aki.Protocol.M4s.create(),r.E5n.M5n=e.CenterTextFlow.FlowId,r.E5n.v5n=e.CenterTextFlow.FlowListName,r.E5n.S5n=e.CenterTextFlow.StateId;break;case IAction_1.ETeleportTransitionType.Seamless:r.p5n=Protocol_1.Aki.Protocol.p5n.Proto_Seamless,r.R$s=Protocol_1.Aki.Protocol.w$s.create(),r.R$s.D$s=e.EffectDaPath,r.R$s.A$s=e.LeastTime,r.R$s.U$s=e.EffectExpandTime,r.R$s.P$s=e.EffectCollapseTime,r.R$s.cta=!!e.FloorSettings,e.FloorSettings&&((o=Protocol_1.Aki.Protocol.Eta.create()).Cta=e.FloorSettings.MaterialPath,o.mta=e.FloorSettings.MeshPath,o.gta=e.FloorSettings.Scale.X??1,o.fta=e.FloorSettings.Scale.Y??1,o.vta=e.FloorSettings.ShowTime,o.pta=e.FloorSettings.DisappearTime,r.R$s.dta=o);break;case IAction_1.ETeleportTransitionType.FadeInScreen:r.p5n=Protocol_1.Aki.Protocol.p5n.Proto_FadeInScreen,r.EIl=e.ScreenType===IAction_1.EFadeInScreenShowType.Black?1:0;break;default:r.p5n=Protocol_1.Aki.Protocol.p5n.Proto_Empty}return r}static P2l(e,o,r){var e=ModelManager_1.ModelManager.CreatureModel.GetEntity(e),o=Vector_1.Vector.Create(o),t=CharacterController_1.CharacterController.GetActorComponent(e),l=e.Entity.GetComponent(3);l?l.FixBornLocation("ResetLocationForZRangeNotify",!0,o,!1,!0):t.SetActorLocation(o.ToUeVector(),"ResetLocationForZRangeNotify",!1),t.SetActorRotation(r.ToUeRotator(),"ResetLocationForZRangeNotify"),e.Entity.GetComponent(167)?.SetForceSpeed(Vector_1.Vector.ZeroVectorProxy),e.Entity.GetComponent(60)?.ClearReplaySamples(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Entity",14,"传送载具：设置载具实体位置",["CreatureDataId",e.CreatureDataId],["PbDataId",e.PbDataId],["EntityId",e.Entity.Id],["Location",o.ToString()])}}exports.TeleportController=TeleportController,(_a=TeleportController).jIo=0,TeleportController.$ml=0,TeleportController.WIo=void 0,TeleportController.xIo=void 0,TeleportController.qIo=()=>{TeleportController.WIo&&(TimerSystem_1.TimerSystem.Remove(TeleportController.WIo),TeleportController.WIo=void 0),ModelManager_1.ModelManager.DeadReviveModel.SkipFallInjure=!0;var e=ModelManager_1.ModelManager.SceneTeamModel.GetCurrentEntity;e?.Valid&&(e=e.Entity.GetComponent(3))?.Valid&&e.Actor?.IsValid()&&e.Actor.CharacterMovement?.IsValid()&&e.Actor.CharacterMovement.SetMovementMode(0)},TeleportController.AIo=e=>{var o=e.cvs,r=e.f5n,t=(ModelManager_1.ModelManager.TeleportModel.disableAutoFade=e.Mo1,ModelManager_1.ModelManager.WorldMapModel.WaitToTeleportMarkConfigId),l=new TeleportDefine_1.TeleportContext(e.x9n,t,void 0,o?o.fvs:void 0,r);const a=new UE.VectorDouble(e.D7n,e.A7n,e.L7n);t=new UE.Rotator(0,e.YDs,0);let _="";try{_=JSON.stringify(o)}catch{_="Context序列化解析失败"}if(Log_1.Log.CheckInfo()&&Log_1.Log.Info("LevelEvent",7,"服务端驱动执行行为组",["Context",_],["PosX",e.D7n],["PosY",e.A7n],["PosZ",e.L7n],["Reason",e.x9n]),ModelManager_1.ModelManager.TeleportModel.IsTeleport)TeleportController.xIo=e,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Teleport",29,"传送: 传送中，缓存TeleportNotify",["开始位置",ModelManager_1.ModelManager.TeleportModel.StartPosition],["目标位置",ModelManager_1.ModelManager.TeleportModel.TargetPosition],["开始角度",ModelManager_1.ModelManager.TeleportModel.StartRotation.Yaw],["目标角度",ModelManager_1.ModelManager.TeleportModel.TargetRotation.Yaw],["原因",l.TeleportReason]);else{switch(TeleportController.xIo=void 0,l.TeleportReason){case Protocol_1.Aki.Protocol.v4s.ns1:case Protocol_1.Aki.Protocol.v4s.Xvs:if(r)switch(r.p5n){case Protocol_1.Aki.Protocol.p5n.Proto_CenterText:ModelManager_1.ModelManager.TeleportModel.TeleportMode=0;break;case Protocol_1.Aki.Protocol.p5n.Proto_Seamless:ModelManager_1.ModelManager.TeleportModel.TeleportMode=4,ModelManager_1.ModelManager.TeleportModel.SeamlessEndHandle&&(TimerSystem_1.TimerSystem.Remove(ModelManager_1.ModelManager.TeleportModel.SeamlessEndHandle),ModelManager_1.ModelManager.TeleportModel.SeamlessEndHandle=void 0),ModelManager_1.ModelManager.TeleportModel.SeamlessConfig=new SeamlessTravelDefine_1.SeamlessTravelContext,ModelManager_1.ModelManager.TeleportModel.SeamlessConfig.ParseConfig(l.Option.R$s);break;default:ModelManager_1.ModelManager.TeleportModel.TeleportMode=_a.KIo(a)}else ModelManager_1.ModelManager.TeleportModel.TeleportMode=_a.KIo(a);break;case Protocol_1.Aki.Protocol.v4s.Proto_BtRollbackFailed:r?.p5n===Protocol_1.Aki.Protocol.p5n.Proto_FadeInScreen?ModelManager_1.ModelManager.TeleportModel.TeleportMode=3:ModelManager_1.ModelManager.TeleportModel.TeleportMode=_a.KIo(a);break;case Protocol_1.Aki.Protocol.v4s.Proto_Drown:ModelManager_1.ModelManager.TeleportModel.TeleportMode=2;break;case Protocol_1.Aki.Protocol.v4s.Proto_Fall:ModelManager_1.ModelManager.TeleportModel.TeleportMode=3;break;default:ModelManager_1.ModelManager.TeleportModel.TeleportMode=1}WorldController_1.WorldController.StartWorldOriginInLoadingMode("Teleport"),TeleportController.TeleportToPosition(a,t,"OnTeleportNotify",l).finally(()=>{ModelManager_1.ModelManager.TeleportModel.TeleportMode=1,WorldController_1.WorldController.EndWorldOriginInLoadingMode("Teleport",a)}),ModelManager_1.ModelManager.WorldMapModel.WaitToTeleportMarkConfigId=void 0}},TeleportController.Hlh=()=>{ModelManager_1.ModelManager.WorldMapModel.WaitToTeleportMarkConfigId=void 0},TeleportController.u3l=e=>{ModelManager_1.ModelManager.PlayerInfoModel?.GetId()!==e.W5n&&GenericPromptController_1.GenericPromptController.ShowPromptByItsType(27,void 0,void 0,void 0,void 0,void 0,void 0,void 0,e.Eo1)},TeleportController.PIo=e=>{ModelManager_1.ModelManager.DeadReviveModel.SkipDeathAnim=!1},TeleportController.A2l=e=>{var o,r,t;e.P5n?(o=new UE.VectorDouble(e.P5n.X,e.P5n.Y,e.P5n.Z),r=Rotator_1.Rotator.Create(e.g8n?.Pitch??0,e.g8n?.Yaw??0,e.g8n?.Roll??0),t=MathUtils_1.MathUtils.LongToNumber(e.bo1),e.Io1?.length?(ModelManager_1.ModelManager.TeleportModel.TeleportMode=1,TeleportController.BIo(o,r.ToUeRotator(),"OnTeleportVehicleNotify",new TeleportDefine_1.TeleportContext(e.x9n),!0,t)):_a.P2l(t,o,r)):Log_1.Log.CheckError()&&Log_1.Log.Error("Teleport",18,"传送载具：目标位置错误")};
//# sourceMappingURL=TeleportController.js.map