
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreeExpressAssistant=void 0;const Protocol_1=require("../../../../Core/Define/Net/Protocol"),IQuest_1=require("../../../../UniverseEditor/Interface/IQuest"),EventDefine_1=require("../../../Common/Event/EventDefine"),EventSystem_1=require("../../../Common/Event/EventSystem"),PublicUtil_1=require("../../../Common/PublicUtil"),LevelGamePlayUtils_1=require("../../../LevelGamePlay/LevelGamePlayUtils"),LevelGeneralContextDefine_1=require("../../../LevelGamePlay/LevelGeneralContextDefine"),LevelGeneralController_1=require("../../../LevelGamePlay/LevelGeneralController"),ConfigManager_1=require("../../../Manager/ConfigManager"),ModelManager_1=require("../../../Manager/ModelManager"),InteractBehaviorNode_1=require("../BehaviorNode/ChildQuestNode/InteractBehaviorNode"),ControllerAssistantBase_1=require("./ControllerAssistantBase"),ONE_HUNDRED=100;class TreeExpressAssistant extends ControllerAssistantBase_1.ControllerAssistantBase{constructor(){super(...arguments),this.eet=(e,t)=>{e&&this.ApplyOccupyTreeExpression(e.BtType,e.Id,e.IsInChallenge)},this.aYt=e=>{e&&this.ApplyOccupyTreeExpression(e.BtType,e.Id,e.IsInChallenge)}}OnDestroy(){}OnAddEvents(){EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.GeneralLogicTreeStartShowTrackText,this.eet),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.GeneralLogicTreeUpdateShowTrackText,this.aYt)}OnRemoveEvents(){EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.GeneralLogicTreeStartShowTrackText,this.eet),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.GeneralLogicTreeUpdateShowTrackText,this.aYt)}IsShowNodeStatus(e){let t=!1;if(e)switch(e.QuestScheduleType.Type){case IQuest_1.EQuestScheduleType.ChildQuestCompleted:t=e.QuestScheduleType.ShowComplete;break;case IQuest_1.EQuestScheduleType.TimeLeft:case IQuest_1.EQuestScheduleType.Condition:t=!0}return t}GetTitleTrackNodeId(e){let t=0;return t=e&&e.QuestScheduleType.Type===IQuest_1.EQuestScheduleType.ChildQuestCompleted?e.QuestScheduleType.ChildQuestId:t}IsShowTrackDistance(e,t){let r=!1;return r=t&&t.QuestScheduleType.Type===IQuest_1.EQuestScheduleType.ChildQuestCompleted?!!this.IsShowNodeTrackDistance(e,t.QuestScheduleType.ChildQuestId)&&t.QuestScheduleType.ShowTracking:r}IsShowNodeTrackDistance(e,t){e=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(e);return!!e&&e.GetNode(t)?.ContainTag(0)}GetTitleText(t,r){let a="";var s=r.QuestScheduleType;if(s){var o=r.ShowConditions;const c=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);let e=void 0;if(!o||!c||(e=LevelGeneralContextDefine_1.GeneralLogicTreeContext.Create(c.BtType,c.TreeIncId,c.TreeConfigId),LevelGeneralController_1.LevelGeneralController.CheckConditionNew(o,void 0,e)))switch(s.Type){case IQuest_1.EQuestScheduleType.None:a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle);break;case IQuest_1.EQuestScheduleType.ChildQuestCompleted:var n=s;a=n.TitlePreState&&r.UsePreStateText?this.GetNodeTrackText(t,n.ChildQuestId,n.TitlePreState?.TidPreStateTitle,n.Vars):this.GetNodeTrackText(t,n.ChildQuestId,r.TidTitle,n.Vars);break;case IQuest_1.EQuestScheduleType.TimeLeft:a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle),s.ShowTime&&(n=Math.floor(c.GetChallengeRemainTime(s.TimerType)),a=a.replace("{q_count}",""+n));break;case IQuest_1.EQuestScheduleType.EntityHP:var n=ModelManager_1.ModelManager.CreatureModel.GetEntityByPbDataId(s.EntityId);n&&(n=n.Entity.GetComponent(168))&&(i=n.GetCurrentValue(Protocol_1.Aki.Protocol.Vks.Proto_Life),n=n.GetCurrentValue(Protocol_1.Aki.Protocol.Vks.l5n),i=Math.floor(i/n*ONE_HUNDRED),a=(a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle)).replace("{q_count}",i+"%"));break;case IQuest_1.EQuestScheduleType.ChildQuestCompletedCount:{const c=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(!c)break;var n=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle),i=s.AssociatedChildQuestIds,l=i.length;let e=0;for(const u of i)c.GetNode(u)?.IsSuccess&&e++;a=`${n}(${e}/${l})`;break}case IQuest_1.EQuestScheduleType.Score:a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle);i=this.ConvertStringToScoreTexture(ModelManager_1.ModelManager.ScoreModel.GetCurrentScore()?.toString());a=(a=a.replace("{currentScore}",""+i)).replace("{targetScore}",""+ModelManager_1.ModelManager.ScoreModel.GetTargetScore());break;case IQuest_1.EQuestScheduleType.TowerChallengeTitle:ModelManager_1.ModelManager.TowerModel.CheckInTower()&&(a=ModelManager_1.ModelManager.TowerModel.GetCurrentFloorName());break;case IQuest_1.EQuestScheduleType.Var:{const c=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(!c)break;a=this.m2_(r.TidTitle,s.Var,void 0!==s.ShowAsWordArt,e??LevelGeneralContextDefine_1.GeneralLogicTreeContext.Create(c.BtType,c.TreeIncId,c.TreeConfigId));break}case IQuest_1.EQuestScheduleType.MultiVar:case IQuest_1.EQuestScheduleType.Condition:{const c=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(!c)break;n=s.Vars;if(a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle),!n||0===n.length)break;var _=s?.ShowAsWordArt;for(const v of n)a=this.m2_(a,v,void 0!==_,e??LevelGeneralContextDefine_1.GeneralLogicTreeContext.Create(c.BtType,c.TreeIncId,c.TreeConfigId));break}case IQuest_1.EQuestScheduleType.ProgressValue:var l=ModelManager_1.ModelManager.CreatureModel.GetEntityByPbDataId(s.TargetProgressEntity);l&&(i=l.Entity.GetComponent(124))&&(n=i.GetProgressData()?.CurrentValue??0,i=0===(l=i.GetProgressData()?.MaxValue??0)?0:Math.round(n/l*100),l=Math.round(n),a=(a=(a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle)).replace("{percent}",i+"%")).replace("{real_progress}",""+l))}}return a}m2_(e,t,r,a){a=LevelGamePlayUtils_1.LevelGamePlayUtils.GetVarValue(t,a);return void 0===a?"":this.FormatStepTextByVarValue(e,t,a,r)}GetNodeTrackText(e,t,r,a){var s=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(e);if(!s)return"";var o=s.GetNode(t);if(!o)return"";var n=r??o.TrackTextConfig;if(void 0===n||0===n.length)return"";let i=void 0;switch(o.TrackTextRule){case 0:i=PublicUtil_1.PublicUtil.GetConfigTextByKey(n);break;case 1:var l=PublicUtil_1.PublicUtil.GetConfigTextByKey(n),_=o.GetProgress()??"0",c=o.GetProgressMax()??"0";i=l.replace("{q_count}",_).replace("{q_countMax}",c);break;case 2:l=PublicUtil_1.PublicUtil.GetConfigTextByKey(n);i=o.GetCustomTrackText(l)}if(!(i="ChildQuest"===o.NodeType&&o instanceof InteractBehaviorNode_1.InteractBehaviorNode&&o.AlwaysFalseChildNode?o.OccupationInfo??i:i))return"";if(a&&0!==a.length)for(const u of a)i=this.m2_(i,u,!1,LevelGeneralContextDefine_1.GeneralLogicTreeContext.Create(s.BtType,s.TreeIncId,s.TreeConfigId));return i}FormatStepTextByVarValue(e,t,r,a){let s="",o=(s=PublicUtil_1.PublicUtil.GetConfigTextByKey(e),r.toString());switch(a&&"number"==typeof r&&(o=this.ConvertStringToScoreTexture(r.toString())),t.Source){case"Global":s=s.replace(`{${t.Keyword}}`,o);break;case"Other":case"Self":s=s.replace(`{${t.Name}}`,o)}return s=s.replace("{q_count}",o)}ConvertStringToScoreTexture(e){let t="";if(e)for(const a of e){var r=ConfigManager_1.ConfigManager.UiResourceConfig.GetResourcePath("T_Num"+a);t+=`<texture=${r}/>`}return t}ApplyOccupyTreeExpression(e,t,r){switch(e){case Protocol_1.Aki.Protocol.hps.Proto_BtTypeQuest:break;case Protocol_1.Aki.Protocol.hps.Proto_BtTypeInst:case Protocol_1.Aki.Protocol.hps.Proto_BtTypeLevelPlay:r&&this._Yt(t)}}_Yt(e){ModelManager_1.ModelManager.GeneralLogicTreeModel.ApplyExpressionOccupation(e)}TryReleaseExpressionOccupation(e){ModelManager_1.ModelManager.GeneralLogicTreeModel.TryReleaseExpressionOccupation(e)}}exports.TreeExpressAssistant=TreeExpressAssistant;
//# sourceMappingURL=TreeExpressAssistant.js.map