
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreeExpressAssistant=void 0;const Protocol_1=require("../../../../Core/Define/Net/Protocol"),MathUtils_1=require("../../../../Core/Utils/MathUtils"),IQuest_1=require("../../../../UniverseEditor/Interface/IQuest"),IVar_1=require("../../../../UniverseEditor/Interface/IVar"),EventDefine_1=require("../../../Common/Event/EventDefine"),EventSystem_1=require("../../../Common/Event/EventSystem"),PublicUtil_1=require("../../../Common/PublicUtil"),LevelGeneralContextDefine_1=require("../../../LevelGamePlay/LevelGeneralContextDefine"),LevelGeneralController_1=require("../../../LevelGamePlay/LevelGeneralController"),ConfigManager_1=require("../../../Manager/ConfigManager"),ModelManager_1=require("../../../Manager/ModelManager"),ControllerAssistantBase_1=require("./ControllerAssistantBase"),ONE_HUNDRED=100;class TreeExpressAssistant extends ControllerAssistantBase_1.ControllerAssistantBase{constructor(){super(...arguments),this.eet=(e,t)=>{e&&e.BtType&&e.TreeIncId&&this.ApplyOccupyTreeExpression(e.BtType,e.TreeIncId,e.IsInChallenge)},this.aYt=e=>{e&&e.BtType&&e.TreeIncId&&this.ApplyOccupyTreeExpression(e.BtType,e.TreeIncId,e.IsInChallenge)}}OnDestroy(){}OnAddEvents(){EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.GeneralLogicTreeStartShowTrackText,this.eet),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.GeneralLogicTreeUpdateShowTrackText,this.aYt)}OnRemoveEvents(){EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.GeneralLogicTreeStartShowTrackText,this.eet),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.GeneralLogicTreeUpdateShowTrackText,this.aYt)}IsShowNodeStatus(e){let t=!1;if(e)switch(e.QuestScheduleType.Type){case IQuest_1.EQuestScheduleType.ChildQuestCompleted:t=e.QuestScheduleType.ShowComplete;break;case IQuest_1.EQuestScheduleType.TimeLeft:case IQuest_1.EQuestScheduleType.Condition:t=!0}return t}GetTitleTrackNodeId(e){let t=0;return t=e&&e.QuestScheduleType.Type===IQuest_1.EQuestScheduleType.ChildQuestCompleted?e.QuestScheduleType.ChildQuestId:t}IsShowTrackDistance(e,t){let r=!1;return r=t&&t.QuestScheduleType.Type===IQuest_1.EQuestScheduleType.ChildQuestCompleted?!!this.IsShowNodeTrackDistance(e,t.QuestScheduleType.ChildQuestId)&&t.QuestScheduleType.ShowTracking:r}IsShowNodeTrackDistance(e,t){e=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(e);return!!e&&e.GetNode(t)?.ContainTag(0)}GetTitleText(t,r){let a="";if(r){var e=r?.ShowConditions;const l=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(e&&l){var n=LevelGeneralContextDefine_1.GeneralLogicTreeContext.Create(l.BtType,l.TreeIncId,l.TreeConfigId,void 0,void 0);if(!LevelGeneralController_1.LevelGeneralController.CheckConditionNew(e,void 0,n))return a}switch(r.QuestScheduleType.Type){case IQuest_1.EQuestScheduleType.None:a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle);break;case IQuest_1.EQuestScheduleType.ChildQuestCompleted:var s=r.QuestScheduleType;a=this.GetNodeTrackText(t,s.ChildQuestId,r.TidTitle,s.Vars);break;case IQuest_1.EQuestScheduleType.TimeLeft:a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle);break;case IQuest_1.EQuestScheduleType.EntityHP:var s=ModelManager_1.ModelManager.CreatureModel.GetEntityByPbDataId(r.QuestScheduleType.EntityId);s&&(s=s.Entity.GetComponent(162))&&(i=s.GetCurrentValue(Protocol_1.Aki.Protocol.Vks.Proto_Life),s=s.GetCurrentValue(Protocol_1.Aki.Protocol.Vks.l5n),i=Math.floor(i/s*ONE_HUNDRED),a=(a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle)).replace("{q_count}",i+"%"));break;case IQuest_1.EQuestScheduleType.ChildQuestCompletedCount:{const l=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(!l)break;var s=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle),i=r.QuestScheduleType.AssociatedChildQuestIds,o=i.length;let e=0;for(const _ of i)l.GetNode(_)?.IsSuccess&&e++;a=`${s}(${e}/${o})`;break}case IQuest_1.EQuestScheduleType.Score:a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle);i=this.Okn(ModelManager_1.ModelManager.ScoreModel.GetCurrentScore()?.toString());a=(a=a.replace("{currentScore}",""+i)).replace("{targetScore}",""+ModelManager_1.ModelManager.ScoreModel.GetTargetScore());break;case IQuest_1.EQuestScheduleType.TowerChallengeTitle:ModelManager_1.ModelManager.TowerModel.CheckInTower()&&(a=ModelManager_1.ModelManager.TowerModel.GetCurrentFloorName());break;case IQuest_1.EQuestScheduleType.Var:{const l=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(!l)break;s=r.QuestScheduleType,o=s.Var.Type;if("Int"!==o&&"Float"!==o&&"String"!==o&&"Boolean"!==o)break;i=this.hYt(l,s.Var);a=(a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle)).replace("{q_count}",i);break}case IQuest_1.EQuestScheduleType.MultiVar:case IQuest_1.EQuestScheduleType.Condition:{const l=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(t);if(!l)break;o=r.QuestScheduleType.Vars;a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle),a=this.lYt(l,a,o);break}case IQuest_1.EQuestScheduleType.ProgressValue:s=ModelManager_1.ModelManager.CreatureModel.GetEntityByPbDataId(r.QuestScheduleType.TargetProgressEntity);s&&(i=s.Entity.GetComponent(118))&&(o=i.GetProgressData()?.CurrentValue??0,i=0===(s=i.GetProgressData()?.MaxValue??0)?0:Math.round(o/s*100),s=Math.round(o),a=(a=(a=PublicUtil_1.PublicUtil.GetConfigTextByKey(r.TidTitle)).replace("{percent}",i+"%")).replace("{real_progress}",""+s))}}return a}Okn(e){let t="";if(e)for(const a of e){var r=ConfigManager_1.ConfigManager.UiResourceConfig.GetResourcePath("T_Num"+a);t+=`<texture=${r}/>`}return t}lYt(e,t,r){if(r&&0!==r.length)for(const n of r){var a;"Self"!==n.Source&&"Other"!==n.Source||(a=this.hYt(e,n),void 0!==n&&(t=t.replace(`{${n.Name}}`,a)))}return t}hYt(e,t){var r=t.Source,a=t.Type;if("Constant"===r)return String(t.Value);if("Self"===r||"Other"===r){var n=e.GetTreeVarByKey(t.Name);if(void 0===n)return"";if(n.iTs===(0,IVar_1.getVarConfigIndex)(a))switch(a){case"Boolean":return String(n.rTs);case"Int":return String(MathUtils_1.MathUtils.LongToNumber(n.oTs));case"Float":return String(n.sTs);case"String":return n.nTs??""}}return""}GetNodeTrackText(e,t,r,a){e=ModelManager_1.ModelManager.GeneralLogicTreeModel.GetBehaviorTree(e);if(!e)return"";var n=e.GetNode(t);if(!n)return"";var s=r??n.TrackTextConfig;if(void 0===s||0===s.length)return"";let i=void 0;switch(n.TrackTextRule){case 0:i=PublicUtil_1.PublicUtil.GetConfigTextByKey(s);break;case 1:var o=PublicUtil_1.PublicUtil.GetConfigTextByKey(s),l=n.GetProgress()??"0",_=n.GetProgressMax()??"0";i=o.replace("{q_count}",l).replace("{q_countMax}",_);break;case 2:o=PublicUtil_1.PublicUtil.GetConfigTextByKey(s);i=n.GetCustomTrackText(o)}return(i=i&&this.lYt(e,i,a))??""}ApplyOccupyTreeExpression(e,t,r){switch(e){case Protocol_1.Aki.Protocol.hps.Proto_BtTypeQuest:break;case Protocol_1.Aki.Protocol.hps.Proto_BtTypeInst:case Protocol_1.Aki.Protocol.hps.Proto_BtTypeLevelPlay:r&&this._Yt(t)}}_Yt(e){ModelManager_1.ModelManager.GeneralLogicTreeModel.ApplyExpressionOccupation(e)}TryReleaseExpressionOccupation(e){ModelManager_1.ModelManager.GeneralLogicTreeModel.TryReleaseExpressionOccupation(e)}}exports.TreeExpressAssistant=TreeExpressAssistant;
//# sourceMappingURL=TreeExpressAssistant.js.map