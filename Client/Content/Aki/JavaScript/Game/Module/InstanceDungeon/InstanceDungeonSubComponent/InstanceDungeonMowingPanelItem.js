
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.InstanceDungeonMowingPanelItem=void 0;const ue_1=require("ue"),ModelManager_1=require("../../../Manager/ModelManager"),RedDotController_1=require("../../../RedDot/RedDotController"),UiPanelBase_1=require("../../../Ui/Base/UiPanelBase"),UiManager_1=require("../../../Ui/UiManager");class InstanceDungeonMowingPanelItem extends UiPanelBase_1.UiPanelBase{constructor(){super(...arguments),this.tth=void 0,this.k9a=()=>{UiManager_1.UiManager.OpenView("MowingBuffView",0)},this.N9a=()=>{UiManager_1.UiManager.OpenView("ActivityRewardPopUpView",ModelManager_1.ModelManager.MowingRiskModel.BuildActivityRewardViewData())}}OnRegisterComponent(){this.ComponentRegisterInfos=[[0,ue_1.UIButtonComponent],[1,ue_1.UIItem],[2,ue_1.UIButtonComponent],[3,ue_1.UIItem],[4,ue_1.UIText],[5,ue_1.UIItem]],this.BtnBindInfo=[[0,this.k9a],[2,this.N9a]]}OnStart(){this.GetItem(5).SetUIActive(!1),RedDotController_1.RedDotController.BindRedDot("RedDotMowingRiskBuffAll",this.GetItem(1)),RedDotController_1.RedDotController.BindRedDot("RedDotMowingRiskReward",this.GetItem(3)),this.tth?.HaveRefresh&&this.RefreshItem()}OnBeforeDestroy(){RedDotController_1.RedDotController.UnBindRedDot("RedDotMowingRiskBuffAll"),RedDotController_1.RedDotController.UnBindRedDot("RedDotMowingRiskReward")}RefreshItem(){this.InAsyncLoading()?this.tth={HaveRefresh:!0}:this.GetText(4).SetText(ModelManager_1.ModelManager.MowingRiskModel.BuildInstanceTotalScore())}}exports.InstanceDungeonMowingPanelItem=InstanceDungeonMowingPanelItem;
//# sourceMappingURL=InstanceDungeonMowingPanelItem.js.map