
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SceneTeamModel=void 0;const puerts_1=require("puerts"),UE=require("ue"),Log_1=require("../../../Core/Common/Log"),Stats_1=require("../../../Core/Common/Stats"),CommonParamById_1=require("../../../Core/Define/ConfigCommon/CommonParamById"),TrialRoleInfoById_1=require("../../../Core/Define/ConfigQuery/TrialRoleInfoById"),Protocol_1=require("../../../Core/Define/Net/Protocol"),ModelBase_1=require("../../../Core/Framework/ModelBase"),Vector_1=require("../../../Core/Utils/Math/Vector"),MathUtils_1=require("../../../Core/Utils/MathUtils"),EventDefine_1=require("../../Common/Event/EventDefine"),EventSystem_1=require("../../Common/Event/EventSystem"),StatDefine_1=require("../../Common/StatDefine"),Global_1=require("../../Global"),GlobalData_1=require("../../GlobalData"),ControllerHolder_1=require("../../Manager/ControllerHolder"),ModelManager_1=require("../../Manager/ModelManager"),CharacterController_1=require("../../NewWorld/Character/CharacterController"),CharacterUnifiedStateTypes_1=require("../../NewWorld/Character/Common/Component/Abilities/CharacterUnifiedStateTypes"),RoleTeamComponent_1=require("../../NewWorld/Character/Role/Component/RoleTeamComponent"),GameModePromise_1=require("../../World/Define/GameModePromise"),WaitEntityTask_1=require("../../World/Define/WaitEntityTask"),WorldGlobal_1=require("../../World/WorldGlobal"),UiBlueprintFunctionLibrary_1=require("../BpBridge/UiBlueprintFunctionLibrary"),RoleDefine_1=require("../RoleUi/RoleDefine"),SceneTeamData_1=require("./SceneTeamData"),SceneTeamDefine_1=require("./SceneTeamDefine"),SceneTeamItem_1=require("./SceneTeamItem");class SceneTeamModel extends ModelBase_1.ModelBase{constructor(){super(...arguments),this.Xpo=void 0,this.$po=new Map,this.aPr=new Array,this.Jpo=new Set,this.Wll=new Set,this.CurrentGroupType=void 0,this.Vpo=void 0,this.zpo=void 0,this.YBi=void 0,this.IsTeamReady=!1,this.ChangingRole=!1,this.ChangingTeam=!1,this.IsPhantomTeam=!1,this.PanelQteHandleId=0,this.PanelQteRoleIdSet=new Set,this.ChangeRoleCooldown=-0,this.Zpo=void 0,this.LastEntityIsOnGround=!0,this.LoadTeamPromise=void 0,this.vwa=void 0,this.Mwa=e=>{this.vwa!==e&&(this.vwa=e)}}OnInit(){return this.ChangeRoleCooldown=CommonParamById_1.configCommonParamById.GetFloatConfig("change_role_cooldown"),this.Xpo=Stats_1.Stat.Create("SceneTeamModel.OnChangeRoleStat","",StatDefine_1.BATTLESTAT_GROUP),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnGlobalFootstepMaterialChange,this.Mwa),!0}OnClear(){return EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnGlobalFootstepMaterialChange,this.Mwa),!0}OnLeaveLevel(){return this.evo(),!0}OnChangeMode(){return this.evo(),!0}evo(){this.Zpo=void 0;for(const e of this.$po.values())e.Clear();this.$po.clear();for(const t of this.aPr)t.Reset();this.aPr.length=0,this.Jpo.clear(),this.Wll.clear(),this.PanelQteHandleId=0,this.PanelQteRoleIdSet.clear(),this.Vpo=void 0,this.YBi=void 0,this.IsPhantomTeam=!1,this.zpo=void 0}SwitchGroup(e,t,r=!1){var o,i=this.$po.get(e);i?(Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"切换编队组",["PlayerId",e],["GroupType",t]),t!==i.GetCurrentGroupType()&&(o=this.CurrentGroupType,i.SwitchGroup(t),e===ModelManager_1.ModelManager.PlayerInfoModel?.GetId()&&(this.CurrentGroupType=t,this.IsPhantomTeam=2===t),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnUpdateTeamGroupType),this.tvo(o,r))):Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"切换编队组玩家不存在",["PlayerId",e])}UpdateGroupData(e,t){let r=this.$po.get(e);r||(r=SceneTeamData_1.SceneTeamPlayer.Create(e),this.$po.set(e,r)),r.UpdateGroup(t.GroupType,t.GroupRoleList,t.CurrentRoleId,t.LivingState??1,t.IsFixedLocation??!1,t.IsRetain??!1),r.RefreshEntityVisible(),t.GroupType===this.$po.get(e)?.GetCurrentGroupType()&&this.tvo()}UpdateAllPlayerData(t,r=!0){var o=[];for(const l of this.$po.keys()){let e=!1;for(const h of t)if(h.PlayerId===l){e=!0;break}e||o.push(l)}for(const f of o)this.$po.get(f)?.Clear(),this.$po.delete(f);var i=ModelManager_1.ModelManager.CreatureModel.GetPlayerId(),e=this.CurrentGroupType;for(const m of t){var a=m.PlayerId,n=m.CurrentGroupType;let e=this.$po.get(a);e||(e=SceneTeamData_1.SceneTeamPlayer.Create(a),this.$po.set(a,e));var s=e.GetCurrentGroup(),_=i===a&&!r&&this.ChangingTeam&&s?.GetGroupType()===n;e.SwitchGroup(n),a===ModelManager_1.ModelManager.PlayerInfoModel?.GetId()&&(this.CurrentGroupType=n,this.IsPhantomTeam=2===n);for(const c of m.Groups)_&&c.GroupType===n&&this.apl(s,c)?Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"更新编队组数据时，跳过本机当前编队组"):e.UpdateGroup(c.GroupType,c.GroupRoleList,c.CurrentRoleId,c.LivingState??1,c.IsFixedLocation??!1,c.IsRetain??!1);e.RefreshEntityVisible()}EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnUpdateTeamGroupType),this.tvo(e)}apl(e,t){var r=t.GroupType;if(e.GetLivingState()!==t.LivingState)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"编队组存活状态不一致，不可跳过",["Type",r]),!1;var o=e.GetCurrentRole()?.RoleId;if(o!==t.CurrentRoleId&&!this.ChangingRole)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"当前角色不一致，不在换人中，不可跳过",["Type",r],["RoleId",o]),!1;var i=t.GroupRoleList,a=e.GetRoleList();if(i.length!==a.length)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"编队组角色列表不一致，不可跳过",["Type",r],["RoleList",a]),!1;for(let e=0;e<i.length;e++){var n=i[e],s=a[e];if(n.RoleId!==s.RoleId||n.CreatureDataId!==s.CreatureDataId)return Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"编队组角色不一致，不可跳过",["TargetRole",n],["Role",s]),!1}return!0}UpdateGroupLivingStates(e,t){var r=this.$po.get(e);if(r)for(var[o,i]of t)r.GetGroup(o)?.UpdateLivingState(i)}tvo(o=this.CurrentGroupType??0,i=!1){Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"刷新出战编队，开始"),this.IsTeamReady=!1,this.RefreshLastTransform(),this.aPr.length=0,this.Jpo.clear(),this.LoadTeamPromise||(this.LoadTeamPromise=new GameModePromise_1.GameModePromise),this.Vpo&&(Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"刷新出战编队，中断等待"),this.Vpo.Cancel());let a=void 0,n=!1;var e=[];const s=ModelManager_1.ModelManager.CreatureModel.GetPlayerId();for(const c of ModelManager_1.ModelManager.GameModeModel.IsMulti?ModelManager_1.ModelManager.OnlineModel.GetAllWorldTeamPlayer():[s]){var t=this.$po.get(c)?.GetCurrentGroup(),r=t?.GetRoleList();if(r&&0!==r.length){c===s&&(n=!t.IsFixedLocation);var _=t.GetGroupType(),l=t.GetCurrentRole();for(const g of r){var h,f,m=g.CreatureDataId;m<=0||(f=g.RoleId,h=g===l,f=SceneTeamItem_1.SceneTeamItem.Create(_,c,f,m),this.aPr.push(f),this.Jpo.add(c),e.push(m),f.IsMyRole()?h&&(m=(a=f).EntityHandle?.Entity)?.Valid&&m.Active&&m.GetComponent(191)?.HasAnyTag([-1384309247,-1388400236])&&(n=!1):f.SetRemoteIsControl(h))}}}this.GetTeamItems(!0).length<=0?Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"刷新出战编队，当前玩家无角色实体"):(Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"刷新出战编队，等待加载开始"),this.Vpo=WaitEntityTask_1.WaitEntityTask.Create(e,e=>{e||Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"刷新出战编队，加载角色失败"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"刷新出战编队，等待加载结束"),this.RefreshLastTransform();e=this.CurrentGroupType;if(!e||e===o||SceneTeamDefine_1.innerGroupType.includes(o)||SceneTeamDefine_1.innerGroupType.includes(e)||(this.YBi=void 0),this.YBi?.EntityHandle?.Valid&&Global_1.Global.BaseCharacter?.IsValid()||(this.YBi=void 0),a&&a.CanControl()){const t=a.EntityHandle;t&&t.Id===this.YBi?.EntityHandle?.Id?this.YBi=a:this.ChangeRole(a.GetCreatureDataId(),{UseGoBattleSkill:i,AllowRefreshTransform:n}),void this.pHs()}else{Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"刷新出战编队，当前角色不可上阵");for(const r of this.aPr)if(r.IsMyRole()&&r.CanControl())return ControllerHolder_1.ControllerHolder.SceneTeamController.RequestChangeRole(r.GetCreatureDataId(),{FilterSameRole:!1}),void this.pHs();if(Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"刷新出战编队，未找到存活角色"),a){this.ChangeRole(a.GetCreatureDataId(),{ForceChangeRole:!0});const t=a.EntityHandle?.Entity;t?.DisableByKey(1,!0)}else Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"刷新出战编队，数据错误，当前玩家找不到可上阵角色",["CurrentRole",this.$po.get(s)?.GetCurrentGroup()?.GetCurrentRole()]);this.pHs()}},-1))}pHs(){this.Vpo=void 0,this.IsTeamReady=!0,this.LoadTeamPromise?.SetResult(!0),this.LoadTeamPromise=void 0,this.ivo(),Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"刷新出战编队，结束")}ivo(){var e=this.CurrentGroupType;if(e&&!SceneTeamDefine_1.innerGroupType.includes(e)){if(!ModelManager_1.ModelManager.GameModeModel.IsMulti&&1===e){var t=this.zpo??[],r=[];for(const a of this.GetTeamItems())r.push(a.GetConfigId);for(let e=0;e<SceneTeamDefine_1.SCENE_TEAM_MAX_NUM;e++){var o=t[e],i=r[e];o!==i&&(o&&EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.RedDotRoleChange,o),i)&&EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.RedDotRoleChange,i)}this.zpo=r}EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnUpdateSceneTeam),GlobalData_1.GlobalData.GameInstance&&GlobalData_1.GlobalData.BpEventManager.当编队更新时.Broadcast()}}OnAddEntity(e){if(ModelManager_1.ModelManager.GameModeModel.IsMulti){e=e.Entity.GetComponent(0);if(e.GetEntityType()===Protocol_1.Aki.Protocol.kks.Proto_Player){var t,r,o=e.GetCreatureDataId(),i=ModelManager_1.ModelManager.CreatureModel;for(const a of this.GetTeamItems())o===a.GetCreatureDataId()&&(t=i.GetEntity(o)?.Entity,r=i.GetScenePlayerData(a.GetPlayerId())?.IsRemoteSceneLoading(),t&&r)&&t.DisableByKey(1,!0);if(ModelManager_1.ModelManager.SceneTeamModel.IsTeamReady)for(const n of this.aPr)if(n.GetCreatureDataId()===o){Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"更新联机场景队伍"),n.UpdateEntityHandle(),this.ivo();break}}}}OnRemoveEntity(e){var t=e.Entity,r=t.GetComponent(0).GetCreatureDataId();this.Wll.delete(r),e.Id===this.GetCurrentEntity?.Id&&(this.LastEntityIsOnGround=t.GetComponent(92).PositionState===CharacterUnifiedStateTypes_1.ECharPositionState.Ground,ModelManager_1.ModelManager.GameModeModel.IsMulti||this.RefreshLastTransform())}RegisterPanelQteJoinTeam(e,t){Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"注册角色入队界面QTE",["RoleIdList",t]),this.PanelQteHandleId=e,this.PanelQteRoleIdSet.clear();for(const r of t)this.PanelQteRoleIdSet.add(r)}PanelQteJoinTeam(e){if(e===this.PanelQteHandleId)return Log_1.Log.CheckDebug()&&Log_1.Log.Debug("SceneTeam",48,"角色入队界面QTE交互完成，开始执行"),e=this.Qll(this.PanelQteRoleIdSet),this.PanelQteHandleId=0,this.PanelQteRoleIdSet.clear(),e}AddPreloadEntity(e){Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"添加预加载角色实体",["CreatureDataId",e]),this.Wll.add(e)}GetPreloadCreatureDataIdList(e){var t=[];for(const o of e)for(const i of this.Wll){var r=ModelManager_1.ModelManager.CreatureModel.GetEntity(i)?.Entity;r?.Valid&&(r=r.GetComponent(0))&&(r=r.GetRoleId(),this.Kll(r,o))&&t.push(i)}return t}Qll(t,r=!1,o=!1){var i=ModelManager_1.ModelManager.CreatureModel.GetPlayerId(),a=this.$po.get(i);if(a){var n=t.size;if(!(n>SceneTeamDefine_1.SCENE_TEAM_MAX_NUM)){var s=a.GetGroup(1);if(s){if(2===s.GetLivingState())return void(Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"玩家编队组已死亡，不允许改变"));if(!r&&n+s.GetRoleList().length>SceneTeamDefine_1.SCENE_TEAM_MAX_NUM)return void(Log_1.Log.CheckError()&&Log_1.Log.Error("SceneTeam",48,"角色列表人数总和超过编队设计上限"))}let e=!0;var _,l,h,f,m=[],c=[];for(const g of t)for(const u of this.Wll)s&&s.HasRole(u)||(_=ModelManager_1.ModelManager.CreatureModel.GetEntity(u)?.Entity)?.Valid&&(l=_.GetComponent(0))&&(h=l.GetRoleId(),!this.Kll(h,g)||((f=new SceneTeamData_1.SceneTeamRole).CreatureDataId=u,f.RoleId=h,m.push(f),c.push(u),_.IsInit?_.GetComponent(15)?.IsDead()??!0:l.GetLivingStatus()===Protocol_1.Aki.Protocol.JEs.Proto_Dead)||(e=!1));return m.length<=0||(Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"预加载角色入队",["RoleList",m]),!s||r?(n=m[0].RoleId,t=e?2:1,a.UpdateGroup(1,m,n,t,!1,!1)):s.AddRoleList(m),a.RefreshEntityVisible(),o?this.SwitchGroup(i,1,!1):1===a.GetCurrentGroupType()&&this.tvo()),c}Log_1.Log.CheckError()&&Log_1.Log.Error("SceneTeam",48,"传入角色列表人数超过编队设计上限")}else Log_1.Log.CheckError()&&Log_1.Log.Error("SceneTeam",48,"玩家编队数据不存在，不允许执行预加载角色入队")}Kll(e,t){if(e===t)return!0;if(e>RoleDefine_1.ROBOT_DATA_MIN_ID&&TrialRoleInfoById_1.configTrialRoleInfoById.GetConfig(e)?.GroupId===t)return!0;return!1}get GetCurrentTeamItem(){return this.YBi}get GetCurrentEntity(){return this.YBi?.EntityHandle}get GetPhysMaterial(){return this.vwa}GetTeamLength(){return this.aPr.length}GetTeamPlayerSize(){return this.Jpo.size}GetTeamItem(e,t){for(const r of this.aPr)if(this.ovo(r,e,t))return r}ovo(e,t,r){if(r.OnlyMyRole&&!e.IsMyRole())return!1;if(r.IsControl&&!e.IsControl())return!1;switch(r.ParamType){case 0:return e.GetConfigId===t;case 1:return e.EntityHandle?.Id===t;case 2:return e.GetPlayerId()===t;case 3:return e.GetCreatureDataId()===t;default:return!1}}GetTeamItems(e=!1){var t=[];for(const r of this.aPr)e&&!r.IsMyRole()||t.push(r);return t}GetTeamItemsByPlayer(e){var t=[];for(const r of this.aPr)r.GetPlayerId()===e&&t.push(r);return t}GetTeamEntities(e=!1){var t,r=[];for(const o of this.aPr)e&&!o.IsMyRole()||(t=o.EntityHandle)&&r.push(t);return r}GetAllGroupEntities(e){var t=[],e=this.$po.get(e);if(e){var r=ModelManager_1.ModelManager.CreatureModel;for(const i of e.GetGroupList())for(const a of i.GetRoleList()){var o=r.GetEntity(a.CreatureDataId);o?.IsInit&&t.push(o)}}return t}GetTeamItemsInRange(e,t){var r,o=[],i=t*t;for(const a of this.aPr)a.EntityHandle?.Entity&&(r=ModelManager_1.ModelManager.CreatureModel.GetScenePlayerData(a.GetPlayerId())?.GetLocation())&&Vector_1.Vector.DistSquared(e,r)<=i&&o.push(a);return o}GetTeamPlayerData(e){return this.$po.get(e)}ChangeRole(e,t=void 0){Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"开始切换角色",["CreatureDataId",e]);var r=this.GetTeamItem(e,{ParamType:3});if(r&&r.IsMyRole()){var o=t?.UseGoBattleSkill??!1,i=t?.CoolDown??0,a=t?.GoDownWaitSkillEnd??!1,n=t?.AllowRefreshTransform??!0,s=t?.ForceInheritTransform??!0,_=t?.ForceChangeRole??!1,l=t?.GoBattleInvincible??!1,t=t?.MessageId;if(!_&&r.IsDead())Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"角色已经死亡",["CreatureDataId",e]);else if(!r.IsAutoRole()){var h,_=this.GetCurrentTeamItem,f=_?.EntityHandle,m=r.EntityHandle;if(m)return h=ModelManager_1.ModelManager.PlayerInfoModel.GetId(),this.$po.get(h)?.GetCurrentGroup()?.SetCurrentRole(r.GetCreatureDataId()),this.YBi=r,this.Xpo.Start(),RoleTeamComponent_1.RoleTeamComponent.OnChangeRole(f,m,o,l,i,a,n,s,t),this.Xpo.Stop(),f&&EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnRoleGoDown,f.Id),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnChangeRole,m,f),_;Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"角色实体无效",["CreatureDataId",e])}}else Log_1.Log.CheckWarn()&&Log_1.Log.Warn("SceneTeam",48,"队伍实例不存在或非本机角色",["CreatureDataId",e])}OtherPlayerChangeRole(e,t){this.$po.get(e)?.GetCurrentGroup()?.SetCurrentRole(t)}RefreshLastTransform(){var e=this.GetCurrentEntity;e?.Valid?(e=CharacterController_1.CharacterController.GetActor(e))?.IsValid()?(e=e.GetTransform(),this.Zpo=e,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("SceneTeam",48,"刷新上一个角色的位置信息成功",["transform",e.ToString()])):Log_1.Log.CheckDebug()&&Log_1.Log.Debug("SceneTeam",48,"刷新上一个角色的位置信息时，当前角色Actor已失效"):Log_1.Log.CheckDebug()&&Log_1.Log.Debug("SceneTeam",48,"刷新上一个角色的位置信息时，当前角色实体已失效")}SetLastTransform(e){this.Zpo=e}GetSpawnTransform(){var r=this.Zpo;if(r)return r;r=this.GetCurrentEntity;if(r?.Valid)return r.Entity.GetComponent(3).Actor.GetTransform();r=GlobalData_1.GlobalData.World;if(r){let e=void 0,t=void 0;var o=UiBlueprintFunctionLibrary_1.UiBlueprintFunctionLibrary.TestSceneLoadBornMode(),o=(0===o?(e=UiBlueprintFunctionLibrary_1.UiBlueprintFunctionLibrary.TempLocation.ToUeVector(),(t=UiBlueprintFunctionLibrary_1.UiBlueprintFunctionLibrary.TempRotator.ToUeRotator()).Roll=0,t.Pitch=0):1===o&&(o=(0,puerts_1.$ref)(void 0),UE.GameplayStatics.GetAllActorsOfClass(r,UE.PlayerStart.StaticClass(),o),r=(0,puerts_1.$unref)(o).Get(0).GetTransform(),e=r.GetLocation(),t=r.Rotator()),UE.KismetMathLibrary.MakeTransform(e,t,new UE.Vector(1,1,1)));return o}}RoleDeathEnded(e){Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"开始执行队伍角色死亡逻辑",["EntityId",e]);var e=this.GetTeamItem(e,{ParamType:1}),t=e?.EntityHandle?.Entity;if(t){var r=e.GetGroupType(),o=e.GetPlayerId(),o=this.$po.get(o)?.GetCurrentGroup();if(o&&r===o.GetGroupType())if(2===o.GetLivingState()||e.IsAutoRole())Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"隐藏死亡角色"),t.DisableByKey(1,!0);else if(t.GetComponent(3)?.IsAutonomousProxy){e=this.GetCurrentTeamItem;if(e)if(e.IsDead()){for(const a of this.GetTeamItems(!0))if(a.CanControl()){var i=a.GetCreatureDataId();Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"前台角色死亡进行切人",["CreatureDataId",i]),ControllerHolder_1.ControllerHolder.SceneTeamController.RequestChangeRole(i,{GoBattleInvincible:!0});break}}else Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"当前角色未死亡");else Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"死亡时编队无当前角色")}else Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"非逻辑主控死亡不进行切人");else Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"死亡角色非玩家当前编队",["DeadGroupType",r],["CurrentGroupType",o?.GetGroupType()])}else Log_1.Log.CheckInfo()&&Log_1.Log.Info("SceneTeam",48,"无法获取死亡角色Entity")}IsAllDid(){for(const e of this.aPr)if(!e.IsDead())return!1;return!0}GetCurrentGroupLivingState(e){e=this.$po.get(e)?.GetCurrentGroup();return e?e.GetLivingState():0}GetGroupLivingState(e,t){e=this.$po.get(e)?.GetGroup(t);return e?e.GetLivingState():0}InitializeOfflineSceneTeam(e,t,r){if(1!==UE.Actor.GetKuroNetMode()){var o=[ControllerHolder_1.ControllerHolder.CreatureController.GenUniqueId(),ControllerHolder_1.ControllerHolder.CreatureController.GenUniqueId(),ControllerHolder_1.ControllerHolder.CreatureController.GenUniqueId()],i=100003,a=[0<e?e:i,0<t?t:i,0<r?r:i],n=this.GetSpawnTransform();if(n){const f=[];var s=a.length;let t=s;for(let e=1;e<=s;++e){var _=o[e-1];const m=ModelManager_1.ModelManager.CreatureModel.GetPlayerId();var l=a[e-1],h=Protocol_1.Aki.Protocol.c3s.create();h.s5n=MathUtils_1.MathUtils.NumberToLong(_),h.l8n=WorldGlobal_1.WorldGlobal.ToTsVector(n.GetLocation()),h._8n=WorldGlobal_1.WorldGlobal.ToTsRotator(n.GetRotation().Rotator()),h.rVn=!0,h.W5n=ModelManager_1.ModelManager.CreatureModel.GetPlayerId(),h.zHn=Protocol_1.Aki.Protocol.kks.Proto_Player,h.ZHn=Protocol_1.Aki.Protocol.rLs.Proto_Character,h.v9n=a[e-1];const c=ControllerHolder_1.ControllerHolder.CreatureController.CreateEntity(h,"InitializeOfflineSceneTeam");h=new SceneTeamData_1.SceneTeamRole;h.CreatureDataId=_,h.RoleId=l,f.push(h),ControllerHolder_1.ControllerHolder.CreatureController.LoadEntityAsync(c,e=>{e&&(t--,(e=c?.Entity)&&(e.CheckGetComponent(84)?.SetTeamTag(2),e.DisableByKey(1,!0)),0===t)&&(this.UpdateGroupData(m,{GroupType:1,GroupRoleList:f,CurrentRoleId:f[0].RoleId}),this.SwitchGroup(m,1))})}}else Log_1.Log.CheckError()&&Log_1.Log.Error("SceneTeam",48,"初始化失败队伍失败，GetSpawnTransform为空。")}}}exports.SceneTeamModel=SceneTeamModel;
//# sourceMappingURL=SceneTeamModel.js.map