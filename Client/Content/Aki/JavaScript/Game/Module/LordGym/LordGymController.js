
"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.LordGymController=void 0;const UE=require("ue"),Log_1=require("../../../Core/Common/Log"),Protocol_1=require("../../../Core/Define/Net/Protocol"),ControllerBase_1=require("../../../Core/Framework/ControllerBase"),Net_1=require("../../../Core/Net/Net"),EventDefine_1=require("../../Common/Event/EventDefine"),EventSystem_1=require("../../Common/Event/EventSystem"),TimeUtil_1=require("../../Common/TimeUtil"),ConfigManager_1=require("../../Manager/ConfigManager"),ModelManager_1=require("../../Manager/ModelManager"),UiManager_1=require("../../Ui/UiManager"),EffectUtil_1=require("../../Utils/EffectUtil"),ErrorCodeController_1=require("../ErrorCode/ErrorCodeController"),ItemRewardController_1=require("../ItemReward/ItemRewardController"),ItemRewardDefine_1=require("../ItemReward/ItemRewardDefine"),RewardItemData_1=require("../ItemReward/RewardData/RewardItemData"),UiSceneManager_1=require("../UiComponent/UiSceneManager"),UiModelUtil_1=require("../UiModel/UiModelUtil");class LordGymController extends ControllerBase_1.ControllerBase{static OnInit(){return this.OnRegisterNetEvent(),this.OnAddEvents(),!0}static OnClear(){return this.OnUnRegisterNetEvent(),this.OnRemoveEvents(),!0}static OnRegisterNetEvent(){Net_1.Net.Register(25080,this.PSi),Net_1.Net.Register(16399,this.xSi)}static OnUnRegisterNetEvent(){Net_1.Net.UnRegister(25080),Net_1.Net.UnRegister(16399)}static OnAddEvents(){EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.WorldDone,this.$5e)}static OnRemoveEvents(){EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.WorldDone,this.$5e)}static async LordGymInfoRequest(){var e=Protocol_1.Aki.Protocol.Ass.create({}),e=await Net_1.Net.CallAsync(22969,e);if(0<e.jxs?.length&&(ModelManager_1.ModelManager.LordGymModel.UnLockLordGym=e.jxs,ModelManager_1.ModelManager.LordGymModel.UnLockLordGym.sort((e,r)=>e-r)),e.Wxs?.length&&(ModelManager_1.ModelManager.LordGymModel.ReadLoadGymIds=e.Wxs),0<e.Kxs?.length)for(const r of e.Kxs)ModelManager_1.ModelManager.LordGymModel.LordGymRecord.set(r.y7n,r)}static async LordGymBeginRequest(e){var r=Protocol_1.Aki.Protocol.wss.create(),r=(r.y7n=e,await Net_1.Net.CallAsync(20019,r));return!!r&&(r.Q4n!==Protocol_1.Aki.Protocol.Q4n.KRs?(ErrorCodeController_1.ErrorCodeController.OpenErrorCodeTipView(r.Q4n,20019),!1):(ModelManager_1.ModelManager.LordGymModel.CurrentChallengeLordGymId=e,ModelManager_1.ModelManager.LordGymModel.GetLordGymHasRead(e)||LordGymController.ReadLordGym(e),!0))}static async OpenLordGymEntrance(e,r=0){return await this.LordGymInfoRequest(),ModelManager_1.ModelManager.LordGymModel.EntranceEntityId=r,void 0!==await UiManager_1.UiManager.OpenViewAsync("LordGymEntranceView",e)}static async OpenLordGymLordEntranceSelectView(e,r=0){return ModelManager_1.ModelManager.LordGymModel.EntranceEntityId=r,ModelManager_1.ModelManager.LordGymModel.EntranceSetId=e,void 0!==await UiManager_1.UiManager.OpenViewAsync("LordGymLordEntranceSelectView",e)}static OpenGymUnlockTipView(e){UiManager_1.UiManager.OpenView("LordGymUnlockTipView",e),ModelManager_1.ModelManager.LordGymModel.FirstUnLockLordGym=[]}static async ReadLordGym(e){ModelManager_1.ModelManager.LordGymModel.ReadLordGym(e);var r=Protocol_1.Aki.Protocol.bss.create();r.y7n=e,await Net_1.Net.CallAsync(18645,r)}static IsInEntranceEntity(){var e=ModelManager_1.ModelManager.LordGymModel.EntranceEntityId;return!e||!(e=ModelManager_1.ModelManager.CreatureModel.GetEntityById(e))?.IsInit||(e.Entity?.GetComponent(114)?.IsInInteractRange??!1)}static CreateLordModelByEntranceId(e){UiSceneManager_1.UiSceneManager.InitLordSkeletalHandle();var r=UiSceneManager_1.UiSceneManager.GetLordSkeletalHandle();UiModelUtil_1.UiModelUtil.SetTransformByTag(r.Model,"MonsterCase"),this.LoadLordModelByEntranceId(e)}static LoadLordModelByEntranceId(e){if(UiSceneManager_1.UiSceneManager.GetLordSkeletalHandle()){const i=ConfigManager_1.ConfigManager.LordGymConfig.GetLordGymEntranceConfig(e);e=i.MeshId;const d=UiSceneManager_1.UiSceneManager.GetLordSkeletalHandle().Model;var r=d.CheckGetComponent(0).ModelConfigId;if(r!==e){const l=d.CheckGetComponent(10),_=d.CheckGetComponent(2),s=d.CheckGetComponent(1),M=i.StandAnim,c=EffectUtil_1.EffectUtil.GetEffectPath("LordChangeMaterialController"),m=EffectUtil_1.EffectUtil.GetEffectPath("LordIdleMaterialController");r=[M,c,m];_?.LoadModelByModelId(e,!0,()=>{var e=ModelManager_1.ModelManager.LordGymModel;let r=e.CacheLocation,o=e.CacheRotator,t=e.CacheScale,a=e.CacheTransform;var n=i.Location,n=(r?r.Set(n[0],n[1],n[2]):(r=new UE.Vector(n[0],n[1],n[2]),e.CacheLocation=r),i.Rotator),n=(o?(o.Pitch=n[0],o.Yaw=n[1],o.Roll=n[2]):(o=new UE.Rotator(n[0],n[1],n[2]),e.CacheRotator=o),i.Zoom),n=(t?t.Set(n[0],n[1],n[2]):(t=new UE.Vector(n[0],n[1],n[2]),e.CacheScale=t),a?(a.SetLocation(r),a.SetRotation(o.Quaternion()),a.SetScale3D(t)):(a=new UE.Transform(o,r,t),e.CacheTransform=a),s.SetAllMeshComponentRelativeTransform(a,!1,void 0,!1),_?.GetLoadedResource(M)),e=(n||Log_1.Log.CheckError()&&Log_1.Log.Error("UiCommon",43,"[LordGym] 道馆界面待机动画预加载失败"),l.PlayAnimation(n,!0),d.CheckGetComponent(5)),n=_.GetLoadedResource(c),n=(n&&e?.AddRenderingMaterialByData(n),_.GetLoadedResource(m));n&&e?.AddRenderingMaterialByData(n)},r)}}}}exports.LordGymController=LordGymController,(_a=LordGymController).$5e=()=>{ModelManager_1.ModelManager.LordGymModel?.InitNewLordGymEntranceIdRecord(),_a.LordGymInfoRequest()},LordGymController.PSi=e=>{ModelManager_1.ModelManager.LordGymModel.FirstUnLockLordGym=e.jxs},LordGymController.xSi=r=>{var o=ModelManager_1.ModelManager.LordGymModel,e=o.IsDeadInChallenge,t=(o.IsDeadInChallenge=!1,r.Jxs.y7n);if(o.LordGymRecord.set(t,r.Jxs),r.Mws){var a=[];for(const l of r.zxs){var n=new RewardItemData_1.RewardItemData(l.L8n,l.m9n,0!==l.Xxs?l.Xxs:void 0);a.push(n)}let e=void 0;var o=ConfigManager_1.ConfigManager.LordGymConfig.GetLordGymConfig(t);const i=ModelManager_1.ModelManager.LordGymModel.GetNextGymId(t);e=o.IsNew?(t={ButtonTextId:"Text_GymReturnToWorld_Text",DescriptionTextId:void 0,IsTimeDownCloseView:!1,IsClickedCloseView:!0},i&&ModelManager_1.ModelManager.LordGymModel.GetLordGymIsUnLock(i)?[t,{ButtonTextId:"Text_GymContinueChallenge_Text",DescriptionTextId:void 0,IsTimeDownCloseView:!1,IsClickedCloseView:!0,OnClickedCallback:()=>{LordGymController.LordGymBeginRequest(i)}}]:[t,{ButtonTextId:"Text_GymReturnToLordGym_Text",DescriptionTextId:void 0,IsTimeDownCloseView:!1,IsClickedCloseView:!0,OnClickedCallback:()=>{var e=ModelManager_1.ModelManager.LordGymModel.EntranceSetId;0<e&&UiManager_1.UiManager.OpenView("LordGymLordEntranceSelectView",e)}}]):[{ButtonTextId:"ConfirmBox_45_ButtonText_1",DescriptionTextId:void 0,IsTimeDownCloseView:!1,IsClickedCloseView:!0}];o={TitleTextId:"LordGym_TimeTitle",Record:TimeUtil_1.TimeUtil.GetTimeString(r.Jxs.Qxs),IsNewRecord:r.Yxs};const d=i&&!ModelManager_1.ModelManager.LordGymModel.GetLordGymHasRead(i)&&ModelManager_1.ModelManager.LordGymModel.GetLordGymIsUnLock(i);ItemRewardController_1.ItemRewardController.OpenExploreRewardView(ItemRewardDefine_1.LORD_GYM_RESULT,r.Mws,a,o,void 0,e,void 0,void 0,()=>{d&&UiManager_1.UiManager.OpenView("LordGymUnlockTipView",i)},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,r.vQ_)}else t=r.p8_,ConfigManager_1.ConfigManager.LordGymConfig.GetLordGymConfig(t).IsNew&&!e&&(o={LordId:t},UiManager_1.UiManager.OpenView("LordGymChallengeFailView",o))};
//# sourceMappingURL=LordGymController.js.map