
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CaveHoleSecondaryPanel=void 0;const ConfigManager_1=require("../../../../Manager/ConfigManager"),ButtonItem_1=require("../../../Common/Button/ButtonItem"),MapController_1=require("../../../Map/Controller/MapController"),MarkUiUtils_1=require("../../../Map/Mark/Misc/MarkUiUtils"),TeleportController_1=require("../../../Teleport/TeleportController"),WorldMapSecondaryUi_1=require("../../ViewComponent/WorldMapSecondaryUi"),WorldMapDefine_1=require("../../WorldMapDefine"),MapTipsActivateTipPanel_1=require("../Common/MapTipsActivateTipPanel");class CaveHoleSecondaryPanel extends WorldMapSecondaryUi_1.WorldMapSecondaryUi{constructor(){super(...arguments),this.u2o=void 0,this.ZAt=void 0,this.y8a=void 0,this.I8a=void 0,this.mth=void 0,this.tWt=()=>{this.u2o&&(this.CheckAndShowCrossMapTips(this.u2o),MapController_1.MapController.RequestTrackMapMark(this.u2o.MarkType,this.u2o.MarkId,!this.u2o.IsTracked),this.L2o(),this.Close())},this.T8a=()=>{var t=MarkUiUtils_1.MarkUiUtils.FindNearbyValidGotoMark(this.Map,this.u2o);t&&MarkUiUtils_1.MarkUiUtils.QuickGotoTeleport(this.u2o,t,()=>{this.Close()})},this.P8e=()=>{this.CheckAndShowCrossMapTips(this.u2o);var t=this.u2o;MapController_1.MapController.RequestTrackMapMark(t.MarkType,t.MarkId,!t.IsTracked),this.L2o(),this.Close()}}GetResourceId(){return"UiItem_GeneralPanel_Prefab"}OnRegisterComponent(){this.ComponentRegisterInfos=WorldMapDefine_1.secondaryUiPanelComponentsRegisterInfoA,this.BtnBindInfo=[]}async OnBeforeStartAsync(){return this.mth=new MapTipsActivateTipPanel_1.MapTipsActivateTipPanel,await this.mth.CreateByActorAsync(this.GetItem(31).GetOwner()),super.OnBeforeStartAsync()}OnStart(){this.RootItem.SetRaycastTarget(!1),this.ZAt=new ButtonItem_1.ButtonItem(this.GetButton(11).RootUIComp),this.ZAt.SetFunction(this.tWt),this.y8a=new ButtonItem_1.ButtonItem(this.GetButton(28).RootUIComp),this.y8a.SetFunction(this.P8e),this.I8a=new ButtonItem_1.ButtonItem(this.GetButton(29).RootUIComp),this.I8a.SetFunction(this.T8a)}OnShowWorldMapSecondaryUi(t){this.u2o=t,this.L2o(),this.GetText(1).SetText(this.u2o.GetTitleText());var i,e=this.u2o.GetAreaText(),e=(e&&this.GetText(3).SetText(e),this.GetText(4).ShowTextNew(this.u2o.GetLocaleDesc()),this.SetSpriteByPath(this.u2o.IconPath,this.GetSprite(0),!1),t.ShowSecondaryUiMultiMapIcon()),e=(this.GetSprite(23).SetUIActive(e),e&&(e=ConfigManager_1.ConfigManager.UiResourceConfig.GetResourcePath(WorldMapDefine_1.MULTI_MAP_SELECT_ICON_PATH),this.SetSpriteByPath(e,this.GetSprite(23),!1)),this.GetItem(12).SetUIActive(!1),this.GetVerticalLayout(7).RootUIComp.SetUIActive(!1),this.GetItem(6).SetUIActive(!1),this.GetVerticalLayout(5).RootUIComp.SetUIActive(!1),this.GetItem(9).SetUIActive(!1),this.GetItem(8).SetUIActive(!1),MarkUiUtils_1.MarkUiUtils.IsShowGoto(t));this.ZAt.SetActive(!e),this.GetItem(14).SetUIActive(!1),this.GetItem(32).SetUIActive(e),this.mth.SetUiActive(!1),e&&(e=this.GetButton(29),i=TeleportController_1.TeleportController.CheckCanTeleport(),t=MarkUiUtils_1.MarkUiUtils.FindNearbyValidGotoMark(this.Map,t),this.mth.SetUiActive(!i||void 0===t),e.SetSelfInteractive(i&&void 0!==t)),this.RootItem.SetUIActive(!0)}L2o(){this.u2o&&(this.ZAt.SetLocalText(this.u2o.IsTracked?"InstanceDungeonEntranceCancelTrack":"InstanceDungeonEntranceTrack"),this.y8a.SetLocalText(this.u2o.IsTracked?"InstanceDungeonEntranceCancelTrack":"InstanceDungeonEntranceTrack"))}OnBeforeDestroy(){this.ZAt.Destroy()}}exports.CaveHoleSecondaryPanel=CaveHoleSecondaryPanel;
//# sourceMappingURL=CaveHoleSecondaryPanel.js.map