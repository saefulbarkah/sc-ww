
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RoguelikeEntrancePanel=void 0;const UE=require("ue"),Log_1=require("../../../../../Core/Common/Log"),CommonDefine_1=require("../../../../../Core/Define/CommonDefine"),MultiTextLang_1=require("../../../../../Core/Define/ConfigQuery/MultiTextLang"),TimerSystem_1=require("../../../../../Core/Timer/TimerSystem"),StringUtils_1=require("../../../../../Core/Utils/StringUtils"),TimeUtil_1=require("../../../../Common/TimeUtil"),ConfigManager_1=require("../../../../Manager/ConfigManager"),ModelManager_1=require("../../../../Manager/ModelManager"),ActivityRogueController_1=require("../../../Activity/ActivityContent/RougeActivity/ActivityRogueController"),ButtonItem_1=require("../../../Common/Button/ButtonItem"),MapController_1=require("../../../Map/Controller/MapController"),MarkUiUtils_1=require("../../../Map/Mark/Misc/MarkUiUtils"),TeleportController_1=require("../../../Teleport/TeleportController"),GenericLayoutAdd_1=require("../../../Util/GenericLayoutAdd"),LguiUtil_1=require("../../../Util/LguiUtil"),WorldMapSecondaryUi_1=require("../../ViewComponent/WorldMapSecondaryUi"),WorldMapController_1=require("../../WorldMapController"),WorldMapDefine_1=require("../../WorldMapDefine"),MapTipsActivateTipPanel_1=require("../Common/MapTipsActivateTipPanel"),RewardItemBar_1=require("../RewardItemBar"),TipsListView_1=require("../TipsListView"),ROGUE_SCORE_KEY="rougeScore",ROGUE_TIME="rogueTime",ROGUE_ACHIEVEMENT_PROGRESS="rogueAchievementProgress",ROGUE_DIFFICULTY_PROGRESS="rogueDifficultyProgress";class RoguelikeEntrancePanel extends WorldMapSecondaryUi_1.WorldMapSecondaryUi{constructor(){super(...arguments),this.tli=0,this.u2o=void 0,this.U2o=void 0,this.ZAt=void 0,this.y8a=void 0,this.I8a=void 0,this.IRe=void 0,this.RewardsView=void 0,this.mth=void 0,this.OnInstanceRefresh=(t,e,i,r)=>{var s=new TipsListView_1.InstanceDungeonCostTip;return s.SetRootActor(e.GetOwner(),!0),{Key:t,Value:s}},this.m2o=()=>{this.u2o.IsLocked?(this.CheckAndShowCrossMapTips(this.u2o),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Map",49,"追踪",["markId",this.u2o.MarkId]),MapController_1.MapController.RequestTrackMapMark(this.u2o.MarkType,this.u2o.MarkId,!this.u2o.IsTracked)):(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Map",49,"追踪",["markId",this.u2o.MarkId]),WorldMapController_1.WorldMapController.TryTeleport(this.u2o.MarkConfigId)),this.Close()},this.T8a=()=>{var t=MarkUiUtils_1.MarkUiUtils.FindNearbyValidGotoMark(this.Map,this.u2o);t&&MarkUiUtils_1.MarkUiUtils.QuickGotoTeleport(this.u2o,t,()=>{this.Close()})},this.P8e=()=>{this.CheckAndShowCrossMapTips(this.u2o);var t=this.u2o;Log_1.Log.CheckInfo()&&Log_1.Log.Info("Map",63,"[地图系统]GeneralPanel->追踪标记",["markId",t.MarkId],["IsTracked",t.IsTracked]),MapController_1.MapController.RequestTrackMapMark(t.MarkType,t.MarkId,!t.IsTracked),this.l_i(),this.Close()}}get P2o(){return this.tli?ConfigManager_1.ConfigManager.InstanceDungeonEntranceConfig.GetConfig(this.tli):void 0}GetResourceId(){return"UiView_InstanceEntranceTip_Prefab"}OnRegisterComponent(){this.ComponentRegisterInfos=WorldMapDefine_1.secondaryUiPanelComponentsRegisterInfoA}async OnBeforeStartAsync(){return this.RewardsView=new RewardItemBar_1.RewardItemBar,await this.RewardsView.CreateThenShowByActorAsync(this.GetItem(8).GetOwner()),this.mth=new MapTipsActivateTipPanel_1.MapTipsActivateTipPanel,await this.mth.CreateByActorAsync(this.GetItem(31).GetOwner()),super.OnBeforeStartAsync()}OnStart(){this.RootItem.SetRaycastTarget(!1),this.ZAt=new ButtonItem_1.ButtonItem(this.GetButton(11).RootUIComp),this.ZAt.SetActive(!0),this.ZAt.SetFunction(this.m2o),this.y8a=new ButtonItem_1.ButtonItem(this.GetButton(28).RootUIComp),this.y8a.SetFunction(this.P8e),this.I8a=new ButtonItem_1.ButtonItem(this.GetButton(29).RootUIComp),this.I8a.SetFunction(this.T8a),this.GetVerticalLayout(5)?.RootUIComp.SetUIActive(!0),this.U2o=new GenericLayoutAdd_1.GenericLayoutAdd(this.GetVerticalLayout(5),this.OnInstanceRefresh),this.GetItem(25).SetUIActive(!1),this.GetItem(32).SetUIActive(!1),this.mth.SetUiActive(!1)}OnBeforeDestroy(){this.U2o.ClearChildren(),this.ZAt.Destroy(),this.y8a.Destroy(),this.I8a.Destroy(),this.mth.Destroy(),this.IRe&&TimerSystem_1.TimerSystem.Remove(this.IRe)}OnShowWorldMapSecondaryUi(t){var e;t?(this.u2o=t,this.tli=0!==t.MarkConfig.RelativeId?t.MarkConfig.RelativeId:ConfigManager_1.ConfigManager.InstanceDungeonEntranceConfig.GetEntranceIdByMarkId(t.MarkConfigId),this.tli?(this.SHe(),this.x2o(),this.l_i(),(e=this.P2o.UnLockCondition)&&!ModelManager_1.ModelManager.FunctionModel.IsOpen(e)&&(e=ConfigManager_1.ConfigManager.FunctionConfig.GetFunctionCondition(e),e=ConfigManager_1.ConfigManager.ConditionConfig.GetConditionGroupConfig(e.OpenConditionId),LguiUtil_1.LguiUtil.SetLocalTextNew(this.GetText(4),e.HintText))):Log_1.Log.CheckError()&&Log_1.Log.Error("InstanceDungeon",16,"副本入口弹窗打开错误，副本入口表中找不到对应的地图标价Id！",["MarkId",t.MarkConfigId])):Log_1.Log.CheckError()&&Log_1.Log.Error("InstanceDungeon",49,"副本入口弹窗打开错误，地图标记不存在")}SHe(){var t,e,i=this.P2o;i&&(this.GetText(4).ShowTextNew(i.Description),this.SetSpriteByPath(this.u2o.IconPath,this.GetSprite(0),!1),this.GetText(1).ShowTextNew(i.Name),(i=this.u2o.GetAreaText())&&this.GetText(3).SetText(i),this.GetItem(9).SetUIActive(!this.u2o.IsFogUnlock),this.GetText(10).ShowTextNew("Instance_Dungeon_Rcommand_Text"),this.GetItem(12).SetUIActive(!1),this.GetItem(8).SetUIActive(!1),LguiUtil_1.LguiUtil.SetLocalTextNew(this.GetText(36),"Instance_RogueInstanceEntrance_Progress"),i=MarkUiUtils_1.MarkUiUtils.IsShowGoto(this.u2o),this.ZAt.SetActive(!i),this.GetItem(32).SetUIActive(i),this.mth.SetUiActive(!1),i)&&(i=this.GetButton(29),t=TeleportController_1.TeleportController.CheckCanTeleport(),e=MarkUiUtils_1.MarkUiUtils.FindNearbyValidGotoMark(this.Map,this.u2o),this.mth.SetUiActive(!t||void 0===e),i.SetSelfInteractive(t&&void 0!==e))}jqe(){var t=ActivityRogueController_1.ActivityRogueController.GetCurrentActivityData()?.GetPreviewReward();void 0===t||0===t.length?this.GetItem(8).SetUIActive(!1):((t=t.slice(0,5)).forEach(t=>{t[1]=0}),this.GetItem(8).SetUIActive(!0),this.RewardsView.RebuildRewardsByData(t))}x2o(){var t=ConfigManager_1.ConfigManager.InstanceDungeonEntranceConfig?.GetInstanceDungeonEntranceFlowId(this.tli);this.jqe(),6===t&&(ModelManager_1.ModelManager.RoguelikeModel?.CheckRogueIsOpen()?(this.h4i(),this.sea(),this.aea(),this.hea(),this.IRe&&TimerSystem_1.TimerSystem.Remove(this.IRe),this.IRe=TimerSystem_1.TimerSystem.Forever(()=>{this.h4i()},1e3)):this.WTt())}WTt(){this.U2o.AddItemToLayout([ROGUE_SCORE_KEY]);var t=this.U2o.GetLayoutItemByKey(ROGUE_SCORE_KEY);t.SetIconVisible(!1),t.SetStarVisible(!1),t.SetRightText(""),t.SetLeftText(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Rogue_Function_End_Tip")),t.SetHelpButtonVisible(!1)}h4i(){if(ActivityRogueController_1.ActivityRogueController.GetCurrentActivityData()?.SeasonData){let t=this.U2o.GetLayoutItemByKey(ROGUE_TIME);t||(this.U2o.AddItemToLayout([ROGUE_TIME]),t=this.U2o.GetLayoutItemByKey(ROGUE_TIME)),t.SetIconVisible(!1),t.SetStarVisible(!1);var e=this.GetRemainTime(),e=(t.SetRightText(e),StringUtils_1.StringUtils.Format(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Text_Rogue_Time")??"",""));t.SetLeftText(e),t.SetHelpButtonVisible(!1)}}sea(){var e=ActivityRogueController_1.ActivityRogueController.GetCurrentActivityData()?.SeasonData;if(e){this.U2o.AddItemToLayout([ROGUE_DIFFICULTY_PROGRESS]);var i=this.U2o.GetLayoutItemByKey(ROGUE_DIFFICULTY_PROGRESS),e=(i.SetIconVisible(!1),i.SetStarVisible(!1),ConfigManager_1.ConfigManager.RoguelikeConfig?.GetRogueSeasonConfigById(e.UHn)),e=ConfigManager_1.ConfigManager.InstanceDungeonEntranceConfig?.GetConfig(e.InstanceDungeonEntrance);let t=0;for(const r of e.InstanceDungeonList)if(!ModelManager_1.ModelManager.ExchangeRewardModel?.IsFinishInstance(r)){t=r;break}0===t&&(t=e.InstanceDungeonList.pop());e=ConfigManager_1.ConfigManager.InstanceDungeonConfig?.GetConfig(t),e=(i.SetRightText(MultiTextLang_1.configMultiTextLang.GetLocalTextNew(e.DifficultyDesc[0])),StringUtils_1.StringUtils.Format(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Text_Rogue_Difficulty_Process")??"",""));i.SetLeftText(e),i.SetHelpButtonVisible(!1)}}aea(){var t=ActivityRogueController_1.ActivityRogueController.GetCurrentActivityData()?.SeasonData;if(t){this.U2o.AddItemToLayout([ROGUE_ACHIEVEMENT_PROGRESS]);var r=this.U2o.GetLayoutItemByKey(ROGUE_ACHIEVEMENT_PROGRESS),t=(r.SetIconVisible(!1),r.SetStarVisible(!1),ConfigManager_1.ConfigManager.RoguelikeConfig.GetRogueSeasonConfigById(t.UHn)),t=ModelManager_1.ModelManager.AchievementModel.GetAchievementCategoryGroups(t.Achievement);let e=0,i=0;t.forEach(t=>{t=ModelManager_1.ModelManager.AchievementModel.GetAchievementGroupData(t.GetId());t&&(e+=t.GetCurrentProgress(),i+=t.GetMaxProgress())});t=StringUtils_1.StringUtils.Format(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Text_Rogue_Score")??"{0}/{1}",e.toString(),i.toString()),t=(r.SetRightText(t),StringUtils_1.StringUtils.Format(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Text_Rogue_Achievement_Count")??"",""));r.SetLeftText(t),r.SetHelpButtonVisible(!1)}}hea(){var t,e,i=ActivityRogueController_1.ActivityRogueController.GetCurrentActivityData()?.SeasonData;i&&(this.U2o.AddItemToLayout([ROGUE_SCORE_KEY]),(t=this.U2o.GetLayoutItemByKey(ROGUE_SCORE_KEY)).SetIconVisible(!1),t.SetStarVisible(!1),e=ModelManager_1.ModelManager.RoguelikeModel.GetParamConfigBySeasonId()?.WeekTokenMaxCount??1,i=StringUtils_1.StringUtils.Format(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Text_Rogue_Score")??"{0}/{1}",i.yqs.toString(),e.toString()),t.SetRightText(i),e=StringUtils_1.StringUtils.Format(MultiTextLang_1.configMultiTextLang.GetLocalTextNew("Text_Rogue_Week_Score")??"",""),t.SetLeftText(e),t.SetHelpButtonVisible(!1))}l_i(){let t="";t=this.u2o.IsLocked?this.u2o.IsTracked?"InstanceDungeonEntranceCancelTrack":"InstanceDungeonEntranceTrack":"TeleportFastMove",this.ZAt.SetLocalText(t),this.y8a.SetLocalText(t)}OnCloseWorldMapSecondaryUi(){this?.U2o?.ClearChildren()}GetGuideFocusUiItem(){return this.GetButton(11).GetOwner().GetComponentByClass(UE.UIItem.StaticClass())}GetRemainTime(){var t=ActivityRogueController_1.ActivityRogueController.GetCurrentActivityData(),e=t.CheckIfInShowTime(),i=t.CheckIfInOpenTime();if(!i&&!e)return ConfigManager_1.ConfigManager.TextConfig.GetTextContentIdById("ActiveClose");var e=t.EndOpenTime,r=t.EndShowTime;let s=0;s=0!==t.EndOpenTime&&i?e:r;t=TimeUtil_1.TimeUtil.GetServerTime(),i=Math.max(s-t,1),e=this.FOe(i);return TimeUtil_1.TimeUtil.GetCountDownDataFormat2(i,e[0],e[1]).CountDownText??""}FOe(t){return t>CommonDefine_1.SECOND_PER_DAY?[3,2]:t>CommonDefine_1.SECOND_PER_HOUR?[2,1]:t>CommonDefine_1.SECOND_PER_MINUTE?[1,0]:[0,0]}}exports.RoguelikeEntrancePanel=RoguelikeEntrancePanel;
//# sourceMappingURL=RoguelikeEntrancePanel.js.map