
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PassiveSkillCdInfo=void 0;const Log_1=require("../../../../Core/Common/Log"),TimeUtil_1=require("../../../Common/TimeUtil");class PassiveSkillCdInfo{constructor(){this.SkillId=0,this.SkillCd=-0,this.Threshold=0,this.IsShareAllCdSkill=!1,this.EntityIds=new Set,this.CurMaxCd=0,this.CurRemainingCd=0}IsInCd(){return this.CurRemainingCd>Math.max(this.Threshold,0)}StartCd(t,i=-1){if(this.IsInCd())return!1;let s=i;return(s=-1===s?this.SkillCd:s)<=0||(this.CurMaxCd=s,this.CurRemainingCd=this.CurRemainingCd<=0?s:s+this.CurRemainingCd,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Battle",17,"被动技能CD开始",["skillId",this.SkillId],["cd",s])),!0}Tick(t){this.CurRemainingCd<=0||((t=t*TimeUtil_1.TimeUtil.Millisecond)<this.CurRemainingCd?this.CurRemainingCd-=t:(this.CurRemainingCd=0,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Battle",17,"被动技能CD结束",["skillId",this.SkillId])))}ResetAllCd(){this.CurRemainingCd=0,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Battle",17,"重置被动技能CD",["skillId",this.SkillId])}ModifyRemainingCd(t,i){this.IsInCd()&&(this.CurRemainingCd=this.CurRemainingCd+t+this.CurMaxCd*i,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Battle",17,"被动技能CD修改剩余CD",["skillId",this.SkillId],["cd",this.CurRemainingCd]),this.CurRemainingCd<=0)&&(this.CurRemainingCd=0)}}exports.PassiveSkillCdInfo=PassiveSkillCdInfo;
//# sourceMappingURL=PassiveSkillCdInfo.js.map