
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldSkillCdData=exports.SkillCdData=void 0;const Log_1=require("../../../../Core/Common/Log"),Time_1=require("../../../../Core/Common/Time"),MathUtils_1=require("../../../../Core/Utils/MathUtils"),TimeUtil_1=require("../../../Common/TimeUtil"),ModelManager_1=require("../../../Manager/ModelManager"),MultiSkillData_1=require("../../../NewWorld/Character/Common/Component/Skill/MultiSkillData"),GroupSkillCdInfo_1=require("./GroupSkillCdInfo"),MIN_SHARE_GROUP_ID=1e3;class SkillCdData{constructor(){this.SkillId2GroupIdMap=new Map,this.GroupSkillCdInfoMap=new Map,this.sQe=0,this.ServerSkillCd=new Map,this.ServerGroupSkillCd=new Map,this.NeedTick=!0}GenerateCdShareGroupId(t){return 0===t?(this.sQe++,this.sQe):t}Tick(t){for(const i of this.GroupSkillCdInfoMap.values())i.Tick(t)}TickOffRole(t){if(!this.NeedTick)return!1;let i=!0;for(const e of this.GroupSkillCdInfoMap.values())e.Tick(t),e.NeedTick&&(i=!1);return i&&(this.NeedTick=!1),this.NeedTick}Clear(){this.SkillId2GroupIdMap.clear(),this.GroupSkillCdInfoMap.clear(),this.sQe=0}}exports.SkillCdData=SkillCdData;class WorldSkillCdData{constructor(){this.EntitySkillCdMap=new Map,this.AllShareSkillCdData=new SkillCdData,this.OffRoleSkillCdMap=new Map,this.MultiSkillMap=new Map}Clear(){this.EntitySkillCdMap.clear(),this.AllShareSkillCdData.Clear(),this.OffRoleSkillCdMap.clear(),this.MultiSkillMap.clear()}InitSkillCd(t,i,e){e=e.CooldownConfig;return this.InitSkillCdCommon(t,i,e.CdTime,e.CdDelay,e.MaxCount,e.ShareGroupId,e.IsShareAllCdSkill,e.CdTags)}InitSkillCdCommon(t,i,e,r,o,s,l,a){let n=void 0;l?n=this.AllShareSkillCdData:(h=t.Id,f=void 0,(n=this.EntitySkillCdMap.get(h))||((n=t.GetComponent(0).IsRole()&&(_=t.GetComponent(0).GetPbDataId(),f=this.OffRoleSkillCdMap.get(_))?(this.OffRoleSkillCdMap.delete(_),f):new SkillCdData).NeedTick=!0,this.EntitySkillCdMap.set(h,n)));var h,f,_=n.SkillId2GroupIdMap.get(i);if(_){const d=n.GroupSkillCdInfoMap.get(_),u=d.SkillCdInfoMap.get(i);return u.SkillCd=e,d.EntityIds.add(t.Id),d}0!==s&&s<MIN_SHARE_GROUP_ID&&Log_1.Log.CheckError()&&Log_1.Log.Error("Battle",17,"自定义的冷却组不能小于1000",["skillId",i]),_=n.GenerateCdShareGroupId(s);let d=n.GroupSkillCdInfoMap.get(_);if(!d){(d=new GroupSkillCdInfo_1.GroupSkillCdInfo).GroupId=_,d.CurMaxCd=0,d.CurRemainingCd=0,d.CurRemainingDelayCd=0,d.MaxCount=o,d.LimitCount=o,d.RemainingCount=o;for(let t=a.Num()-1;0<=t;t--)d.CdTags.push(a.Get(t).TagId);0!==s?this.aQe(n.ServerGroupSkillCd,s,d,i):this.aQe(n.ServerSkillCd,i,d,i),n.GroupSkillCdInfoMap.set(_,d)}const u=new GroupSkillCdInfo_1.SkillCdInfo;return u.SkillId=i,u.SkillCd=e,u.CdDelay=r,u.IsShareAllCdSkill=l,o!==d.MaxCount&&Log_1.Log.CheckError()&&Log_1.Log.Error("Battle",17,"同一个冷却组的技能，可使用次数配置不一致",["skillId",u.SkillId]),d.SkillCdInfoMap.set(i,u),n.SkillId2GroupIdMap.set(i,_),d.EntityIds.add(t.Id),d}aQe(t,i,e,r){var o=t.get(i);if(o){if(0<o.length){var s=Time_1.Time.ServerTimeStamp;let t=0,i=0;for(const l of o)l<=s||(1===++t?(e.CurRemainingCd=(l-s)*TimeUtil_1.TimeUtil.Millisecond,e.CurMaxCd=e.CurRemainingCd):(e.SkillIdQueue.Push(r),e.CdQueue.Push((l-i)*TimeUtil_1.TimeUtil.Millisecond)),i=l);e.RemainingCount-=t,e.OnCountChanged(),e.RefreshNeedTick()}t.delete(i)}}InitMultiSkill(t){var i=this.MultiSkillMap.get(t);return i?Log_1.Log.CheckError()&&Log_1.Log.Error("Battle",17,"重复初始化多段技能",["entityId",t]):(i=new MultiSkillData_1.MultiSkillData,this.MultiSkillMap.set(t,i)),i}RemoveEntity(t){var i=t.Id,e=this.EntitySkillCdMap.get(i);if(e&&(this.EntitySkillCdMap.delete(i),t.GetComponent(0).IsRole())){t=t.GetComponent(0).GetPbDataId();for(const r of e.GroupSkillCdInfoMap.values())r.EntityIds.clear();this.OffRoleSkillCdMap.set(t,e)}for(const o of this.AllShareSkillCdData.GroupSkillCdInfoMap.values())o.EntityIds.delete(i);this.RemoveMultiSkill(i)}RemoveMultiSkill(t){this.MultiSkillMap.has(t)&&this.MultiSkillMap.delete(t)}Tick(t){for(const i of this.EntitySkillCdMap.values())i.Tick(t);this.AllShareSkillCdData.Tick(t);for(const e of this.OffRoleSkillCdMap.values())e.TickOffRole(t);for(const r of this.MultiSkillMap.values())r.OnTick(t)}HandlePlayerSkillInfoPbNotify(t){if(t.Gqs){var i=t.Gqs.Bqs;i&&this.hQe(this.AllShareSkillCdData,i);for(const e of t.Gqs.qqs)if(e.bqs){let t=this.nQe(e.xqs);t||(t=new SkillCdData,this.OffRoleSkillCdMap.set(e.xqs,t)),this.hQe(t,e.bqs)}}}hQe(t,i){var e=Time_1.Time.ServerTimeStamp;for(const o of i.Uqs)this.lQe(o,e,t.ServerSkillCd,o.r5n),this._Qe(t,o,0);for(const s of i.wqs){var r=s.Pqs;r&&(this.lQe(r,e,t.ServerGroupSkillCd,s.Aqs),this._Qe(t,r,s.Aqs))}}_Qe(t,i,e=0){var r=t.SkillId2GroupIdMap.get(i.r5n);return!!r&&!!(r=t.GroupSkillCdInfoMap.get(r))&&(0!==e?this.aQe(t.ServerSkillCd,e,r,i.r5n):this.aQe(t.ServerSkillCd,i.r5n,r,i.r5n),!0)}lQe(t,i,e,r){var o=[];for(const l of t.Dqs){var s=MathUtils_1.MathUtils.LongToNumber(l);i<s&&o.push(s)}0<o.length&&(1<o.length&&o.sort((t,i)=>t-i),e.set(r,o))}nQe(t){const i=this.OffRoleSkillCdMap.get(t);if(i)return i;for(const[r,i]of this.EntitySkillCdMap){var e=ModelManager_1.ModelManager.CharacterModel?.GetHandle(r);if(e?.Valid){e=e.Entity;if(!i)if(e.GetComponent(0).IsRole())if(e.GetComponent(0).GetPbDataId()===t)return i}}}}exports.WorldSkillCdData=WorldSkillCdData;
//# sourceMappingURL=SkillCdData.js.map