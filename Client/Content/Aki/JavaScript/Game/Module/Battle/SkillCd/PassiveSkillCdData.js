
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldPassiveSkillCdData=exports.PassiveSkillCdData=void 0;const Time_1=require("../../../../Core/Common/Time"),CommonParamById_1=require("../../../../Core/Define/ConfigCommon/CommonParamById"),MathUtils_1=require("../../../../Core/Utils/MathUtils"),TimeUtil_1=require("../../../Common/TimeUtil"),ModelManager_1=require("../../../Manager/ModelManager"),PassiveSkillCdInfo_1=require("./PassiveSkillCdInfo");class PassiveSkillCdData{constructor(){this.SkillCdInfoMap=new Map,this.ServerSkillCd=new Map}Tick(i){for(const t of this.SkillCdInfoMap.values())t.Tick(i)}Clear(){this.SkillCdInfoMap.clear()}}exports.PassiveSkillCdData=PassiveSkillCdData;class WorldPassiveSkillCdData{constructor(){this.EntitySkillCdMap=new Map,this.AllShareSkillCdData=new PassiveSkillCdData,this.OffRoleSkillCdMap=new Map}Clear(){this.EntitySkillCdMap.clear(),this.AllShareSkillCdData.Clear(),this.OffRoleSkillCdMap.clear()}InitPassiveSkillCd(i,t){let s=t.CdThreshold;return s<0&&(s=CommonParamById_1.configCommonParamById.GetFloatConfig("PassiveSkillCdThreshold")??0),this.InitSkillCdCommon(i,t.Id,t.CDTime,t.IsShareAllCdSkill,s)}InitSkillCdCommon(i,t,s,e,o){let a=void 0;var r,l,n;e?a=this.AllShareSkillCdData:(r=i.Id,n=void 0,(a=this.EntitySkillCdMap.get(r))||(a=i.GetComponent(0).IsRole()&&(l=i.GetComponent(0).GetPbDataId(),n=this.OffRoleSkillCdMap.get(l))?(this.OffRoleSkillCdMap.delete(l),n):new PassiveSkillCdData,this.EntitySkillCdMap.set(r,a)));let h=a.SkillCdInfoMap.get(t);return h||((h=new PassiveSkillCdInfo_1.PassiveSkillCdInfo).SkillId=t,h.SkillCd=s,void 0!==o&&(h.Threshold=o),h.IsShareAllCdSkill=e,h.CurMaxCd=0,h.CurRemainingCd=0,(l=a.ServerSkillCd.get(t))&&((n=Time_1.Time.ServerTimeStamp)<l&&(h.CurRemainingCd=(l-n)*TimeUtil_1.TimeUtil.Millisecond),a.ServerSkillCd.delete(t)),a.SkillCdInfoMap.set(t,h)),h.EntityIds.add(i.Id),h}RemoveEntity(i){var t=i.Id,s=this.EntitySkillCdMap.get(t);if(s&&(this.EntitySkillCdMap.delete(t),i.GetComponent(0).IsRole())){i=i.GetComponent(0).GetPbDataId();for(const e of s.SkillCdInfoMap.values())e.EntityIds.clear();this.OffRoleSkillCdMap.set(i,s)}for(const o of this.AllShareSkillCdData.SkillCdInfoMap.values())o.EntityIds.delete(t)}Tick(i){for(const t of this.EntitySkillCdMap.values())t.Tick(i);this.AllShareSkillCdData.Tick(i);for(const s of this.OffRoleSkillCdMap.values())s.Tick(i)}HandlePassiveSkillNotify(i){var t=Time_1.Time.ServerTimeStamp;for(const a of i.jBs){let i=this.nQe(a.Q6n);i||(i=new PassiveSkillCdData,this.OffRoleSkillCdMap.set(a.Q6n,i));for(const r of a.HBs){var s,e,o=MathUtils_1.MathUtils.LongToNumber(r.$Bs);o<=t||(s=MathUtils_1.MathUtils.LongToNumber(r.r5n),(e=i.SkillCdInfoMap.get(s))?e.CurRemainingCd=(o-t)*TimeUtil_1.TimeUtil.Millisecond:i.ServerSkillCd.set(s,o))}}}nQe(i){const t=this.OffRoleSkillCdMap.get(i);if(t)return t;for(const[e,t]of this.EntitySkillCdMap){var s=ModelManager_1.ModelManager.CharacterModel?.GetHandle(e);if(s?.Valid){s=s.Entity;if(!t)if(s.GetComponent(0).IsRole())if(s.GetComponent(0).GetPbDataId()===i)return t}}}}exports.WorldPassiveSkillCdData=WorldPassiveSkillCdData;
//# sourceMappingURL=PassiveSkillCdData.js.map