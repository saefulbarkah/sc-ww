
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DockyardBackpackPanelModelBase=void 0;const ControllerHolder_1=require("../../../../../../Manager/ControllerHolder"),ModelManager_1=require("../../../../../../Manager/ModelManager"),ConfirmBoxDefine_1=require("../../../../../ConfirmBox/ConfirmBoxDefine"),ScrollingTipsController_1=require("../../../../../ScrollingTips/ScrollingTipsController"),FishingDefine_1=require("../../FishingDefine"),DockyardBackpackData_1=require("../Bag/DockyardBackpackData");class DockyardBackpackPanelModelBase{constructor(){this.fXl=!1,this.InSelectedBlockId=FishingDefine_1.UNVALID_ITEM_BLOCK_ID,this.IsInDragState=!1,this.IsOutOfRange=!1,this.IsSetFail=!1,this.Panel=void 0,this.ViewModel=void 0,this.PreviewBackpackMap=new Map,this.TempQuicklySellType=0,this.TempQuicklySellIncIdSet=new Set,this.BackpackData=void 0,this.IsDragFail=!1,this.IsMoved=!1,this.QuicklySellClick=()=>{this.IsInSelectState?ScrollingTipsController_1.ScrollingTipsController.ShowTipsByTextId("Fishing_SelectingQuit"):ControllerHolder_1.ControllerHolder.FishingController.RequestFishingQuickSell(t=>{if(t){this.Panel.CloseQuicklySellPanel();for(const i of this.TempQuicklySellIncIdSet)this.Panel.DestroyItemBlockById(i);this.TempQuicklySellIncIdSet.clear()}})},this.OnSellClick=t=>{1===t?(this.ViewModel?.NotifyQuicklySellActive?.(!0),this.Panel.ShowQuicklySellPanel()):(this.ViewModel?.NotifyQuicklySellActive?.(!1),this.Panel.HideQuicklySellPanel())},this.OnTrawlClick=t=>{this.IsInSelectState?ScrollingTipsController_1.ScrollingTipsController.ShowTipsByTextId("Fishing_SelectingQuit"):this.ViewModel?.TrawlClick?.(1===t)},this.OnDeleteClick=()=>{var t;ModelManager_1.ModelManager.FunctionModel.IsOpen(10076)?((t=new ConfirmBoxDefine_1.ConfirmBoxDataNew(235)).FunctionMap.set(2,()=>{this.ViewModel?.DeleteClick?.()}),ControllerHolder_1.ControllerHolder.ConfirmBoxController.ShowConfirmBoxNew(t)):ControllerHolder_1.ControllerHolder.GenericPromptController.ShowPromptByCode("NotOpen")},this.OnRotateClick=()=>{this.ViewModel?.RotateClick?.()},this.OnConfirmClick=()=>{this.ViewModel?.ConfirmClick?.()},this.OnAllSellClick=()=>{this.ViewModel?.AllSellClick?.()},this.OnBackToWareHouseClick=()=>{this.TrySetItemBlockBackToWareHouse()},this.OnMaskClick=()=>{ScrollingTipsController_1.ScrollingTipsController.ShowTipsByTextId("Fishing_SelectingQuit")},this.BackpackTick=t=>{this.IsInSelectState&&this.IsInDragState&&this.InSelectedBlockId!==FishingDefine_1.UNVALID_ITEM_BLOCK_ID&&this.ViewModel?.BackpackTick?.(t)},this.IsAllSellOpen=!1,this.IsDeleteOpen=!0,this.BackpackData=new DockyardBackpackData_1.DockyardBackpackData(this.IsQuickSellOpen())}get IsInSelectState(){return this.fXl}set IsInSelectState(t){this.fXl=t,this.Panel.SetAllSellBtnState(t),this.Panel.SetItemBlockTextureMaskActive(t),this.ViewModel?.SetInSelectState?.(t),t||this.Panel.SetButtonsState(!1)}get IsInHighlight(){return!this.IsInCanConfirm}get IsInCanConfirm(){return!this.IsSetFail&&!this.IsOverlap()}yXl(){for(const t of this.BackpackData.GetBackpackDataList())this.PreviewBackpackMap.set(t,FishingDefine_1.UNVALID_ITEM_BLOCK_ID)}SetPreviewBackpackData(t,i){this.PreviewBackpackMap.set(t,i)}GetPreviewBackpackData(t){return this.PreviewBackpackMap.get(t)}RefreshBackpackQuicklySellData(){this.BackpackData.RefreshQuicklySellOpen(this.IsQuickSellOpen())}InitPanel(t){this.Panel=t,this.yXl()}RegisterViewModel(t){this.ViewModel=t}SetItemBlockToWareHouse(t){this.ViewModel?.NotifyItemBlockToWareHouse?.(t)}Tick(){this.RefreshPanel()}RefreshPanel(t=!0){this.Panel.RefreshAllBackpackGridState(t);t=this.ViewModel?.IsConfirmInteractive?this.ViewModel.IsConfirmInteractive():!this.IsSetFail,this.Panel.SetConfirmInteractive(t),t=this.ViewModel?.IsConfirmNiagaraActive?this.ViewModel.IsConfirmNiagaraActive():this.IsInCanConfirm;this.Panel.SetConfirmNiagaraActive(t)}CanConfirm(){return this.Panel.CanConfirm()}IsOverlap(){return this.Panel.IsOverlap()}GetQuicklySellPanelParentItem(){return this.ViewModel.GetQuicklySellPanelParentItem?.()}OnItemBlockClick(t){this.IsInSelectState||(this.Panel.ItemBlockClick(t),this.ViewModel?.ItemBlockClick(t))}CanDrag(t){return this.Panel.CanDrag(t)}DragBegin(t){return!this.IsInDragState&&(this.IsInDragState=!0,this.IsMoved=!1,this.ViewModel?.HandleDragBegin?.(),this.Panel.SetButtonsState(!1),!0)}DragEnd(t){return!!this.IsInDragState&&(this.IsInDragState=!1,this.ViewModel?.HandleDragResult(),!0)}WareHouseItemClick(t){this.Panel.CreateItemBlockByView(t)}WareHouseItemDragBegin(t){this.Panel.CreateItemBlockByViewAndFollow(t)}IsWareHouseItemCanClick(t){return!this.IsInSelectState}GetSelectedId(){return this.InSelectedBlockId}async TrySetItemBlockBackToWareHouse(){return this.InSelectedBlockId===FishingDefine_1.UNVALID_ITEM_BLOCK_ID||(await this.ViewModel?.TrySetSelectedItemBlockToWareHouse?.()??!0)}async TrySetSelectedItemBlockConfirm(){return this.InSelectedBlockId===FishingDefine_1.UNVALID_ITEM_BLOCK_ID||(this.IsInCanConfirm?await this.ViewModel?.TrySetSelectedItemBlockToBackpack?.()??!0:await this.ViewModel?.TrySetSelectedItemBlockToWareHouse?.()??!0)}IsQuickSellOpen(){return!ModelManager_1.ModelManager.FishingModel.IsInDock&&ModelManager_1.ModelManager.DockyardModel.IsQuicklySellOpen}GetIsTrawlOpen(){return!1}GetIsBackToWareHouseOpen(){return!0}}exports.DockyardBackpackPanelModelBase=DockyardBackpackPanelModelBase;
//# sourceMappingURL=DockyardBackpackPanelModelBase.js.map