
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActivityMowingRiskController=void 0;const Log_1=require("../../../../../../Core/Common/Log"),Protocol_1=require("../../../../../../Core/Define/Net/Protocol"),Net_1=require("../../../../../../Core/Net/Net"),EventDefine_1=require("../../../../../Common/Event/EventDefine"),EventSystem_1=require("../../../../../Common/Event/EventSystem"),ControllerHolder_1=require("../../../../../Manager/ControllerHolder"),ModelManager_1=require("../../../../../Manager/ModelManager"),InstanceDungeonEntranceController_1=require("../../../../InstanceDungeon/InstanceDungeonEntranceController"),ActivityControllerBase_1=require("../../../ActivityControllerBase"),ActivityManager_1=require("../../../ActivityManager"),ActivityMowingRiskSubView_1=require("../View/ActivityMowingRiskSubView");var Proto_ErrorCode=Protocol_1.Aki.Protocol.Q4n,Proto_RiskHarvestInstRewardRequest=Protocol_1.Aki.Protocol.Vfl,Proto_RiskHarvestScoreRewardRequest=Protocol_1.Aki.Protocol.Hfl;const UiManager_1=require("../../../../../Ui/UiManager"),ItemRewardController_1=require("../../../../ItemReward/ItemRewardController"),ItemRewardDefine_1=require("../../../../ItemReward/ItemRewardDefine");var Proto_RiskHarvestSettleRequest=Protocol_1.Aki.Protocol.Ypl;const CustomPromise_1=require("../../../../../../Core/Common/CustomPromise");class ActivityMowingRiskController extends ActivityControllerBase_1.ActivityControllerBase{constructor(){super(...arguments),this.Soh=new CustomPromise_1.CustomPromise,this.gVa=e=>{this.fVa(e),ControllerHolder_1.ControllerHolder.GameModeController.IsInInstance()&&(ModelManager_1.ModelManager.MowingRiskModel.SyncProtocolRiskHarvestEndNotify(e),this.yoh(e))},this.pVa=e=>{this.fVa(e),ModelManager_1.ModelManager.MowingRiskModel.SyncProtocolRiskHarvestInstUpdateNotify(e)},this.vVa=e=>{this.fVa(e),ModelManager_1.ModelManager.MowingRiskModel.SyncProtocolRiskHarvestArtifactNotify(e)},this.MVa=e=>{this.fVa(e);var t=ModelManager_1.ModelManager.MowingRiskModel;t.SyncProtocolRiskHarvestBuffUpdateNotify(e),this.Eoh(),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.MowingRiskInBattleRootUpdate,t.BuildInBattleRootData())},this.yVa=e=>{this.fVa(e),ModelManager_1.ModelManager.MowingRiskModel.SyncProtocolRiskHarvestBuffUnlockNotify(e)},this.EVa=e=>{this.fVa(e);var t=ModelManager_1.ModelManager.MowingRiskModel;t.SyncProtocolRiskHarvestActivityUpdateNotify(e),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnNeedRefreshByProtocol),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.ActivityViewRefreshCurrent,t.ActivityData.Id),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.RefreshCommonActivityRedDot,t.ActivityData.Id)},this.uZs=()=>{this.CheckInInstanceDungeon()&&this.RequestRiskHarvestSettleRequest()},this.lZs=()=>{},this._Zs=()=>{this.CheckInInstanceDungeon()&&(ModelManager_1.ModelManager.DeadReviveModel.HandleOnClickGiveUpExternal=void 0,InstanceDungeonEntranceController_1.InstanceDungeonEntranceController.IsSettleExternalProcess=!1,ModelManager_1.ModelManager.MowingRiskModel.ResetCacheInBattle())},this.yRa=()=>{this.CheckInInstanceDungeon()&&(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,"局内局内局内的起点"),ModelManager_1.ModelManager.DeadReviveModel.HandleOnClickGiveUpExternal=()=>{this.RequestRiskHarvestSettleRequest()},InstanceDungeonEntranceController_1.InstanceDungeonEntranceController.IsSettleExternalProcess=!0,this.Soh.SetResult())},this.Ioh=()=>{this.Eoh()}}static get Instance(){return ActivityManager_1.ActivityManager.GetActivityController(Protocol_1.Aki.Protocol.uks.Proto_RiskHarvest)}OnOpenView(e){}OnGetActivityResource(e){return"UiItem_ActivityMowingRisk"}OnCreateSubPageComponent(e){return new ActivityMowingRiskSubView_1.ActivityMowingRiskSubView}OnCreateActivityData(e){return ModelManager_1.ModelManager.MowingRiskModel.ActivityData}OnGetIsOpeningActivityRelativeView(){return!1}OnRegisterNetEvent(){Net_1.Net.Register(24181,this.gVa),Net_1.Net.Register(27435,this.pVa),Net_1.Net.Register(17247,this.vVa),Net_1.Net.Register(16196,this.MVa),Net_1.Net.Register(18995,this.yVa),Net_1.Net.Register(25625,this.EVa)}OnUnRegisterNetEvent(){Net_1.Net.UnRegister(24181),Net_1.Net.UnRegister(27435),Net_1.Net.UnRegister(17247),Net_1.Net.UnRegister(16196),Net_1.Net.UnRegister(18995),Net_1.Net.UnRegister(25625)}OnAddEvents(){EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.EnterInstanceDungeon,this.lZs),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.LeaveInstanceDungeon,this._Zs),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.LeaveInstanceDungeonConfirm,this.uZs),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.WorldDoneAndCloseLoading,this.yRa),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.MowingRiskOnBuffTipsAfterDestroy,this.Ioh)}OnRemoveEvents(){EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.EnterInstanceDungeon,this.lZs),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.LeaveInstanceDungeon,this._Zs),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.LeaveInstanceDungeonConfirm,this.uZs),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.WorldDoneAndCloseLoading,this.yRa),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.MowingRiskOnBuffTipsAfterDestroy,this.Ioh)}GetActivityLevelUnlockState(e){return ModelManager_1.ModelManager.MowingRiskModel.IsInstanceUnlockedByInstanceId(e)}async RequestRiskHarvestInstRewardRequest(e){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,"RequestRiskHarvestInstRewardRequest:"+e);var t=Proto_RiskHarvestInstRewardRequest.create(),t=(t.s5n=e,await Net_1.Net.CallAsync(20821,t));void 0!==t&&(t.Q4n!==Proto_ErrorCode.KRs?(Log_1.Log.CheckError()&&Log_1.Log.Error("MowingRisk",64,"请求失败，关卡奖励：RiskHarvestInstRewardRequest---"+t.Q4n),t.Q4n===Proto_ErrorCode.Proto_ErrRiskHarvestActivityNotOpen?ControllerHolder_1.ControllerHolder.GenericPromptController.ShowPromptByCode("MowingRiskActivityNotOpenForReward"):ControllerHolder_1.ControllerHolder.ErrorCodeController.OpenErrorCodeTipView(t.Q4n,15691)):(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,`RequestRiskHarvestInstRewardRequest:${e}--Success`),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.MowingRiskOnRefreshRewardRedDot),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.RefreshCommonActivityRedDot,ModelManager_1.ModelManager.MowingRiskModel.ActivityData.Id)))}async RequestRiskHarvestScoreRewardRequest(e){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,"RequestRiskHarvestScoreRewardRequest:"+e);var t=Proto_RiskHarvestScoreRewardRequest.create(),t=(t.s5n=e,await Net_1.Net.CallAsync(28452,t));void 0!==t&&(t.Q4n!==Proto_ErrorCode.KRs?(Log_1.Log.CheckError()&&Log_1.Log.Error("MowingRisk",64,"请求失败，积分奖励：RiskHarvestScoreRewardRequest---"+t.Q4n),t.Q4n===Proto_ErrorCode.Proto_ErrRiskHarvestActivityNotOpen?ControllerHolder_1.ControllerHolder.GenericPromptController.ShowPromptByCode("MowingRiskActivityNotOpenForReward"):ControllerHolder_1.ControllerHolder.ErrorCodeController.OpenErrorCodeTipView(t.Q4n,21407)):(Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,`RequestRiskHarvestScoreRewardRequest:${e}--Success`),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.MowingRiskOnRefreshRewardRedDot),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.RefreshCommonActivityRedDot,ModelManager_1.ModelManager.MowingRiskModel.ActivityData.Id)))}async RequestRiskHarvestSettleRequest(){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,"请求请求请求结算");var e=Proto_RiskHarvestSettleRequest.create(),e=await Net_1.Net.CallAsync(16079,e);void 0!==e&&(e.Q4n!==Proto_ErrorCode.KRs?Log_1.Log.CheckError()&&Log_1.Log.Error("MowingRisk",64,"请求失败，退出请求结算：RequestRiskHarvestSettleRequest---"+e.Q4n):Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,"请求请求请求结算--Success"))}fVa(e){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,"割草冒险Notify:"+e.constructor.name,["msg",e])}Eoh(){var e,t,o;!UiManager_1.UiManager.IsViewOpen("MowingBuffNewBuffTipsView")&&this.CheckInInstanceDungeon()&&(t=(e=ModelManager_1.ModelManager.MowingRiskModel).NextNewBuffId)&&(o=e.BuildNewBuffTipsDataById(t),UiManager_1.UiManager.OpenView("MowingBuffNewBuffTipsView",o),e.IsSuperBuffById(t))&&(this.Toh(t),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.MowingRiskOnNeedPlayLevelUpSequence))}Toh(e){var t=ModelManager_1.ModelManager.MowingRiskModel.BuildInBattleBuffDataById(e);Log_1.Log.CheckDebug()&&Log_1.Log.Debug("MowingRisk",64,`显示场内Buff 中心Tips，buff Id：${e}----`+t.TitleTextId),ControllerHolder_1.ControllerHolder.GenericPromptController.ShowPromptByItsType(21,void 0,void 0,void 0,void 0,void 0,void 0,t)}async yoh(e){await this.Loh();var t={ButtonTextId:"ConfirmBox_133_ButtonText_0",DescriptionTextId:void 0,IsTimeDownCloseView:!1,IsClickedCloseView:!0,OnClickedCallback:function(){InstanceDungeonEntranceController_1.InstanceDungeonEntranceController.LeaveInstanceDungeon()}},o={ButtonTextId:"ConfirmBox_133_ButtonText_1",DescriptionTextId:"RiskHarvest_HistoryToppoint",DescriptionArgs:[ModelManager_1.ModelManager.MowingRiskModel.GetRecordScoreById(e.s5n).toString()],IsTimeDownCloseView:!1,IsClickedCloseView:!1,OnClickedCallback:function(){InstanceDungeonEntranceController_1.InstanceDungeonEntranceController.RestartInstanceDungeon()}},i=ModelManager_1.ModelManager.MowingRiskModel.GetMaxScoreById(e.s5n),r=e.Yma;ItemRewardController_1.ItemRewardController.OpenExploreRewardView(e.Gyl?ItemRewardDefine_1.MOWING_RESULT:ItemRewardDefine_1.MOWING_ERROR_RESULT,e.Gyl,void 0,void 0,void 0,[t,o],void 0,void 0,void 0,void 0,void 0,void 0,void 0,{TargetReached:[{Target:[e._yl.toString()],DescriptionTextId:"RiskHarvest_Timepoint",IsReached:!0},{Target:[e.jyl.toString()],DescriptionTextId:"RiskHarvest_Monsterpoint",IsReached:!0}],IfNewRecord:!1,FullScore:r,RecordTextId:r<i?"RiskHarvest_Score":"RiskHarvest_Scorelimit"})}async Loh(){await this.Soh.Promise,this.Soh=new CustomPromise_1.CustomPromise}CheckInInstanceDungeon(){var e;return!!ControllerHolder_1.ControllerHolder.GameModeController.IsInInstance()&&void 0!==(e=ModelManager_1.ModelManager.GameModeModel.InstanceDungeon)&&22===e.InstSubType}}exports.ActivityMowingRiskController=ActivityMowingRiskController;
//# sourceMappingURL=ActivityMowingRiskController.js.map