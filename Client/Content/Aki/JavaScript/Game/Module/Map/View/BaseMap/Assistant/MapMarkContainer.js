
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MapMarkContainer=void 0;const Log_1=require("../../../../../../Core/Common/Log"),Vector_1=require("../../../../../../Core/Utils/Math/Vector"),EventDefine_1=require("../../../../../Common/Event/EventDefine"),EventSystem_1=require("../../../../../Common/Event/EventSystem"),ModelManager_1=require("../../../../../Manager/ModelManager"),GeneralLogicTreeUtil_1=require("../../../../GeneralLogicTree/GeneralLogicTreeUtil"),TrackController_1=require("../../../../Track/TrackController"),MapDefine_1=require("../../../MapDefine"),MapUtil_1=require("../../../MapUtil"),MapMarkPreemptiveFrameQueue_1=require("./MapFrameTaskQueue/MapMarkPreemptiveFrameQueue");class MapMarkContainer{constructor(){this.Hah=new MapMarkPreemptiveFrameQueue_1.MapMarkPreemptiveFrameQueue(50),this.rUi=new Map,this.jah=new Map,this.nUi=new Map,this.hUi=new Map,this.sUi=new Set,this.aUi=new Set}Tick(){this.Hah.TryExecuteNextTask()}ClearMarkItems(e){if(e){var t=this.rUi.get(e);if(t){for(var[,r]of t)this.hUi.delete(r.MarkId),r.Destroy(),this.LUi(r);t.clear()}t=this.jah.get(e);if(t){for(var[,i]of t)i.Destroy();t.clear()}this.Hah.CancelMapTaskByType(e)}else this.xgl(this.rUi),this.xgl(this.jah),this.sUi.clear(),this.rUi.clear(),this.jah.clear(),this.nUi.clear(),this.Hah.Dispose()}AddMarkItem(t,r){if(r)if(r.IsTracked&&12!==r.MarkType&&(ModelManager_1.ModelManager.MapModel.SetCurTrackMark([r.MarkType,r.MarkId]),this.sUi.add(r)),r.IsDiffMap())this.Wah(t,r);else{let e=this.GetMarkItemsByType(t,!1);e||(e=new Map,this.rUi.set(t,e)),e.set(r.MarkId,r),this.TUi(r),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.AddMapMark,r)}}Wah(t,r){if(r){let e=this.GetDifferMapMarkItemsByType(t);e||(e=new Map,this.jah.set(t,e)),e.set(r.MarkId,r)}}RemoveMarkItem(e,t){this.Hah.CancelMapTask(e,t);e=this.GetMarkItemsByType(e);if(e&&0!==e.size){var r=e.get(t);if(e.delete(t),this.hUi.delete(t),r)return this.LUi(r),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Map",63,"移除标记_MarkMgr",["MarkId",t]),r}}xgl(e){for(var[,t]of e)for(var[,r]of t)this.hUi.delete(r.MarkId),r.Destroy()}TUi(e){var t,r=e.WorldPosition;r&&(r=this.ConvertWorldPositionToIndex(r),(t=this.nUi.get(r))?t.add(e):(t=(new Set).add(e),this.nUi.set(r,t)),e.GridId=r)}LUi(e){var t=e.GridId,t=this.nUi.get(t);t&&t.delete(e)}GetMarkItem(e,t){if(this.Hah.ForceExecuteTask(e,t),0===e){const i=this.GetMarkItemById(t);return i}var r=this.GetMarkItemsByType(e);if(r){const i=r.get(t);return i||this.GetDifferMapMarkItem(e,t)}}GetMarkItemById(i,e=!1){var t=e=>{let t=void 0;for(var[,r]of e)if(t=r.get(i))break;return t};let r=t(this.GetAllMarkItems());return void 0===r&&e&&(e=this.GetAllDiffMapMarkItems(),r=t(e)),r}GetDifferMapMarkItem(e,t){e=this.GetDifferMapMarkItemsByType(e);if(e)return e.get(t)||void 0}GetMarkItemsByType(e,t=!0){var r=this.rUi.get(e);return(!r||r.size<=0)&&t?this.GetDifferMapMarkItemsByType(e):r}GetDifferMapMarkItemsByType(e){return this.jah.get(e)}GetAllMarkItems(){return this.rUi}GetAllDiffMapMarkItems(){return this.jah}ConvertWorldPositionToIndex(e){var t=Math.floor(Math.round(e.X*MapDefine_1.MARK_WORLD_TO_HASH_SCALE)/MapDefine_1.MARK_SCOPE),e=Math.floor(Math.round(e.Y*MapDefine_1.MARK_WORLD_TO_HASH_SCALE)/MapDefine_1.MARK_SCOPE);return t*MapDefine_1.MARK_HASH_XY_PANDING+e}GetAroundIndex(e){return new Set([e,e+MapDefine_1.MARK_HASH_XY_PANDING,e-MapDefine_1.MARK_HASH_XY_PANDING,e+1,e-1,e+MapDefine_1.MARK_HASH_XY_PANDING-1,e+MapDefine_1.MARK_HASH_XY_PANDING+1,e-MapDefine_1.MARK_HASH_XY_PANDING-1,e-MapDefine_1.MARK_HASH_XY_PANDING+1])}GetMarkItemsByClickPosition(e){var e=MapUtil_1.MapUtil.UiPosition2WorldPosition(e),e=this.ConvertWorldPositionToIndex(e),t=[];for(const i of this.GetAroundIndex(e)){var r=this.nUi.get(i);r&&t.push(...r)}return t}UpdateNearbyMarkItem(e,t,r){var e=this.ConvertWorldPositionToIndex(e),i=this.GetAroundIndex(e);for(const v of i){const a=this.nUi.get(v);if(a)for(const p of a)this.hUi.has(p.MarkId)||11===p.MarkType||this.hUi.set(p.MarkId,p)}const a=this.GetMarkItemsByType(11);if(a)for(var[,s]of a)this.hUi.set(s.MarkId,s);e=this.GetMarkItemsByType(22);if(e)for(var[,o]of e)this.hUi.set(o.MarkId,o);var n,e=this.GetMarkItemsByType(17);if(e)for(var[,h]of e)this.hUi.set(h.MarkId,h);for([,n]of this.hUi)t(n),n.IsCanShowView||(this.aUi.add(n),this.hUi.delete(n.MarkId));for(const c of this.sUi)t(c);if(0!==this.aUi.size){for(const k of this.aUi){var f=k.GridId;i.has(f)||(k.LogicUpdate(GeneralLogicTreeUtil_1.GeneralLogicTreeUtil.GetPlayerLocation()),r(k))}this.aUi.clear()}for(const l of i){var M=this.nUi.get(l);if(M)for(const _ of M)t(_)}}FindNearbyMarkItems(r,e){this.Hah.Flush();const i=r.WorldPosition;var t=this.ConvertWorldPositionToIndex(i),a=Math.ceil(1/(MapDefine_1.MARK_SCOPE*MapDefine_1.MARK_WORLD_TO_HASH_SCALE)),s=this.GetAroundIndex(t);let o=Array.from(s.values());var n=new Set;if(n.add(t),0<s.size)for(let e=0;e<=a;++e){var h=[];for(const p of o)if(!n.has(p)){for(const c of this.GetAroundIndex(p))n.has(c)||h.push(c);n.add(p)}o=h}const f=[],M=Math.pow(e,2);for(const k of n){var v=this.nUi.get(k);v&&v.forEach(e=>{var t;r!==e&&(t=Vector_1.Vector.DistSquared(e.WorldPosition,i))<=M&&f.push([e,t])})}return 0<f.length&&f.sort((e,t)=>e[1]-t[1]),f}RemoveDynamicMark(e,t){var r=this.GetMarkItem(e,t);r&&(this.TrackMapMark(e,r.MarkId,!1),this.hUi.has(t)&&this.hUi.delete(t),void 0!==(r=this.RemoveMarkItem(e,t)))&&r.Destroy()}TrackMapMark(t,r,i,a=!1){var s=ModelManager_1.ModelManager.TrackModel.GetTrackData(1,r),o=this.GetMarkItem(t,r);if(o||s){let e=0;s&&(e=s.TrackSource,s.IconPath=o?.IconPath??s.IconPath),o&&(e=o.TrackSource);s=ModelManager_1.ModelManager.TrackModel.IsTracking(e,r);if(a||s!==i)if(i){if(o){let e=void 0;1===o.MarkItemType&&(e=o?.MarkConfig),TrackController_1.TrackController.StartTrack({TrackSource:o.TrackSource,Id:r,MarkType:t,MarkConfig:e,IconPath:o.IconPath,TrackTarget:o.TrackTarget,TrackInstanceId:o.MapId}),this.sUi.add(o)}}else TrackController_1.TrackController.EndTrack(e,r),o&&(this.aUi.add(o),this.sUi.delete(o))}}TrackMark(e){e=this.GetMarkItem(e.MarkType??0,e.Id);e&&!e.IsTracked&&e.LogicUpdate(GeneralLogicTreeUtil_1.GeneralLogicTreeUtil.GetPlayerLocation()),((e&&e.View)??e?.IsTracked)&&this.sUi.add(e)}UnTrackMark(e){e=this.GetMarkItem(e.MarkType??0,e.Id);e&&e.View&&(this.sUi.delete(e),this.aUi.add(e))}ClearTrackMark(){for(const e of this.sUi)e&&e.View&&this.aUi.add(e);this.sUi.clear()}RemoveNeedUpdateMark(e){this.hUi.has(e)&&this.hUi.delete(e)}AddCreateMarkTask(e,t,r,i){this.Hah.AddTask({Priority:e?0:1,MarkType:t,MarkId:r,Execute:i})}}exports.MapMarkContainer=MapMarkContainer;
//# sourceMappingURL=MapMarkContainer.js.map