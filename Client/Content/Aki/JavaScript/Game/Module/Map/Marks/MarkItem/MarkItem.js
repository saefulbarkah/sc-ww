
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MarkItem=void 0;const Vector_1=require("../../../../../Core/Utils/Math/Vector"),Vector2D_1=require("../../../../../Core/Utils/Math/Vector2D"),ConfigManager_1=require("../../../../Manager/ConfigManager"),ModelManager_1=require("../../../../Manager/ModelManager"),GeneralLogicTreeUtil_1=require("../../../GeneralLogicTree/GeneralLogicTreeUtil"),WorldMapDefine_1=require("../../../WorldMap/WorldMapDefine"),MapController_1=require("../../Controller/MapController"),MapDefine_1=require("../../MapDefine"),MapUtil_1=require("../../MapUtil"),MapLogger_1=require("../../Misc/MapLogger");class MarkItem{constructor(t,i,e,s=1){this.yDl=void 0,this.MapType=2,this.kDi=1,this.ShowPriority=0,this.IsDestroy=!1,this.IsIgnoreScaleShow=!1,this.ConfigScale=1,this.CornerScale=1,this.TrackFxScale=1,this.FDi=void 0,this.WorldPositionVector=void 0,this.GridId=0,this.MapId=0,this.NeedPlayShowOrHideSeq=void 0,this.Y5l=void 0,this.IsSelectThisFloor=!1,this.WDi=!1,this.KDi=!1,this.sql=void 0,this.EnableCachePosition=!0,this.TrackSourceInner=2,this.QDi=void 0,this.InnerView=void 0,this.xbt="",this.ddl=!1,this.XDi=!1,this.IsCanShowViewFinally=!1,this.MapType=i,this.kDi=e,this.QDi=t,this.TrackSourceInner=s,this.IsOutOfBound=!1,this.IsInAoiRange=!1,this.FDi=Vector_1.Vector.Create(),this.WorldPositionVector=Vector_1.Vector.Create()}get MarkItemEntity(){return void 0===this.yDl&&MapLogger_1.MapLogger.ErrorOnce(this.MarkId??0,63,"没有初始化标记逻辑实体，请检查代码逻辑!",["MarkId",this.MarkId],["MarkType",this.MarkType]),this.yDl}set MarkItemEntity(t){this.yDl=t}get MarkItemType(){return 0}get VDi(){return ModelManager_1.ModelManager.TeleportModel.IsTeleport??!1}get MarkScale(){return this.kDi}get UiPosition(){return this.FDi||MapUtil_1.MapUtil.WorldPosition2UiPosition(this.WorldPosition,this.FDi)}get InitUiPosition(){return this.Y5l||this.UiPosition}SetAnchorOffset(t){var i;t.X===this.Y5l?.X&&t.Y===this.Y5l?.Y||(i=this.View?.GetRootItem(),this.Y5l=Vector_1.Vector.Create(t.X,t.Y,0),void 0===i)||(t=t.ToUeVector2D(!0),i.SetAnchorOffset(t))}IsMultiMap(){return!1}LocateInGround(){return!0}ConnectGround(){return!0}GetMultiMapId(){return 0}ShowSecondaryUiMultiMapIcon(){return this.IsMultiMap()&&!this.LocateInGround()}GetIsSelectThisFloor(){var t;return!!this.IsMultiMap()&&(t=this.GetMultiMapId(),1===this.MapType?this.InMultiMapArea(t):ModelManager_1.ModelManager.WorldMapModel.WorldMapCurrentMultiMapId===t)}InMultiMapArea(t){var i=ModelManager_1.ModelManager.AreaModel.GetCurrentAreaId(),t=ConfigManager_1.ConfigManager.MapConfig.GetSubMapConfigById(t);return!(!t||!t.Area.includes(i))}$Di(t,i){i=i.Tuple,t=t.Tuple;return Math.pow(t[0]-i[0],2)+Math.pow(t[1]-i[1],2)}get WorldPosition(){var t;return 2!==this.MapType&&this.TrackTarget instanceof Vector2D_1.Vector2D&&(t=GeneralLogicTreeUtil_1.GeneralLogicTreeUtil.GetPlayerLocation(),this.$Di(t,this.TrackTarget)*MapDefine_1.FLOAT_0_01*MapDefine_1.FLOAT_0_01<3600)&&!this.VDi&&(t=MapUtil_1.MapUtil.WorldPosition2UiPosition(Vector_1.Vector.Create(this.TrackTarget.X,this.TrackTarget.Y,0)),(t=MapController_1.MapController.GetMarkPosition(t.X,-t.Y))?this.UpdateCustomMapMarkPosition(t):this.TrackTarget=Vector_1.Vector.Create(this.TrackTarget.X,this.TrackTarget.Y,0)),void 0!==this.WorldPositionVector&&this.EnableCachePosition||(this.WorldPositionVector=MapUtil_1.MapUtil.GetTrackPositionByTrackTargetConfig(this.TrackTarget,this.MapId,this.WorldPositionVector),this.WorldPositionVector=this.WorldPositionVector??Vector_1.Vector.ZeroVectorProxy,this.FDi=MapUtil_1.MapUtil.WorldPosition2UiPosition(this.WorldPositionVector,this.FDi)),this.WorldPositionVector}UpdateCustomMapMarkPosition(t){var i;9===this.MarkType&&(i=Vector_1.Vector.Create(t.X,-t.Y,t.Z),t=Vector_1.Vector.Create(t.X,t.Y,t.Z),i=MapUtil_1.MapUtil.UiPosition2WorldPosition(i),this.TrackTarget=i,MapController_1.MapController.UpdateCustomMapMarkPosition(this.MarkId,t),i=Vector_1.Vector.Create(),this.TrackTarget.Multiply(MapDefine_1.FLOAT_0_01,i),ModelManager_1.ModelManager.MapModel.UpdateCustomMarkInfo(this.MarkId,i),ModelManager_1.ModelManager.TrackModel.UpdateTrackData(this.TrackSourceInner,this.MarkId,this.TrackTarget))}Initialize(){this.EDl(),this.OnInitialize()}EDl(){this.MarkItemEntity.Init()}OnInitialize(){}SetTrackData(t){this.TrackTarget=t}LogicUpdate(t){this.OnUpdate(t),this.UpdateTrackState()}ViewUpdate(t,i=!1,e=!1){this.InnerView?.OnUpdate(t,i,e)}async ViewUpdateAsync(t,i=!1){await this.View?.LoadingPromise,this.InnerView?.OnUpdate(t,i)}Destroy(){this.IsDestroy=!0,this.OnDestroy(),this.ClearView(!0),this.MarkItemEntity.Dispose(),this.QDi=void 0}get IsInAoiRange(){return this.WDi}set IsInAoiRange(t){(this.WDi=t)?this.YDi():this.ClearView()}YDi(){this.View||this.IsCanShowView&&(this.IsTracked||this.IsInAoiRange)&&(this.OnCreateView(),this.InnerView&&(this.InnerView.EnableActorPoolReleaseLog=!1),this.InnerView?.InitializeMarkItemViewAsync())}ClearView(t=!1){!this.InnerView||!t&&(this.IsTracked||this.IsInAoiRange)||(this.InnerView.IsHideOrHiding||this.InnerView.IsDestroyOrDestroying||this.InnerView.Destroy(),this.InnerView=void 0)}get TrackTarget(){return this.sql}set TrackTarget(t){this.sql=t,this.WorldPositionVector=void 0,this.Y5l=void 0}get TrackSource(){return this.TrackSourceInner}get IsTracked(){return this.KDi}set IsTracked(t){var i=this.KDi;(this.KDi=t)&&this.YDi(),i!==this.KDi&&(t?this.OnStartTrack():this.OnEndTrack())}get PermanentUpdate(){return this.IsTracked||11===this.MarkType}UpdateTrackState(){var t=this.IsDiffMap(),i=this.MarkItemEntity.ViewLifeCircle.IsChildViewVisible(1,!0),e=this.CheckCanShowView()||(this.View?.IsSelected??!1);let s=!t&&e&&i;1!==this.MarkItemType&&(s&&=this.IsTempMapMarkShow()),this.IsCanShowView=s;e=this.IsTracking();t?e||(this.IsTracked=e):(this.IsTracked=e,1===this.MapType&&!this.IsTracked||(this.IsInAoiRange=!0))}IsTempMapMarkShow(){return 1!==this.MapType||!this.MarkItemEntity.IsTempMapMark||this.IsTracked}IsTracking(){return ModelManager_1.ModelManager.TrackModel.IsTracking(this.TrackSource,this.MarkId)}OnStartTrack(){this.View?.OnStartTrack()}OnEndTrack(){this.View?.OnEndTrack()}OnUpdate(t){}OnDestroy(){}get ViewRoot(){return this.QDi}get View(){return this.InnerView}get IconPath(){return this.xbt}set IconPath(t){this.xbt!==t&&(this.xbt=t)}get IsOutOfBound(){return this.ddl}set IsOutOfBound(t){var i=this.ddl!==t;this.ddl=t,i&&this.View&&this.View.IsViewReady&&this.View.SetOutOfBoundActive(this.ddl)}SetSelected(t){this.InnerView&&(this.View.IsSelected=t)}async GetRootItemAsync(){if(this.View)return this.View.IsCreating&&await this.View.LoadingPromise,this.View?.GetRootItem()}GetTitleText(){}SetTitleText(t){var i=this.GetTitleText();i&&t.SetText(i)}GetStateIconPath(){if(this.IsMultiMap()){var t=this.IsSelectThisFloor||this.View?.IsSelectThisFloor;if(!(this.LocateInGround()&&t))return ConfigManager_1.ConfigManager.UiResourceConfig.GetResourcePath(t?WorldMapDefine_1.MULTI_MAP_SELECT_ICON_PATH:WorldMapDefine_1.MULTI_MAP_ICON_PATH)}}GetLocaleDesc(){}SetConfigScale(t){this.ConfigScale=t}SetCornerScale(t){this.CornerScale=t}get JDi(){return ModelManager_1.ModelManager.MapModel.GetMarkForceVisible(this.MarkType,this.MarkId)}get IsCanShowViewIntermediately(){return this.XDi&&this.JDi}get IsCanShowView(){return this.IsCanShowViewIntermediately||this.IsCanShowViewFinally}set IsCanShowView(t){(this.XDi=t)&&this.JDi&&this.YDi()}CheckCanShowView(){return 2===this.MapType}IsDiffMap(){return 1===this.MapType?this.StrictIsDiffMap():ModelManager_1.ModelManager.MapModel.GetDungeonLocateWorldMapId(this.MapId)!==MapUtil_1.MapUtil.GetCurrentBigMapOrWorldMapId()}StrictIsDiffMap(){return ModelManager_1.ModelManager.MapModel.GetDungeonWorldMapId(this.MapId)!==MapUtil_1.MapUtil.GetCurrentBigMapOrWorldMapId()}GetShowScale(){var t=this.GetCurrentMapShowScale();return Math.max(0,t)}GetCurrentMapShowScale(){return 100*ModelManager_1.ModelManager.WorldMapModel.MapScale-100}OnLevelSequenceStart(t){"ShowView"!==t&&"HideView"!==t||(this.IsCanShowViewFinally=!0)}OnLevelSequenceStop(t){"ShowView"!==t&&"HideView"!==t||(this.IsCanShowViewFinally=!1)}GetInteractiveFlag(){return this.IsCanShowView??!1}GamePlayIsDiscover(){return!1}}exports.MarkItem=MarkItem;
//# sourceMappingURL=MarkItem.js.map