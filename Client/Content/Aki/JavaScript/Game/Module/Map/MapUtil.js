
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MapUtil=void 0;const puerts_1=require("puerts"),UE=require("ue"),ue_1=require("ue"),Vector_1=require("../../../Core/Utils/Math/Vector"),Vector2D_1=require("../../../Core/Utils/Math/Vector2D"),IComponent_1=require("../../../UniverseEditor/Interface/IComponent"),Global_1=require("../../Global"),ConfigManager_1=require("../../Manager/ConfigManager"),ModelManager_1=require("../../Manager/ModelManager"),ExploreProgressDefine_1=require("../ExploreProgress/ExploreProgressDefine"),GeneralLogicTreeController_1=require("../GeneralLogicTree/GeneralLogicTreeController"),MapDefine_1=require("./MapDefine"),MapLogger_1=require("./Misc/MapLogger");class MapUtil{static WorldPosition2UiPosition(e,r){r=r??Vector_1.Vector.Create();return e.Multiply(MapDefine_1.world2UiUnit,r),r}static WorldPosition2UiPosition2D(e,r){r=r??Vector2D_1.Vector2D.Create();return e.Multiply(MapDefine_1.worldToScreenScale,r)}static UiPosition2WorldPosition(e,r){r=r??Vector_1.Vector.Create();return e.Division(MapDefine_1.world2UiUnit,r)}static WorldToScreenPosition(e){var r=Global_1.Global.CharacterController;if(UE.GameplayStatics.D_ProjectWorldToScreen(r,e,this._wl,!1)){r=(0,puerts_1.$unref)(this._wl);if(r){var e=r.X,t=r.Y;if(!isNaN(e)&&!isNaN(t)&&isFinite(e)&&isFinite(t))return r}}}static GetTilePosition(e,r=0){var e=Vector2D_1.Vector2D.Create(e),t=(e.DivisionEqual(100*MapDefine_1.DETAIL_TILE_REALSIZE),Math.ceil(e.X+r));return{X:t,Y:Math.ceil(-e.Y+r)}}static GetTilePositionByUiPosition(e){var e=Vector2D_1.Vector2D.Create(e),r=(e.DivisionEqual(MapDefine_1.DETAIL_TILE_REALSIZE),Math.ceil(e.X));return{X:r,Y:Math.ceil(e.Y)}}static GetTrackPositionByTrackTarget(e,r,t,a){var[t,i]=this.SDl(e,t);return t||MapUtil.GetEntityPosition(e,r,a,i),i}static GetTrackPositionByTrackTargetConfig(e,r,t){var a=MapUtil.IsInBigWorld(r),i=MapUtil.GetCurrentBigMapOrWorldMapId(),i=MapUtil.IsInBigWorld(i);if(!a&&!i){const[o,n]=MapUtil.SDl(e,t);return o?n:MapUtil.GetEntityPositionByConfig(e,r,n)}if(a){const[M,n]=MapUtil.SDl(e,t);return M?n:MapUtil.GetEntityPosition(e,!1,r,n)}const n=t??Vector_1.Vector.Create();i=ModelManager_1.ModelManager.MapModel.GetDungeonLocateWorldMapLocation(e,r);return i&&n.FromUeVector(i),n.Division(100,n),n}static SDl(e,r){return e?(r=r??Vector_1.Vector.Create(),e instanceof Vector_1.Vector?(r.DeepCopy(e),[!0,r]):e instanceof Vector2D_1.Vector2D?(r.Set(e.X,e.Y,0),[!0,r]):e instanceof ue_1.Actor?(e.IsValid()&&r.FromUeVector(e.D_K2_GetActorLocation()),[!0,r]):[!1,r]):[!0,Vector_1.Vector.ZeroVectorProxy]}static GetEntityPosition(e,r,t=0,a){a=a??Vector_1.Vector.Create();if(MapUtil.IsDungeonDiffWorld(t,ModelManager_1.ModelManager.CreatureModel.GetInstanceId()))return MapUtil.qDi(e,a,t),a??Vector_1.Vector.ZeroVectorProxy;let i=ModelManager_1.ModelManager.CreatureModel.GetEntityByPbDataId(e);return(i=i||ModelManager_1.ModelManager.CreatureModel.GetEntityById(e))&&i?.IsInit?(GeneralLogicTreeController_1.GeneralLogicTreeController.GetEntityPos(i,r,a),a):(r=t===ModelManager_1.ModelManager.CreatureModel.GetInstanceId()?MapUtil.GetCurrentMapOrDungeonId():MapUtil.GetCurrentBigMapOrWorldMapId(),GeneralLogicTreeController_1.GeneralLogicTreeController.RequestEntityPosition(r,e,a),a?.Equality(Vector_1.Vector.ZeroVectorProxy)&&MapUtil.qDi(e,a,t),a??Vector_1.Vector.ZeroVectorProxy)}static GetEntityPositionByConfig(e,r,t){t=t??Vector_1.Vector.Create();return MapUtil.qDi(e,t,r),t??Vector_1.Vector.ZeroVectorProxy}static GetCurrentBigMapOrWorldMapId(){var e=ModelManager_1.ModelManager.WorldMapModel.WorldMapMapId;return void 0===e?MapUtil.GetCurrentBigMapId():e}static GetCurrentBigMapId(){return 3===ModelManager_1.ModelManager.GameModeModel.MapId?MapDefine_1.BIG_WORLD_MAP_ID:ModelManager_1.ModelManager.GameModeModel.MapId}static CurrentInBigMap(){var e=this.GetCurrentMapOrDungeonId();return this.IsInBigWorld(e)}static GetCurrentMapOrDungeonId(){return ModelManager_1.ModelManager.GameModeModel.InstanceDungeon.MapConfigId}static IsInBigWorld(e){return ConfigManager_1.ConfigManager.WorldMapConfig.IsInBigWorld(e)}static GetConfigMarkBelongMapId(e){var r=MapUtil.GetCurrentBigMapOrWorldMapId();return ConfigManager_1.ConfigManager.MapConfig.SearchMarkConfig(e)?.MapId??r}static GetMarkBelongMapId(e,r){r=ModelManager_1.ModelManager.MapModel.GetMark(r,e);return void 0===r?void 0!==(e=ConfigManager_1.ConfigManager.MapConfig.SearchMarkConfig(e))?e.MapId:MapDefine_1.BIG_WORLD_MAP_ID:r.MapId??MapDefine_1.BIG_WORLD_MAP_ID}static GetWorldMapLevelOneAreaId(){var e=ModelManager_1.ModelManager.WorldMapModel.LastBigSceneMiniMapInfo;return e&&0!==e.AreaId?(e=e.AreaId,ConfigManager_1.ConfigManager.AreaConfig.GetLevelOneAreaId(e)):ModelManager_1.ModelManager.AreaModel.GetCurrentAreaId(ExploreProgressDefine_1.AREA_LEVEL)}static GetMapNameByInstanceId(e,r){var t=MapUtil.GetInstanceDungeonBelongWorldId(e)??e,a=ConfigManager_1.ConfigManager.WorldMapConfig.GetAllMapRangeConfigByMapId(t);if(a)for(const s of a){if(!(4<=s.AreaRange.length))return ConfigManager_1.ConfigManager.MapConfig.GetLocalText(s.MapName);var i=s.AreaRange[0],n=s.AreaRange[1],o=s.AreaRange[2],M=s.AreaRange[3];if(i<=r.X&&r.X<=o&&n<=r.Y&&r.Y<=M)return ConfigManager_1.ConfigManager.MapConfig.GetLocalText(s.MapName)}return MapLogger_1.MapLogger.Error(63,"[地图系统]找不到副本Id对应的地图配置->",["instanceId",e],["mapId",t],["worldPosition",r]),ConfigManager_1.ConfigManager.MapConfig.GetLocalText("Country_1_Title")}static qDi(e,r,t){0!==t&&(t=ConfigManager_1.ConfigManager.InstanceDungeonConfig.GetConfig(t))&&((e=ModelManager_1.ModelManager.WorldMapModel.GetEntityPosition(e,t.MapConfigId))&&r.FromUeVector(e),r.Division(100,r))}static CrossingTest(r,t){let a=!1;var i;let n=!1;var o;let M=r[r.length-1],s=r[0],l=(a=M.Y>=t.Y,n=!1,0);var c=r.length;for(let e=0;e<c;e++)i=s.Y>=t.Y,a!==i&&((o=M.X>=t.X)==s.X>=t.X?o&&(n=!n):s.X-(s.Y-t.Y)*(M.X-s.X)/(M.Y-s.Y)>=t.X&&(n=!n),a=i),M=s,l+=1,s=r[l];return n}static IsTemporaryTeleportEntity(e){e=e.ComponentsData;return void 0!==(0,IComponent_1.getComponent)(e,"DynamicTeleportComponent")}static IsTreasureBox(e){e=e.ComponentsData;return void 0!==(0,IComponent_1.getComponent)(e,"TreasureBoxComponent")}static MinBoundingCircle(o,r=10){if(0!==o.length){if(1===o.length)return new MapDefine_1.Circle(o[0].X,o[0].Y,0);var e,t,a,i,M;if(2===o.length)return[i,M]=o,e=M.X-i.X,t=M.Y-i.Y,a=(i.X+M.X)/2,i=(i.Y+M.Y)/2,M=Math.sqrt(e*e+t*t)/2,new MapDefine_1.Circle(a,i,M);const g=o[0];let n=void 0;for(let e=0;e<r;e++){var s=o.filter(e=>Vector2D_1.Vector2D.Distance(e,g)<=Vector2D_1.Vector2D.Distance(e,o[Math.floor(Math.random()*o.length)]));s.length<o.length&&(s=MapUtil.MinBoundingCircle(s))&&(!n||s.R<n.R)&&(n=s)}if(!n||!o.every(e=>Vector2D_1.Vector2D.Distance(e,Vector2D_1.Vector2D.Create(n.X,n.Y))<=n.R)){let e=1/0,r=-1/0,t=1/0,a=-1/0;for(const u of o)e=Math.min(e,u.X),r=Math.max(r,u.X),t=Math.min(t,u.Y),a=Math.max(a,u.Y);var l=(e+r)/2,c=(t+a)/2;let i=0;for(const p of o){var _=Vector2D_1.Vector2D.Distance(Vector2D_1.Vector2D.Create(l,c),p);i=Math.max(i,_)}n=new MapDefine_1.Circle(l,c,i)}return n}}static IsDungeonDiffWorld(t,a){if(0!==t&&0!==a){t=ConfigManager_1.ConfigManager.InstanceDungeonConfig.GetConfig(t),a=ConfigManager_1.ConfigManager.InstanceDungeonConfig.GetConfig(a);if(void 0!==t&&void 0!==a){var i=t.InstSubType,n=a.InstSubType;let e=t.MapConfigId,r=a.MapConfigId;return 12===i&&(i=MapUtil.slh(t),e=i.MapConfigId),12===n&&(t=MapUtil.slh(a),r=t.MapConfigId),e!==r}}}static GetInstanceDungeonBelongWorldId(e){if(0!==e){var r=ConfigManager_1.ConfigManager.InstanceDungeonConfig.GetConfig(e);if(void 0!==r){var t=r.InstSubType;if(12===t)return MapUtil.slh(r).Id;if(13!==t&&r.RecoverWorldLocation&&0<r.RecoverWorldLocation.length){t=r.RecoverWorldLocation[0];if(0!==t)return t}}}return e}static slh(e){var r,t;if(!(e.EntranceEntities.length<1))return r=e.EntranceEntities[0].DungeonId,void 0===(t=ConfigManager_1.ConfigManager.InstanceDungeonConfig.GetConfig(r))&&MapLogger_1.MapLogger.Error(63,"[地图系统]世界副本查找入口实体失败->入口副本配置为空",["config",e],["entranceDungeonId",r]),t;MapLogger_1.MapLogger.Error(63,"[地图系统]世界副本查找入口实体失败->实体列表为空",["config",e])}static GetLastBigScenePlayerUiPosition(){var e=this.GetLastBigScenePlayerPosition();return this.WorldPosition2UiPosition2D(Vector2D_1.Vector2D.Create(e.X,e.Y))}static GetLastBigScenePlayerPosition(){var e=ModelManager_1.ModelManager.WorldMapModel.LastBigSceneMiniMapInfo;return e?e.Position:(e=ModelManager_1.ModelManager.GameModeModel.InstanceDungeon.RecoverWorldLocation,Vector_1.Vector.Create(e[1]??0,e[2]??0,e[3]??0))}}(exports.MapUtil=MapUtil)._wl=(0,puerts_1.$ref)(void 0);
//# sourceMappingURL=MapUtil.js.map