
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SkipToDyMarkEntity=void 0;const Log_1=require("../../../../Core/Common/Log"),Vector_1=require("../../../../Core/Utils/Math/Vector"),ConfigManager_1=require("../../../Manager/ConfigManager"),ModelManager_1=require("../../../Manager/ModelManager"),MapController_1=require("../../Map/Controller/MapController"),MapDefine_1=require("../../Map/MapDefine"),WorldMapController_1=require("../../WorldMap/WorldMapController"),SkipTask_1=require("./SkipTask");class SkipToDyMarkEntity extends SkipTask_1.SkipTask{OnRun(r,a){var r=Number(r),a=Number(a),o=ModelManager_1.ModelManager.WorldMapModel.SearchMarkMapConfigId(r),n=ModelManager_1.ModelManager.CreatureModel.GetEntityData(a,o)?.Transform?.Pos;if(n){let e=ConfigManager_1.ConfigManager.WorldMapConfig.GetEntityGravityDirection(o,a);var M=ModelManager_1.ModelManager.WorldMapModel.IsGravityMap(o),M=(0===e&&M&&(e=1),new MapDefine_1.DynamicMarkCreateInfo({TrackTarget:Vector_1.Vector.Create(n.X??0,n.Y??0,n.Z??0),MarkConfigId:r,MarkType:7,DestroyOnUnTrack:!0,MapAndDungeonInfo:{MapConfigId:o},Gravity:e})),n=ModelManager_1.ModelManager.MapModel.CreateMapMark(M),r=(MapController_1.MapController.RequestTrackMapMark({MarkType:7,MarkId:n,Track:!0}),{MarkId:n,MarkType:7});WorldMapController_1.WorldMapController.OpenView(2,!1,r)}else Log_1.Log.CheckError()&&Log_1.Log.Error("SkipInterface",43,"实体或实体位置为空",["entityId",a],["mapId",o]);this.Finish()}}exports.SkipToDyMarkEntity=SkipToDyMarkEntity;
//# sourceMappingURL=SkipToDyMarkEntity.js.map