
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RacingTrackMove=void 0;const flatbuffers=require("../../../../RunTimeLibs/FlatBuffers/flatbuffers");class RacingTrackMove{constructor(){this.bb=void 0,this.bb_pos=0}__init(t,i){return this.bb_pos=t,this.bb=i,this}static getRootAsRacingTrackMove(t,i){return(i||new RacingTrackMove).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsRacingTrackMove(t,i){return t.setPosition(t.position()+flatbuffers.SIZE_PREFIX_LENGTH),(i||new RacingTrackMove).__init(t.readInt32(t.position())+t.position(),t)}type(t){var i=this.bb.__offset(this.bb_pos,4);return i?this.bb.__string(this.bb_pos+i,t):void 0}maxOffsetDistance(){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb_pos+t):0}isOneWay(){var t=this.bb.__offset(this.bb_pos,8);return!!t&&!!this.bb.readInt8(this.bb_pos+t)}layerVerticalLimit(){var t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb_pos+t):0}directionAngleLimit(){var t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb_pos+t):0}static startRacingTrackMove(t){t.startObject(5)}static addType(t,i){t.addFieldOffset(0,i,0)}static addMaxOffsetDistance(t,i){t.addFieldFloat32(1,i,0)}static addIsOneWay(t,i){t.addFieldInt8(2,+i,0)}static addLayerVerticalLimit(t,i){t.addFieldFloat32(3,i,0)}static addDirectionAngleLimit(t,i){t.addFieldFloat32(4,i,0)}static endRacingTrackMove(t){return t.endObject()}static createRacingTrackMove(t,i,a,e,r,s){return RacingTrackMove.startRacingTrackMove(t),RacingTrackMove.addType(t,i),RacingTrackMove.addMaxOffsetDistance(t,a),RacingTrackMove.addIsOneWay(t,e),RacingTrackMove.addLayerVerticalLimit(t,r),RacingTrackMove.addDirectionAngleLimit(t,s),RacingTrackMove.endRacingTrackMove(t)}}exports.RacingTrackMove=RacingTrackMove;
//# sourceMappingURL=racing-track-move.js.map