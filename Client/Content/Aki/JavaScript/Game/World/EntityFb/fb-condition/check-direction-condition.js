
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CheckDirectionCondition=void 0;const flatbuffers=require("../../../../RunTimeLibs/FlatBuffers/flatbuffers"),vector_info_js_1=require("../fb-var/vector-info.js");class CheckDirectionCondition{constructor(){this.bb=void 0,this.bb_pos=0}__init(t,i){return this.bb_pos=t,this.bb=i,this}static getRootAsCheckDirectionCondition(t,i){return(i||new CheckDirectionCondition).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsCheckDirectionCondition(t,i){return t.setPosition(t.position()+flatbuffers.SIZE_PREFIX_LENGTH),(i||new CheckDirectionCondition).__init(t.readInt32(t.position())+t.position(),t)}type(t){var i=this.bb.__offset(this.bb_pos,4);return i?this.bb.__string(this.bb_pos+i,t):void 0}direction(t){var i=this.bb.__offset(this.bb_pos,6);return i?(t||new vector_info_js_1.VectorInfo).__init(this.bb.__indirect(this.bb_pos+i),this.bb):void 0}angleInterval(){var t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt32(this.bb_pos+t):0}static startCheckDirectionCondition(t){t.startObject(3)}static addType(t,i){t.addFieldOffset(0,i,0)}static addDirection(t,i){t.addFieldOffset(1,i,0)}static addAngleInterval(t,i){t.addFieldInt32(2,i,0)}static endCheckDirectionCondition(t){return t.endObject()}}exports.CheckDirectionCondition=CheckDirectionCondition;
//# sourceMappingURL=check-direction-condition.js.map