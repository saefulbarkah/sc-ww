
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MobileSwitchInputController=void 0;const Info_1=require("../../../../Core/Common/Info"),Log_1=require("../../../../Core/Common/Log"),GameSettingsManager_1=require("../../../GameSettings/GameSettingsManager"),ControllerHolder_1=require("../../../Manager/ControllerHolder"),ModelManager_1=require("../../../Manager/ModelManager"),ConfirmBoxDefine_1=require("../../../Module/ConfirmBox/ConfirmBoxDefine"),ScrollingTipsController_1=require("../../../Module/ScrollingTips/ScrollingTipsController"),InputDistributeDefine_1=require("../../InputDistribute/InputDistributeDefine"),UiManager_1=require("../../UiManager"),UiModel_1=require("../../UiModel");class MobileSwitchInputController{static async wWa(){UiManager_1.UiManager.CloseView("PingView"),await UiManager_1.UiManager.NormalResetToViewAsync("BattleView"),Log_1.Log.CheckInfo()&&Log_1.Log.Info("MobileInputSwitch",10,"重置回主界面成功"),await Promise.all([UiManager_1.UiManager.CloseViewAsync("PingView"),UiManager_1.UiManager.CloseViewAsync("BattleView")]),Log_1.Log.CheckInfo()&&Log_1.Log.Info("MobileInputSwitch",10,"关闭主界面成功")}static ija(e){UiManager_1.UiManager.OpenView("MobileSwitchInputView",e)}static lil(){return!!(Info_1.Info.IsMobilePlatform()&&UiModel_1.UiModel.IsInMainView&&ModelManager_1.ModelManager.BattleUiModel?.IsEnableChangeInputControllerOnMobile()&&ModelManager_1.ModelManager.InputDistributeModel.IsTagMatchAnyCurrentInputTag(InputDistributeDefine_1.inputDistributeTagDefine.FightInputRootTag))}static SwitchToGamepadByMenuSetting(){if(Info_1.Info.IsMobilePlatform()&&!Info_1.Info.IsInGamepad()){Log_1.Log.CheckInfo()&&Log_1.Log.Info("MobileInputSwitch",10,"[MenuSetting]触屏切换手柄");const e=ModelManager_1.ModelManager.PlatformModel.GetCurrentDeviceInputController();MobileSwitchInputController.wWa().finally(()=>{MobileSwitchInputController.ija(!0),Info_1.Info.SwitchInputControllerType(e,"MenuSetting")})}}static SwitchToGamepad(e,o){e?this.lil()&&(MobileSwitchInputController.BWa=e,Info_1.Info.IsInGamepad()||MobileSwitchInputController.bWa||(Log_1.Log.CheckInfo()&&Log_1.Log.Info("MobileInputSwitch",10,"触屏切换手柄"),MobileSwitchInputController.bWa=!0,(e=new ConfirmBoxDefine_1.ConfirmBoxDataNew(212)).FunctionMap.set(2,MobileSwitchInputController.qWa),e.SetCloseFunction(MobileSwitchInputController.OWa),ControllerHolder_1.ControllerHolder.ConfirmBoxController.ShowConfirmBoxNew(e))):Log_1.Log.CheckError()&&Log_1.Log.Error("MobileInputSwitch",10,"触屏切换手柄异常,传入无效的输入设备类型",["reason",o])}static SwitchToTouch(){!Info_1.Info.IsMobilePlatform()||Info_1.Info.IsInTouch()||(Log_1.Log.CheckInfo()&&Log_1.Log.Info("MobileInputSwitch",10,"手柄切换触屏"),MobileSwitchInputController.wWa().finally(()=>{MobileSwitchInputController.ija(!1),Info_1.Info.SwitchInputControllerType(5,"MobileSwitch")}))}static SwitchToTouchByDisconnectGamepad(){!this.lil()||Info_1.Info.IsInTouch()||(Log_1.Log.CheckInfo()&&Log_1.Log.Info("MobileInputSwitch",10,"手柄切换触屏DisconnectGamepad"),MobileSwitchInputController.wWa().finally(()=>{MobileSwitchInputController.ija(!1),Info_1.Info.SwitchInputControllerType(5,"MobileSwitch")}))}}(exports.MobileSwitchInputController=MobileSwitchInputController).GWa=!1,MobileSwitchInputController.bWa=!1,MobileSwitchInputController.BWa=void 0,MobileSwitchInputController.qWa=()=>{1===GameSettingsManager_1.GameSettingsManager.Get(137)?.GetCurrentValue()?MobileSwitchInputController.GWa=!0:ScrollingTipsController_1.ScrollingTipsController.ShowTipsByTextId("Controler_Notconnect_tips")},MobileSwitchInputController.OWa=()=>{const e=MobileSwitchInputController.BWa;MobileSwitchInputController.BWa=void 0,MobileSwitchInputController.bWa=!1,MobileSwitchInputController.GWa&&(MobileSwitchInputController.GWa=!1,MobileSwitchInputController.wWa().finally(()=>{MobileSwitchInputController.ija(!0),Info_1.Info.SwitchInputControllerType(e,"MobileSwitch")}))},MobileSwitchInputController.ReOpenBattleView=()=>{UiManager_1.UiManager.OpenView("BattleView"),UiManager_1.UiManager.OpenView("PingView")};
//# sourceMappingURL=MobileSwitchInputController.js.map