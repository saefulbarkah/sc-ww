
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const puerts_1=require("puerts"),UE=require("ue"),Log_1=require("../../../../Core/Common/Log"),Time_1=require("../../../../Core/Common/Time"),EntitySystem_1=require("../../../../Core/Entity/EntitySystem"),Vector_1=require("../../../../Core/Utils/Math/Vector"),MathUtils_1=require("../../../../Core/Utils/MathUtils"),GlobalData_1=require("../../../GlobalData"),CharacterUnifiedStateTypes_1=require("../../../NewWorld/Character/Common/Component/Abilities/CharacterUnifiedStateTypes"),GravityUtils_1=require("../../../Utils/GravityUtils"),BlackboardController_1=require("../../../World/Controller/BlackboardController"),AiContollerLibrary_1=require("../../Controller/AiContollerLibrary"),TsAiController_1=require("../../Controller/TsAiController"),TsTaskAbortImmediatelyBase_1=require("./TsTaskAbortImmediatelyBase"),NEAR_ZERO=1e-6,NAVIGATION_COMPLETE_DISTANCE=50,EDGE_Z=100;class TsTaskFlee extends TsTaskAbortImmediatelyBase_1.default{constructor(){super(...arguments),this.TargetKey="",this.OverrideTurnSpeed=!1,this.TurnSpeed=0,this.ForceNavigation=!1,this.LeapMode=!1,this.LeapDistance=0,this.IsInitTsVariables=!1,this.TsTargetKey="",this.TsOverrideTurnSpeed=!1,this.TsTurnSpeed=0,this.TsForceNavigation=!1,this.TsLeapMode=!1,this.TsLeapDistance=0,this.FoundPath=!1,this.NavigationPath=void 0,this.CurrentNavigationIndex=0,this.NavigationEndTime=-0,this.IsFlying=!1,this.MoveComp=void 0,this.CompleteDistance=0}Constructor(){super.Constructor(),this.IsInitTsVariables=!1,this.TsTargetKey="",this.TsOverrideTurnSpeed=!1,this.TsTurnSpeed=0,this.TsForceNavigation=!1,this.TsLeapMode=!1,this.TsLeapDistance=0,this.FoundPath=!1,this.NavigationPath=void 0,this.CurrentNavigationIndex=0,this.NavigationEndTime=-0,this.IsFlying=!1,this.MoveComp=void 0,this.CompleteDistance=0}InitTsVariables(){this.IsInitTsVariables&&!GlobalData_1.GlobalData.IsPlayInEditor||(this.IsInitTsVariables=!0,this.TsTargetKey=this.TargetKey,this.TsOverrideTurnSpeed=this.OverrideTurnSpeed,this.TsTurnSpeed=this.TurnSpeed,this.TsForceNavigation=this.ForceNavigation,this.TsLeapMode=this.LeapMode,this.TsLeapDistance=this.LeapDistance)}ReceiveExecuteAI(s,t){this.InitTsVariables();var e=s.AiController;if(e)if(e.AiFlee){let i=void 0;if(this.TsTargetKey){var r=BlackboardController_1.BlackboardController.GetEntityIdByEntity(e.CharActorComp.Entity.Id,this.TsTargetKey);if(r){const n=EntitySystem_1.EntitySystem.Get(r);n&&(i=n.GetComponent(3))}}else{r=e.AiHateList.GetCurrentTarget();i=r?.Entity?.GetComponent(3)}if(i){r=e.CharActorComp;if(r){const n=r.Entity;if(n)if(this.MoveComp=n.GetComponent(173),this.MoveComp){5===this.MoveComp.CharacterMovement.MovementMode&&(this.IsFlying=!0);var r=r.ActorLocationProxy,h=Vector_1.Vector.Create(),o=(r.Subtraction(i.ActorLocationProxy,h),h.Z=0,h.Normalize(NEAR_ZERO),new UE.Vector(-h.Y,h.X,0)),a=MathUtils_1.MathUtils.GetRandomRange(e.AiFlee.FleeAngle.Min,e.AiFlee.FleeAngle.Max)*MathUtils_1.MathUtils.DegToRad,l=Math.cos(a),a=Math.sin(a),_=MathUtils_1.MathUtils.GetRandomRange(e.AiFlee.FleeDistance.Min,e.AiFlee.FleeDistance.Max);let t=0;this.IsFlying&&(t=e.AiFlee.FleeHeight);h=new UE.VectorDouble(r.X+(h.X*l+o.X*a)*_,r.Y+(h.Y*l+o.Y*a)*_,r.Z+t);this.NavigationPath||(this.NavigationPath=new Array),this.IsFlying?(l=Vector_1.Vector.Create(r),this.FoundPath=!0,this.NavigationPath.splice(0,this.NavigationPath.length),this.NavigationPath.push(l),this.NavigationPath.push(Vector_1.Vector.Create(h))):this.FoundPath=AiContollerLibrary_1.AiControllerLibrary.NavigationFindPath(s,r.ToUeVector(),h,this.NavigationPath),this.TsForceNavigation||this.FoundPath||(o=Vector_1.Vector.Create(r),this.FoundPath=!0,this.NavigationPath.splice(0,this.NavigationPath.length),this.NavigationPath.push(o),this.NavigationPath.push(Vector_1.Vector.Create(h))),this.FoundPath||(a=(0,puerts_1.$ref)(void 0),UE.NavigationSystemV1.D_K2_ProjectPointToNavigation(GlobalData_1.GlobalData.World,h,a,void 0,void 0,new UE.VectorDouble(_,_,EDGE_Z))&&(this.FoundPath=AiContollerLibrary_1.AiControllerLibrary.NavigationFindPath(s,r.ToUeVector(),(0,puerts_1.$unref)(a),this.NavigationPath))),this.FoundPath?(this.CurrentNavigationIndex=1,this.NavigationEndTime=Time_1.Time.WorldTime+e.AiFlee.TimeMilliseconds,(l=e.CharAiDesignComp.Entity.GetComponent(99))?.Valid&&l.SetMoveState(CharacterUnifiedStateTypes_1.ECharMoveState.Run)):this.Finish(!0)}else Log_1.Log.CheckError()&&Log_1.Log.Error("BehaviorTree",29,"CharacterMoveComponent Invalid",["Type",s.GetClass().GetName()]);else Log_1.Log.CheckError()&&Log_1.Log.Error("BehaviorTree",29,"Entity Invalid",["Type",s.GetClass().GetName()])}else Log_1.Log.CheckError()&&Log_1.Log.Error("BehaviorTree",29,"CharacterActorComponent Invalid",["Type",s.GetClass().GetName()])}else this.FoundPath=!1,this.Finish(!0)}else Log_1.Log.CheckError()&&Log_1.Log.Error("BehaviorTree",6,"没有配置逃跑",["AiBaseId",e.AiBase.Id]);else Log_1.Log.CheckError()&&Log_1.Log.Error("BehaviorTree",6,"错误的Controller类型",["Type",s.GetClass().GetName()])}ReceiveTickAI(t,i,s){var e,r,h,t=t.AiController;t?Time_1.Time.WorldTime>this.NavigationEndTime||(e=t.CharActorComp,5===this.MoveComp.CharacterMovement.MovementMode?this.IsFlying=!0:this.IsFlying=!1,(r=Vector_1.Vector.Create(this.NavigationPath[this.CurrentNavigationIndex])).Subtraction(e.ActorLocationProxy,r),this.IsFlying||GravityUtils_1.GravityUtils.ConvertToPlanarVectorForActor(e,r),h=r.Size(),this.CompleteDistance=this.TsLeapMode?this.TsLeapDistance:NAVIGATION_COMPLETE_DISTANCE,h<this.CompleteDistance&&(this.CurrentNavigationIndex++,this.CurrentNavigationIndex===this.NavigationPath.length))?this.Finish(!0):(r.Z/=h,r.X/=h,r.Y/=h,e.SetInputDirect(r),this.TsOverrideTurnSpeed?AiContollerLibrary_1.AiControllerLibrary.TurnToDirect(e,r,this.TsTurnSpeed):AiContollerLibrary_1.AiControllerLibrary.TurnToDirect(e,r,t.AiWanderInfos?.AiWander?t.AiWanderInfos.AiWander.TurnSpeed:360)):this.FinishExecute(!1)}OnClear(){this.AIOwner instanceof TsAiController_1.default&&AiContollerLibrary_1.AiControllerLibrary.ClearInput(this.AIOwner),this.MoveComp=void 0,this.NavigationPath=void 0,this.FoundPath=!1}}exports.default=TsTaskFlee;
//# sourceMappingURL=TsTaskFlee.js.map