
"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehicleController=void 0;const Log_1=require("../../../../Core/Common/Log"),Protocol_1=require("../../../../Core/Define/Net/Protocol"),ControllerBase_1=require("../../../../Core/Framework/ControllerBase"),Net_1=require("../../../../Core/Net/Net"),MathUtils_1=require("../../../../Core/Utils/MathUtils"),EventDefine_1=require("../../../Common/Event/EventDefine"),EventSystem_1=require("../../../Common/Event/EventSystem"),Global_1=require("../../../Global"),ModelManager_1=require("../../../Manager/ModelManager"),WaitEntityTask_1=require("../../../World/Define/WaitEntityTask"),VehicleInfoDefines_1=require("../Common/VehicleInfoDefines"),WAIT_ENTITY_CREATE_TIMEOUT=6e4,TRIAL_ROLE_ID=1e4,CHECK_DRIVE_INFO_INTERVAL=500;class VehicleController extends ControllerBase_1.ControllerBase{static OnInit(){return Net_1.Net.Register(17155,this.VehicleUpdateNotify),Net_1.Net.Register(23758,this.OnUpdateVehicleRideSharingNotify),Net_1.Net.Register(24890,this.VehicleUpdateEntityNotify),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnChangeRole,this.OnChangeRole),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnEnterVehicle,this.OnEnterVehicle),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnLeaveVehicle,this.OnLeaveVehicle),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnChangeRideSharingPassenger,this.OnChangeVehicleRideSharing),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnRemoveRideSharingPassenger,this.OnRemoveVehicleRideSharing),!0}static OnTick(e){this.mie+=e,this.Gbl&&this.mie>CHECK_DRIVE_INFO_INTERVAL&&(ModelManager_1.ModelManager.VehicleModel?.UpdateKeepDrivingInfo(this.mie,this.Gbl),this.mie=0)}static OnClear(){return Net_1.Net.UnRegister(17155),Net_1.Net.UnRegister(23758),Net_1.Net.UnRegister(24890),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnChangeRole,this.OnChangeRole),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnEnterVehicle,this.OnEnterVehicle),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnLeaveVehicle,this.OnLeaveVehicle),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnChangeRideSharingPassenger,this.OnChangeVehicleRideSharing),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnRemoveRideSharingPassenger,this.OnRemoveVehicleRideSharing),!0}static VehicleUpdateEntity(e){ModelManager_1.ModelManager.VehicleModel.UpdateEntityVehicleData(e),this.RegisterWaitEntityTask(e)}static UpdateVehiclePerform(e){var t,a,r=ModelManager_1.ModelManager.CreatureModel.GetEntity(e.EntityCreatureId)?.Entity;r?.IsInit&&(t=-1!==e.Seat,(a=ModelManager_1.ModelManager.CreatureModel.GetEntity(e.VehicleCreatureId)?.Entity)?.IsInit)&&(a=a?.GetComponent(221))&&(t?a.Enter(r,e.Seat):a.Leave(r,e.ExitType))}static OnCharacterActivate(e){var t,a=e.GetComponent(0),r=(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"OnRoleActivate",["PlayerId",a.GetPlayerId()],["PlayerCreatureId",a.GetCreatureDataId()]),ModelManager_1.ModelManager.VehicleModel.GetPlayerVehicleData(a.GetPlayerId()));r?.EntityCreatureId!==a.GetCreatureDataId()?Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"OnRoleActivate 非当前角色乘坐",["PlayerId",a.GetPlayerId()],["PlayerCreatureId",a.GetCreatureDataId()]):r?.VehicleCreatureId&&((t=ModelManager_1.ModelManager.CreatureModel.GetEntity(r.VehicleCreatureId))?.IsInit?(t.Entity.GetComponent(221).Enter(e,r.Seat),Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"OnRoleActivate 载具已存在，直接更新",["PlayerId",a.GetPlayerId()],["PlayerCreatureId",a.GetCreatureDataId()],["VehicleCreatureId",t.CreatureDataId])):Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"OnRoleActivate 载具不存在，等待载具加载",["PlayerId",a.GetPlayerId()],["PlayerCreatureId",a.GetCreatureDataId()],["VehicleCreatureId",t?.CreatureDataId]))}static OnVehicleActivate(e){var t,a=e.GetComponent(0),a=(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"OnVehicleActivate",["VehicleCreatureId",a.GetCreatureDataId()]),ModelManager_1.ModelManager.VehicleModel.GetVehiclePlayerData(a.GetCreatureDataId()));for(const r of a)r.VehicleCreatureId&&0<=r.Seat&&(t=ModelManager_1.ModelManager.CreatureModel.GetEntity(r.EntityCreatureId))?.IsInit&&e.GetComponent(221).Enter(t.Entity,r.Seat)}static RegisterWaitEntityTask(t){var e=ModelManager_1.ModelManager.VehicleModel.PassengerVehicleMap.get(t.EntityCreatureId);e?.Context?.Equals(t)&&!e.WaitTask&&(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"[VehicleController] 创建载具等待实体任务",["EntityCreatureId",t.EntityCreatureId],["VehicleCreatureId",t.VehicleCreatureId],["Seat",t.Seat]),e.WaitTask=WaitEntityTask_1.WaitEntityTask.Create([t.VehicleCreatureId,t.EntityCreatureId],e=>{e&&(e=ModelManager_1.ModelManager.VehicleModel.PassengerVehicleMap.get(t.EntityCreatureId))?.Context?.Equals(t)&&(Log_1.Log.CheckInfo()&&Log_1.Log.Info("Vehicle",50,"[VehicleController] 开始执行载具等待实体任务",["EntityCreatureId",t.EntityCreatureId],["VehicleCreatureId",t.VehicleCreatureId],["Seat",t.Seat]),e.WaitTask=void 0,this.UpdateVehiclePerform(t),ModelManager_1.ModelManager.VehicleModel.PostUpdateVehicleEntityData(t))},WAIT_ENTITY_CREATE_TIMEOUT,!1,!0))}static OnChangeMode(){return ModelManager_1.ModelManager.VehicleModel.Reset(),!0}static kbl(e){e.VehicleEntity&&e.IsRolePassenger(!0)&&ModelManager_1.ModelManager.GameAudioModel.AddAllGondolaMusic(e.VehicleEntity)}static Fbl(e){e.IsRolePassenger(!0)&&ModelManager_1.ModelManager.GameAudioModel.StopAllGondolaMusic()}static sWl(e){switch(e){case Protocol_1.Aki.Protocol.ia1.Proto_ExitVehicleTypeNormal:return 1;case Protocol_1.Aki.Protocol.ia1.Proto_ExitVehicleTypeDelayShow:return 2;default:return 0}}}exports.VehicleController=VehicleController,(_a=VehicleController).mie=0,VehicleController.Gbl=void 0,VehicleController.VehicleUpdateNotify=e=>{var t,a=ModelManager_1.ModelManager.SceneTeamModel.GetTeamPlayerData(e.W5n)?.GetCurrentGroup()?.GetCurrentRole()?.CreatureDataId;a?((t=new VehicleInfoDefines_1.ScenePlayerVehicleInfo).PlayerId=e.W5n,t.EntityCreatureId=a,t.VehicleCreatureId=MathUtils_1.MathUtils.LongToNumber(e.F4n),t.Seat=e.Mhl,t.ExitType=_a.sWl(e._o1),ModelManager_1.ModelManager.VehicleModel.UpdatePlayerVehicleData(t),_a.UpdateVehiclePerform(t)):Log_1.Log.CheckError()&&Log_1.Log.Error("Vehicle",50,"[VehicleController] 服务器下发载具数据更新时无法获取对应PlayerId的CreatureId",["PlayerId",e.W5n],["VehicleId",MathUtils_1.MathUtils.LongToNumber(e.F4n)],["Seat",e.Mhl])},VehicleController.VehicleUpdateEntityNotify=e=>{var t=new VehicleInfoDefines_1.EntityVehicleInfo;t.EntityCreatureId=MathUtils_1.MathUtils.LongToNumber(e.F4n),t.VehicleCreatureId=MathUtils_1.MathUtils.LongToNumber(e.lo1),t.Seat=e.vhl?e.Mhl:-1,t.ExitType=_a.sWl(e._o1),_a.VehicleUpdateEntity(t)},VehicleController.OnEnterVehicle=e=>{var t,a;_a.kbl(e),e.IsDriver&&e.IsRolePassenger(!0)&&(_a.Gbl=e.VehicleEntity.GetComponent(224),e.PassengerEntity.GetComponent(0).GetRoleId()>TRIAL_ROLE_ID||(ModelManager_1.ModelManager.VehicleModel.CanRiderSharing?(t=e.VehicleEntity?.GetComponent(222),a=e.PassengerEntity?.GetComponent(2),Log_1.Log.CheckError()&&Log_1.Log.Error("Vehicle",50,"重复进入共乘玩法",["VehicleId",t?.CreatureData.GetPbDataId()],["PassengerId",a?.CreatureData.GetPbDataId()],["Seat",e.Seat])):(ModelManager_1.ModelManager.VehicleModel.CanRiderSharing=!0,EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnEnterVehicleRideSharing),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Vehicle",50,"进入共乘玩法"),"Gongduola"===e.VehicleType&&e.VehicleEntity?.GetComponent(228)?.AddTagForPassenger(e.PassengerEntity,1,1937468570))))},VehicleController.OnLeaveVehicle=e=>{var t,a;_a.Fbl(e),e.IsDriver&&e.IsRolePassenger(!0)&&(_a.Gbl=void 0,e.PassengerEntity.GetComponent(0).GetRoleId()>TRIAL_ROLE_ID||(ModelManager_1.ModelManager.VehicleModel.CanRiderSharing?(EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnLeaveVehicleRideSharing),ModelManager_1.ModelManager.VehicleModel.RideSharingInfo&&_a.OnRemoveVehicleRideSharing(),ModelManager_1.ModelManager.VehicleModel.CanRiderSharing=!1,Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Vehicle",50,"退出共乘玩法"),"Gongduola"===e.VehicleType&&e.VehicleEntity?.GetComponent(228)?.RemoveTagForPassenger(e.PassengerEntity,1,1937468570)):(t=e.VehicleEntity?.GetComponent(222),a=e.PassengerEntity?.GetComponent(2),Log_1.Log.CheckError()&&Log_1.Log.Error("Vehicle",50,"离开载具前已退出共乘玩法",["VehicleId",t?.CreatureData.GetPbDataId()],["PassengerId",a?.CreatureData.GetPbDataId()],["Seat",e.Seat]))))},VehicleController.OnChangeVehicleRideSharing=(e,t)=>{var a,r,o=((Global_1.Global.BaseCharacter?.CharacterActorComponent)?.Entity.GetComponent(218))?.VehicleEntity;o&&ModelManager_1.ModelManager.VehicleModel.CanRiderSharing&&(o=o.GetComponent(221),-1===(a=-1!==t?t:o.TryFindUsableSeat(!1))||(r=ModelManager_1.ModelManager.VehicleModel.RideSharingInfo?.Seat??-1,o?.SeatInfoMap.has(a)&&a!==r)||((o=Protocol_1.Aki.Protocol.aZl.create()).Q6n=e,o.Mhl=a,Net_1.Net.Call(28937,o,()=>{}),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Vehicle",50,"发送共乘玩法Change通知",["RoleId",e],["Seat",t])))},VehicleController.OnRemoveVehicleRideSharing=()=>{var e;ModelManager_1.ModelManager.VehicleModel.CanRiderSharing&&ModelManager_1.ModelManager.VehicleModel.RideSharingInfo&&((e=Protocol_1.Aki.Protocol.lZl.create()).Q6n=ModelManager_1.ModelManager.VehicleModel.RideSharingInfo.RoleId,Net_1.Net.Call(24477,e,()=>{}),Log_1.Log.CheckDebug())&&Log_1.Log.Debug("Vehicle",50,"发送共乘玩法Remove通知",["RoleId",e.Q6n])},VehicleController.OnUpdateVehicleRideSharingNotify=e=>{var t,a;e.Q6n?((t=new VehicleInfoDefines_1.VehicleRideSharingInfo).PlayerId=e.W5n,t.RoleId=e.Q6n,t.Seat=e.Mhl,t.RoleCreatureId=MathUtils_1.MathUtils.LongToNumber(e.F4n),ModelManager_1.ModelManager.VehicleModel.RideSharingInfo=t,EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnChangeRideSharingPassengerResponse,t.RoleId)):(t=ModelManager_1.ModelManager.VehicleModel.RideSharingInfo.RoleId,a=ModelManager_1.ModelManager.VehicleModel.RideSharingInfo.RoleCreatureId,EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnRemoveRideSharingPassengerResponse,t),ModelManager_1.ModelManager.VehicleModel.RideSharingInfo=void 0,(t=ModelManager_1.ModelManager.VehicleModel.GetEntityVehicleData(a))&&((a=t.DeepCopy()).Seat=-1,ModelManager_1.ModelManager.VehicleModel.UpdateEntityVehicleData(a))),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("Vehicle",50,"收到共乘玩法UpdateNotify",["RoleId",e.Q6n])},VehicleController.OnChangeRole=(e,t)=>{var a,r,o,l=e.Entity.GetComponent(0),_=ModelManager_1.ModelManager.VehicleModel.GetPlayerVehicleData(l.GetPlayerId());_?.VehicleCreatureId&&_.EntityCreatureId!==l.GetCreatureDataId()&&(a=_.DeepCopy(),r=_.DeepCopy(),o=ModelManager_1.ModelManager.CreatureModel.GetEntity(_.EntityCreatureId),_=ModelManager_1.ModelManager.CreatureModel.GetEntity(_.VehicleCreatureId)?.Entity?.GetComponent(221),r.VehicleCreatureId=0,ModelManager_1.ModelManager.VehicleModel.UpdatePlayerVehicleData(r),o?.IsInit&&_?.Leave(o.Entity,1),a.EntityCreatureId=l.GetCreatureDataId(),ModelManager_1.ModelManager.VehicleModel.UpdatePlayerVehicleData(a),e.IsInit)&&_?.Enter(e.Entity,a.Seat)};
//# sourceMappingURL=VehicleController.js.map