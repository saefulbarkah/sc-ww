
"use strict";var __decorate=this&&this.__decorate||function(t,e,i,o){var s,n=arguments.length,h=n<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)h=Reflect.decorate(t,e,i,o);else for(var r=t.length-1;0<=r;r--)(s=t[r])&&(h=(n<3?s(h):3<n?s(e,i,h):s(e,i))||h);return 3<n&&h&&Object.defineProperty(e,i,h),h};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GongduolaSplineMoveComponent=void 0;const RegisterComponent_1=require("../../../../Core/Entity/RegisterComponent"),Vector_1=require("../../../../Core/Utils/Math/Vector"),MathUtils_1=require("../../../../Core/Utils/MathUtils"),VehicleSplineMoveComponent_1=require("../Common/VehicleSplineMoveComponent"),GongduolaConfig_1=require("./GongduolaConfig"),UNLOCK_TURN_INPUT_MIN_ANGLE=10;let GongduolaSplineMoveComponent=class GongduolaSplineMoveComponent extends VehicleSplineMoveComponent_1.VehicleSplineMoveComponent{constructor(){super(...arguments),this.ForbidInputSprint=!1,this.LastLockedInput=Vector_1.Vector.Create()}InputAdjustSlideTrack(t){this.SplineQuat.Inverse(this.TmpQuat),this.ActorComp.ActorLocationProxy.Subtraction(this.SplineLocation,this.TmpVector1),this.TmpQuat.RotateVector(this.TmpVector1,this.TmpVector),this.TmpQuat.Multiply(this.ActorComp.ActorQuatProxy,this.TmpQuat1),this.TmpQuat1.Rotator(this.TmpRotator);var e=this.CurrentSplineMoveParamsInternal,i=e.EdgeLimitCurve.GetCurrentValue(Math.abs(this.TmpVector.Y)/e.MaxOffsetDist);let o=-e.InputLimitAngle,s=e.InputLimitAngle;this.TmpVector.Y<0?o*=1-i:s*=1-i,this.TmpVector1.DeepCopy(t),this.ConvertToTriangleInput(this.TmpVector1),this.TmpVector1.X=1,this.AdjustInputForValidRot(this.TmpVector1,this.TmpRotator.Yaw,o,s),this.ConvertToCircleInput(this.TmpVector1),this.CharActorComp?.SetInputDirect(this.TmpVector1)}ConvertToTriangleInput(t){var e=t.GetAbsMax();t.Size()<1||e<MathUtils_1.MathUtils.KindaSmallNumber||t.MultiplyEqual(1/e)}ConvertToCircleInput(t){t.Size()<1||t.Normalize()}AdjustInputForValidRot(t,e,i,o){var s;this.CurrentSplineMoveParams?.OnlyForward&&(s=Math.min(o-e,e-i),(this.TmpVector1.Y*this.LastLockedInput.Y<=0||s>UNLOCK_TURN_INPUT_MIN_ANGLE)&&this.LastLockedInput.Reset(),MathUtils_1.MathUtils.InRangeArray(e,[i,o])?0<this.LastLockedInput.Y*t.Y&&(t.Y=0):(this.LastLockedInput.DeepCopy(t),t.Y=-Math.sign(MathUtils_1.MathUtils.Clamp(e,i,o))))}ApplySplineMoveDaConfig(){var t;this.ExtraMoveParams&&(t=this.Entity.GetComponent(242))?.Config instanceof GongduolaConfig_1.GongduolaConfig&&(this.ForbidInputSprint=!!this.ExtraMoveParams.DisableSprint,t.Config.BaseMaxSpeed=this.ExtraMoveParams.ForwardSpeed,t.Config.BaseMaxAcceleration=this.ExtraMoveParams.ForwardAcceleration,t.RefreshMoveConfigFromVehicleConfig())}ResetSplineMoveDaConfig(){this.ForbidInputSprint=!1,this.Entity.GetComponent(230)?.ResetVehicleConfig(!0)}};GongduolaSplineMoveComponent=__decorate([(0,RegisterComponent_1.RegisterComponent)(108)],GongduolaSplineMoveComponent),exports.GongduolaSplineMoveComponent=GongduolaSplineMoveComponent;
//# sourceMappingURL=GongduolaSplineMoveComponent.js.map