
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ReferenceTriggerVolumeLogic=void 0;const puerts_1=require("puerts"),RoleTriggerController_1=require("../Character/Role/RoleTriggerController"),VALID_LEN=3;class ReferenceTriggerVolumeLogic{constructor(e){this.Ksr=void 0,this.Qsr=void 0,this.Xsr=0,this.$sr=void 0,this.Qsr=new Set;for(const t of e){var i=t.PathName.split(".");i?.length===VALID_LEN&&this.Qsr.add(i[1]+"."+i[2])}this.Ksr=new Map,this.$sr=[]}AddVolume(e,i){this.Qsr.has(e)&&(this.Vr(i),this.Ksr.set(e,i))}RemoveVolume(e){this.Qsr.has(e)&&(this.kre(this.Ksr.get(e)),this.Ksr.delete(e))}Clear(){for(const e of this.Ksr.values())this.kre(e);0<this.Xsr&&this.Ysr(!1),this.Xsr=0,this.Qsr.clear(),this.Ksr.clear()}Destroy(){this.Clear(),this.Qsr=void 0,this.Ksr=void 0,this.$sr=void 0}IsPlayerOverlapped(){return 0<this.Xsr}AddOnPlayerOverlapCallback(e,i=!1){this.$sr?.push(e),this.Xsr&&i&&e(!0)}RemoveOnPlayerOverlapCallback(e){void 0===this.$sr||(e=this.$sr.indexOf(e))<0||this.$sr.splice(e,1)}OnCollisionEnterFunc(e){this.Jsr(e)&&(this.Xsr||this.Ysr(!0),this.Xsr++)}OnCollisionExitFunc(e){this.Jsr(e)&&(this.Xsr--,this.Xsr||this.Ysr(!1))}Jsr(e){return e===RoleTriggerController_1.RoleTriggerController.GetMyRoleTrigger()}Vr(e){if(e?.IsValid()){var i=(0,puerts_1.$ref)(void 0),t=(e.GetOverlappingActors(i),(0,puerts_1.$unref)(i));if(0<t?.Num())for(let e=0,i=t.Num();e<i;e++){var s=t.Get(e);this.OnCollisionEnterFunc(s)}e.OnActorBeginOverlap.Add((e,i)=>{this.OnCollisionEnterFunc(i)}),e.OnActorEndOverlap.Add((e,i)=>{this.OnCollisionExitFunc(i)})}}kre(e){e?.IsValid()&&(e.OnActorBeginOverlap.Clear(),e.OnActorEndOverlap.Clear())}Ysr(i){if(this.$sr?.length)for(let e=this.$sr.length-1;0<=e;e--)(0,this.$sr[e])(i)}}exports.ReferenceTriggerVolumeLogic=ReferenceTriggerVolumeLogic;
//# sourceMappingURL=ReferenceTriggerVolumeLogic.js.map