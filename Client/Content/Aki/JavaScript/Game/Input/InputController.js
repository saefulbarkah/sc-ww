
"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.InputController=void 0;const cpp_1=require("cpp"),UE=require("ue"),Info_1=require("../../Core/Common/Info"),Log_1=require("../../Core/Common/Log"),Stats_1=require("../../Core/Common/Stats"),Time_1=require("../../Core/Common/Time"),ControllerBase_1=require("../../Core/Framework/ControllerBase"),EventDefine_1=require("../Common/Event/EventDefine"),EventSystem_1=require("../Common/Event/EventSystem"),Global_1=require("../Global"),GlobalData_1=require("../GlobalData"),CloudGameManager_1=require("../Manager/CloudGameManager"),ModelManager_1=require("../Manager/ModelManager"),AceAntiCheatInputLayer_1=require("../NewWorld/Character/Common/Component/Input/InputLayer/AceAntiCheatInputLayer"),CharacterInputLayer_1=require("../NewWorld/Character/Common/Component/Input/InputLayer/CharacterInputLayer"),FollowShooterInputLayer_1=require("../NewWorld/Character/Common/Component/Input/InputLayer/FollowShooterInputLayer"),ManipulateInputLayer_1=require("../NewWorld/Character/Common/Component/Input/InputLayer/ManipulateInputLayer"),VisionInputLayer_1=require("../NewWorld/Character/Common/Component/Input/InputLayer/VisionInputLayer"),InputManager_1=require("../Ui/Input/InputManager"),InputDistributeController_1=require("../Ui/InputDistribute/InputDistributeController"),InputMappingsDefine_1=require("../Ui/InputDistribute/InputMappingsDefine"),InputEnums_1=require("./InputEnums"),KEY_RELEASED_TIME=-1;class InputController extends ControllerBase_1.ControllerBase{static InitializeEnvironment(){Info_1.Info.UseFastInputCallback&&cpp_1.FKuroInputInterface.InitializeEnvironment(),Info_1.Info.AxisInputOptimize?UE.KismetSystemLibrary.ExecuteConsoleCommand(GlobalData_1.GlobalData.World,"Kuro.Input.AxisOptimize 1"):UE.KismetSystemLibrary.ExecuteConsoleCommand(GlobalData_1.GlobalData.World,"Kuro.Input.AxisOptimize 0")}static get Model(){return ModelManager_1.ModelManager.InputModel}static OnInit(){return this.Ore(),!0}static OnClear(){return this.kre(),!0}static Ore(){EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnCloseLoadingView,this.jJa),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.PlotNetworkStart,this.AMe),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.ForceReleaseInput,this.PMe),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnInputDistributeTagChanged,this.xMe),InputDistributeController_1.InputDistributeController.BindAxes([InputMappingsDefine_1.axisMappings.LookUp,InputMappingsDefine_1.axisMappings.Turn,InputMappingsDefine_1.axisMappings.Zoom],this.wMe),InputDistributeController_1.InputDistributeController.BindAxes([InputMappingsDefine_1.axisMappings.MoveForward,InputMappingsDefine_1.axisMappings.MoveRight],this.BMe),InputDistributeController_1.InputDistributeController.BindActions([InputMappingsDefine_1.actionMappings.大招,InputMappingsDefine_1.actionMappings.幻象1,InputMappingsDefine_1.actionMappings.幻象2,InputMappingsDefine_1.actionMappings.技能1,InputMappingsDefine_1.actionMappings.攀爬,InputMappingsDefine_1.actionMappings.攻击,InputMappingsDefine_1.actionMappings.瞄准,InputMappingsDefine_1.actionMappings.走跑切换,InputMappingsDefine_1.actionMappings.跳跃,InputMappingsDefine_1.actionMappings.通用交互,InputMappingsDefine_1.actionMappings.锁定目标,InputMappingsDefine_1.actionMappings.闪避],this.bMe)}static kre(){EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnCloseLoadingView,this.jJa),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.PlotNetworkStart,this.AMe),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnInputDistributeTagChanged,this.xMe),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.ForceReleaseInput,this.PMe),InputDistributeController_1.InputDistributeController.UnBindAxes([InputMappingsDefine_1.axisMappings.LookUp,InputMappingsDefine_1.axisMappings.Turn,InputMappingsDefine_1.axisMappings.Zoom],this.wMe),InputDistributeController_1.InputDistributeController.UnBindAxes([InputMappingsDefine_1.axisMappings.MoveForward,InputMappingsDefine_1.axisMappings.MoveRight],this.BMe),InputDistributeController_1.InputDistributeController.UnBindActions([InputMappingsDefine_1.actionMappings.大招,InputMappingsDefine_1.actionMappings.幻象1,InputMappingsDefine_1.actionMappings.幻象2,InputMappingsDefine_1.actionMappings.技能1,InputMappingsDefine_1.actionMappings.攀爬,InputMappingsDefine_1.actionMappings.攻击,InputMappingsDefine_1.actionMappings.瞄准,InputMappingsDefine_1.actionMappings.走跑切换,InputMappingsDefine_1.actionMappings.跳跃,InputMappingsDefine_1.actionMappings.通用交互,InputMappingsDefine_1.actionMappings.锁定目标,InputMappingsDefine_1.actionMappings.闪避],this.bMe)}static AddInputHandler(t){this.Model.AddInputHandler(t)}static RemoveInputHandler(t){this.Model.RemoveInputHandler(t)}static InputAction(t,e){if(InputEnums_1.EInputAction.锁定目标!==t||ModelManager_1.ModelManager.FunctionModel.IsOpen(10031)){var n=this.Model.GetPressTimes();switch(e){case 1:var r=Time_1.Time.WorldTimeSeconds;n.set(t,r);for(const u of this.Model.GetHandlers()){var o=u.GetInputFilter();if(o.BlockAction(t))break;o.ListenToAction(t)&&u.HandlePressEvent(t,r)}break;case 2:var i=n.get(t);if(i===KEY_RELEASED_TIME)return;var p=this.qMe(i,Time_1.Time.WorldTimeSeconds);n.set(t,KEY_RELEASED_TIME);for(const s of this.Model.GetHandlers()){var a=s.GetInputFilter();if(a.BlockAction(t))break;a.ListenToAction(t)&&s.HandleReleaseEvent(t,p)}}}}static SetMoveControlEnabled(t,e,n,r){if(this.GMe=t,this.NMe=e,this.OMe=n,this.kMe=r,Info_1.Info.AxisInputOptimize&&(this.Model.NextFrameRefreshAxisValues(),!(t&&e&&n&&r))){var o=this.Model.GetAxisValues(),i=this.Model.GetHandlers();if(!t||!e){o.set(InputEnums_1.EInputAxis.MoveForward,0);for(const p of i)p.ClearSingleAxisInput(InputEnums_1.EInputAxis.MoveForward,!1)}if(!r||!n){o.set(InputEnums_1.EInputAxis.MoveRight,0);for(const a of i)a.ClearSingleAxisInput(InputEnums_1.EInputAxis.MoveRight,!1)}}}static InputAxis(t,e,n=!0){var r=this.Model.GetAxisValues();if(Info_1.Info.AxisInputOptimize){if(n&&this.j$a.add(t),r.get(t)===e)return}else if(0===e&&r.has(t))return;if(ModelManager_1.ModelManager.InputModel.IsOpenInputAxisLog&&3===t&&Log_1.Log.CheckInfo()&&Log_1.Log.Info("Input",10,"[InputLog][InputController]开始接收输入",["axis",t],["value",e]),t===InputEnums_1.EInputAxis.MoveForward){if(!this.GMe&&0<e)return;if(!this.NMe&&e<0)return}if(t===InputEnums_1.EInputAxis.MoveRight){if(!this.kMe&&0<e)return;if(!this.OMe&&e<0)return}r.set(t,e),ModelManager_1.ModelManager.InputModel.IsOpenInputAxisLog&&Log_1.Log.CheckInfo()&&Log_1.Log.Info("Input",10,"[InputLog][InputController]完成接收输入",["axisSet",r])}static PreProcessInput(t,e){if(this.Model)for(const n of this.Model.GetHandlers())n.PreProcessInput(t,e)}static PostProcessInput(t,e){if(this.Model){var n,r,o=this.Model.GetHandlers();InputController.FMe.Start();for([n,r]of this.Model.GetAxisValues())for(const l of o){var i=l.GetInputFilter();if(i.BlockAxis(n)){l.ClearSingleAxisInput(n,!1);break}i.ListenToAxis(n)&&(ModelManager_1.ModelManager.InputModel.IsOpenInputAxisLog&&3===n&&Log_1.Log.CheckInfo()&&Log_1.Log.Info("Input",10,"[InputLog][InputController]开始处理轴输入",["axis",n],["value",r]),l.HandleInputAxis(n,r))}InputController.FMe.Stop();var p,a,u=Time_1.Time.WorldTimeSeconds;InputController.VMe.Start();for([p,a]of this.Model.GetPressTimes()){var s=this.qMe(a,u);if(s!==KEY_RELEASED_TIME)for(const _ of o){var I=_.GetInputFilter();if(I.BlockAction(p))break;I.ListenToAction(p)&&_.HandleHoldEvent(p,s)}}InputController.VMe.Stop(),InputController.HMe.Start();try{for(const f of o)f.PostProcessInput(t,e)}catch(t){t instanceof Error?Log_1.Log.CheckError()&&Log_1.Log.ErrorWithStack("Json",10,"PostProcessInput",t,["msg",t.message]):Log_1.Log.CheckError()&&Log_1.Log.Error("Json",10,"PostProcessInput",["error",t])}finally{InputController.HMe.Stop()}if(Info_1.Info.AxisInputOptimize){for(const E of this.j$a){this.Model.GetAxisValues().has(E)&&this.Model.GetAxisValues().delete(E);for(const C of o)C.ClearSingleAxisInput(E,!0)}this.j$a.clear()}else this.Model.GetAxisValues().clear();ModelManager_1.ModelManager.InputModel.IsOpenInputAxisLog&&Log_1.Log.CheckInfo()&&Log_1.Log.Info("Input",10,"[InputLog][InputController]开始输入处理完成")}}static QueryCommandPriority(t){return this.Model.QueryCommandPriority(t)}static IsKeyDown(t){t=this.Model.GetPressTimes().get(t);return void 0!==t&&t!==KEY_RELEASED_TIME}static GetKeyDownTime(t){t=this.Model.GetPressTimes().get(t);return t&&t!==KEY_RELEASED_TIME?Math.max(0,Time_1.Time.WorldTimeSeconds-t):0}static qMe(t,e){return void 0===t||t===KEY_RELEASED_TIME?KEY_RELEASED_TIME:e-t}static SetForceFeedbackConfig(t,e){UE.BasePlayerController.SetKuroForceFeedbackConfig(t,e)}static AddInputLayer(t,e){e.UnitId=t,this.Model.AddInputLayer(t,e)}static RemoveInputLayer(t){this.Model.RemoveInputLayer(t)}static CreateInputLayer(t){switch(t){case 0:return;case 1:return new CharacterInputLayer_1.CharacterInputLayer;case 2:return new VisionInputLayer_1.VisionInputLayer;case 3:return new FollowShooterInputLayer_1.FollowShooterInputLayer;case 99:return new AceAntiCheatInputLayer_1.AceAntiCheatInputLayer;case 4:return new ManipulateInputLayer_1.ManipulateInputLayer;default:return}}static GetInputLayer(t,e){return this.Model.GetInputLayer(t,e)}static GetInputLayers(t){return this.Model.GetInputLayers(t)}}exports.InputController=InputController,(_a=InputController).HMe=Stats_1.Stat.Create("InputController.PostProcessInput"),InputController.FMe=Stats_1.Stat.Create("InputController.HandleInputAxis"),InputController.VMe=Stats_1.Stat.Create("InputController.HandleHold"),InputController.GMe=!0,InputController.NMe=!0,InputController.OMe=!0,InputController.kMe=!0,InputController.wMe=(t,e,n)=>{var n=n.GetInputAxis(),r=(InputController.InputAxis(n,e,!1),Global_1.Global.CharacterController);r&&0<e&&n!==InputEnums_1.EInputAxis.Zoom&&Info_1.Info.IsInKeyBoard()&&!r.bShowMouseCursor&&InputManager_1.InputManager.MoveCursorToCenter()},InputController.BMe=(t,e,n)=>{n=n.GetInputAxis();InputController.InputAxis(n,e,!1)},InputController.bMe=(t,e,n)=>{e=0===e?1:2,n=n.GetInputAction();InputController.InputAction(n,e)},InputController.AMe=()=>{for(var[t]of InputController.Model.GetPressTimes())InputController.InputAction(t,2)},InputController.jJa=()=>{1!==Info_1.Info.PlatformType&&"IOS"!==CloudGameManager_1.CloudGameManager.CloudGamePlatform&&"Mac"!==CloudGameManager_1.CloudGameManager.CloudGamePlatform||(UE.KuroStaticLibrary.SetInputKeyDeadZone(Global_1.Global.CharacterController,0,new UE.Key(new UE.FName("Gamepad_LeftY")),0),UE.KuroStaticLibrary.SetInputKeyDeadZone(Global_1.Global.CharacterController,0,new UE.Key(new UE.FName("Gamepad_RightX")),0),UE.KuroStaticLibrary.SetInputKeyDeadZone(Global_1.Global.CharacterController,0,new UE.Key(new UE.FName("Gamepad_RightY")),0),UE.KuroStaticLibrary.SetInputKeyDeadZone(Global_1.Global.CharacterController,0,new UE.Key(new UE.FName("Gamepad_LeftX")),0))},InputController.PMe=t=>{t&&Log_1.Log.CheckInfo()&&Log_1.Log.Info("Input",7,"强制释放所有按键",["Reason",t]);for(var[e]of InputController.Model.GetPressTimes())InputController.InputAction(e,2)},InputController.xMe=t=>{var e,n=ModelManager_1.ModelManager.InputDistributeModel;for([e]of InputController.Model.GetPressTimes()){var r=n.GetActionInputDistributeTagName(InputEnums_1.EInputAction[e]);!r||n.IsTagMatchAnyCurrentInputTag(r)||InputController.InputAction(e,2)}_a.Model.NextFrameRefreshAxisValues()},InputController.j$a=new Set;
//# sourceMappingURL=InputController.js.map