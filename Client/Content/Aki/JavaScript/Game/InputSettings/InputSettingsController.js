
"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.InputSettingsController=void 0;const Info_1=require("../../Core/Common/Info"),Log_1=require("../../Core/Common/Log"),Protocol_1=require("../../Core/Define/Net/Protocol"),ControllerBase_1=require("../../Core/Framework/ControllerBase"),Net_1=require("../../Core/Net/Net"),Platform_1=require("../../Launcher/Platform/Platform"),EventDefine_1=require("../Common/Event/EventDefine"),EventSystem_1=require("../Common/Event/EventSystem"),GameSettingsUtils_1=require("../GameSettings/GameSettingsUtils"),ConfigManager_1=require("../Manager/ConfigManager"),ControllerHolder_1=require("../Manager/ControllerHolder"),ModelManager_1=require("../Manager/ModelManager"),InputSettingsManager_1=require("./InputSettingsManager");class InputSettingsController extends ControllerBase_1.ControllerBase{static OnInit(){return Net_1.Net.Register(29179,InputSettingsController.sih),EventSystem_1.EventSystem.Add(EventDefine_1.EEventName.OnGetPlayerBasicInfo,this.Wvi),!0}static OnClear(){return Net_1.Net.UnRegister(29179),EventSystem_1.EventSystem.Remove(EventDefine_1.EEventName.OnGetPlayerBasicInfo,this.Wvi),!0}static _hh(){ModelManager_1.ModelManager.SkillButtonUiModel.GamepadData?.AddChangeKeyReason(1),ModelManager_1.ModelManager.LoginModel.IsNewAccount?(Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"新号没有输入数据，还原至配置表配置"),InputSettingsManager_1.InputSettingsManager.ResetDefaultInputKey()):Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"老号没有输入数据，默认本地存储按键"),ModelManager_1.ModelManager.SkillButtonUiModel.GamepadData?.RemoveChangeKeyReason(1)}static InputSettingRequest(){var t=new Protocol_1.Aki.Protocol.Cvl;Net_1.Net.Call(29590,Protocol_1.Aki.Protocol.Cvl.create(t),this.aih)}static InputSettingUpdateRequest(t){var e=new Protocol_1.Aki.Protocol.fvl;e.hih=this.Ftl(t),Net_1.Net.Call(23137,Protocol_1.Aki.Protocol.fvl.create(e),this.lih)}static RefreshInputSettingsFromProtoData(n){if(!n||!n._ih||n._ih.length<=0)Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"[RefreshInputSettingsFromProtoData]服务端没有数据，使用本地配置"),this._hh(),GameSettingsUtils_1.GameSettingsUtils.RefreshViewRevertState(Info_1.Info.InputControllerMainType);else{ModelManager_1.ModelManager.SkillButtonUiModel.GamepadData?.AddChangeKeyReason(1);let t="";let e=!1;for(const a of n._ih){var o=a.uih;o===Protocol_1.Aki.Protocol.qTl.Proto_Mouse&&(t=InputSettingsManager_1.InputSettingsManager.DeviceLang,InputSettingsManager_1.InputSettingsManager.DeviceLang=a.Tih),e=(e=(e=e||this.cih(a.bIl,o))||this.mih(a.PIl,o))||this.dih(a.xIl,o)}Platform_1.Platform.IsPcPlatform()&&InputSettingsManager_1.InputSettingsManager.ChangeActionAndAxisPcKeys(t),ModelManager_1.ModelManager.SkillButtonUiModel.GamepadData?.RemoveChangeKeyReason(1),e?this.InputSettingUpdateRequest(!1):GameSettingsUtils_1.GameSettingsUtils.RefreshViewRevertState(Info_1.Info.InputControllerMainType)}}static mih(t,e){if(!t)return Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，没有输入数据，还原至默认输入按键",["actionData",t]),InputSettingsManager_1.InputSettingsManager.RefreshAllActionKeys(!0),!1;var n=Object.keys(t),o=ConfigManager_1.ConfigManager.InputSettingsConfig;let a=!1;for(const m of n){var r=InputSettingsManager_1.InputSettingsManager.GetActionBinding(m);if(r){var i=t[m];if(i){var g=i.K7n;switch(e){case Protocol_1.Aki.Protocol.qTl.Proto_Mouse:var _=r.GetKeyboardVersion();if(a=a||g<_,g<_){_=o?.GetActionMappingConfigByActionName(m);if(!_)continue;let t=[];t=InputSettingsManager_1.InputSettingsManager.CheckUseFrenchKeyboard?_.FrancePcKeys:_.PcKeys,r.SetKeyboardKeys(t);_=InputSettingsManager_1.InputSettingsManager.GetCombinationActionBindingByActionName(m);if(_){var s,u,p=new Map;_.GetPcKeyNameMap(p);for([s,u]of p)InputSettingsManager_1.InputSettingsManager.RemoveCombinationActionKeyMap(m,s,u)}Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，键鼠配置版本号大于服务端版本号，键鼠使用默认配置",["actionName",m],["keyNameList",t])}else{_=i.Cih;r.SetKeyboardKeys(_),r.SetKeyboardVersion(g),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，更新键鼠输入按键",["actionName",m],["keyNameList",_])}break;case Protocol_1.Aki.Protocol.qTl.uVn:p=r.GetGamepadVersion();if(a=a||g<p,g<p){_=o?.GetActionMappingConfigByActionName(m);if(!_)continue;var c=_.GamepadKeys,l=(r.SetGamepadKeys(c),InputSettingsManager_1.InputSettingsManager.GetCombinationActionBindingByActionName(m));if(l){var S,f,I=new Map;l.GetGamepadKeyNameMap(I);for([S,f]of I)InputSettingsManager_1.InputSettingsManager.RemoveCombinationActionKeyMap(m,S,f)}Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，手柄配置版本号大于服务端手柄版本号，手柄使用默认配置",["actionName",m],["keyNameList",c])}else{l=i.Cih;if(r.SetGamepadKeys(l),r.SetGamepadVersion(g),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，更新手柄输入按键",["actionName",m],["keyNameList",l]),0<l.length&&"Gamepad_Invalid"!==l[0]){Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"Proto_InputSettingData服务器发现有单键配置,尝试删除本地组合键配置",["actionName",m],["keyNameList",l]);I=InputSettingsManager_1.InputSettingsManager.GetCombinationActionBindingByActionName(m);if(I){var M,v,c=new Map;I.GetGamepadKeyNameMap(c);for([M,v]of c)InputSettingsManager_1.InputSettingsManager.RemoveCombinationActionKeyMap(m,M,v)}}}}}}}return a}static dih(t,e){if(!t)return Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，没有输入数据，还原至默认输入按键",["axisMap",t]),InputSettingsManager_1.InputSettingsManager.RefreshAllAxisKeys(!0),!1;var n=Object.keys(t),o=ConfigManager_1.ConfigManager.InputSettingsConfig;let a=!1;for(const I of n){var r=InputSettingsManager_1.InputSettingsManager.GetAxisBinding(I);if(r){var i=t[I];if(i){var g=i.K7n;switch(e){case Protocol_1.Aki.Protocol.qTl.Proto_Mouse:var _=r.GetKeyboardVersion();if(a=a||g<_,g<_){_=o?.GetAxisMappingConfigByAxisName(I);if(!_)continue;let t=new Map;t=InputSettingsManager_1.InputSettingsManager.CheckUseFrenchKeyboard?_.FrancePcKeys:_.PcKeys,r.SetKeyboardKeys(t),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Axis输入时，键鼠配置版本号大于服务端版本号，键鼠使用默认配置",["axisName",I],["keyboardKeyScaleMap",t])}else{var s=new Map,u=i.AIl;for(const M of Object.keys(u)){var p=u[M];s.set(M,p/1e3)}r.SetKeyboardKeys(s),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Axis输入时，更新键鼠输入按键",["actionName",I],["keyScaleMap",s])}break;case Protocol_1.Aki.Protocol.qTl.uVn:_=r.GetGamepadVersion();if(a=a||g<_,g<_){var c=o?.GetAxisMappingConfigByAxisName(I);if(!c)continue;c=c.GamepadKeys;r.SetGamepadKeys(c),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Axis输入时，手柄配置版本号大于服务端版本号，手柄使用默认配置",["axisName",I],["gamepadKeyScaleMap",c])}else{var l=new Map,S=i.AIl;for(const v of Object.keys(S)){var f=S[v];l.set(v,f/1e3)}r.SetGamepadKeys(l),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Axis输入时，更新手柄输入按键",["actionName",I],["gamepadKeyScaleMap",l])}}}}}return a}static cih(t,e){if(!t)return Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，没有输入数据，还原至默认输入按键",["actionData",t]),InputSettingsManager_1.InputSettingsManager.RefreshCombinationActionKeys(!0),!1;var n=Object.keys(t),o=ConfigManager_1.ConfigManager.InputSettingsConfig;let a=!1;for(const c of n){var r=InputSettingsManager_1.InputSettingsManager.TryGetCombinationActionBinding(c);if(r){var i=t[c];if(i){var g=i.K7n;switch(e){case Protocol_1.Aki.Protocol.qTl.Proto_Mouse:var _=r.GetKeyboardVersion();if(a=a||g<_,g<_){_=o?.GetCombinationActionConfigByActionName(c);if(!_)continue;_=_.PcKeys;InputSettingsManager_1.InputSettingsManager.SetCombinationActionKeyboardKeys(c,_),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新CombinationAction输入时，键鼠配置版本号大于服务端版本号，键鼠使用默认配置",["actionName",c],["keyboardKeys",_])}else{var s=new Map;for(const l of i.UIl)s.set(l.Cih[0],l.Cih[1]);InputSettingsManager_1.InputSettingsManager.SetCombinationActionKeyboardKeys(c,s),r.SetKeyboardVersion(g),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，更新键鼠输入按键",["actionName",c],["keyNameMap",s])}break;case Protocol_1.Aki.Protocol.qTl.uVn:_=r.GetGamepadVersion();if(a=a||g<_,g<_){var u=o?.GetCombinationActionConfigByActionName(c);if(!u)continue;u=u.GamepadKeys;InputSettingsManager_1.InputSettingsManager.SetCombinationActionGamepadKeys(c,u),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，手柄配置版本号大于服务端手柄版本号，手柄使用默认配置",["actionName",c],["gamepadKeys",u])}else{var p=new Map;for(const S of i.UIl)p.set(S.Cih[0],S.Cih[1]);InputSettingsManager_1.InputSettingsManager.SetCombinationActionGamepadKeys(c,p),r.SetGamepadVersion(g),Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"从Proto_InputSettingData刷新Action输入时，更新手柄输入按键",["actionName",c],["keyNameMap",p])}}}}}return a}static Ftl(t){var e,n,o,a,r,i,g,_,s=new Protocol_1.Aki.Protocol.hih,u=new Protocol_1.Aki.Protocol.GTl,p=new Protocol_1.Aki.Protocol.GTl,c=(u.uih=Protocol_1.Aki.Protocol.qTl.Proto_Mouse,u.Tih=InputSettingsManager_1.InputSettingsManager.DeviceLang,p.uih=Protocol_1.Aki.Protocol.qTl.uVn,InputSettingsManager_1.InputSettingsManager.GetActionBindingMap());for([e,n]of c){var l=[],S=t?0:n.GetKeyboardVersion(),l=(n.GetPcKeyNameList(l),this.gih(e,u,l,S),[]),S=t?0:n.GetGamepadVersion();n.GetGamepadKeyNameList(l),this.gih(e,p,l,S)}for([o,a]of InputSettingsManager_1.InputSettingsManager.GetAxisBindingMap()){var f=new Map,I=t?0:a.GetKeyboardVersion(),f=(a.GetPcKeyScaleMap(f),this.fih(o,u,f,I),new Map),I=t?0:a.GetGamepadVersion();a.GetGamepadKeyScaleMap(f),this.fih(o,p,f,I)}for([r,i]of InputSettingsManager_1.InputSettingsManager.GetCombinationActionBindingMap()){var M=new Map,v=t?0:i.GetKeyboardVersion(),M=(i.GetPcKeyNameMap(M),this.pih(r,u,M,v),new Map),v=t?0:i.GetGamepadVersion();i.GetGamepadKeyNameMap(M),this.pih(r,p,M,v)}for([g,_]of InputSettingsManager_1.InputSettingsManager.GetCombinationAxisBindingMap()){var m=new Map,L=t?0:_.GetKeyboardVersion(),m=(_.GetPcKeyNameMap(m),this.vih(g,u,m,L),new Map),L=t?0:_.GetGamepadVersion();_.GetGamepadKeyNameMap(m),this.vih(g,p,m,L)}return s._ih=[u,p],s}static gih(t,e,n,o){var a=new Protocol_1.Aki.Protocol.BTl;a.Mih=t,a.K7n=o,a.Cih=n,e.PIl[t]=a}static fih(t,e,n,o){var a,r,i=new Protocol_1.Aki.Protocol.kTl;i.Sih=t,i.K7n=o;for([a,r]of n){var g=Math.round(1e3*r);i.AIl[a]=g}e.xIl[t]=i}static pih(t,e,n,o){var a,r,i=new Protocol_1.Aki.Protocol.bIl;i.Mih=t,i.K7n=o;for([a,r]of n){var g=new Protocol_1.Aki.Protocol.bTl;g.Cih=[a,r],i.UIl.push(g)}e.bIl[t]=i}static vih(t,e,n,o){var a,r,i=new Protocol_1.Aki.Protocol.BIl;i.Sih=t,i.K7n=o;for([a,r]of n){var g=new Protocol_1.Aki.Protocol.bTl;g.Cih=[a,r],i.UIl.push(g)}e.BIl[t]=i}}exports.InputSettingsController=InputSettingsController,(_a=InputSettingsController).Wvi=()=>{Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"登录直接请求服务端输入数据"),_a.InputSettingRequest()},InputSettingsController.sih=t=>{Log_1.Log.CheckDebug()&&Log_1.Log.Debug("InputSettings",10,"服务端通知更新按键信息"),_a.RefreshInputSettingsFromProtoData(t.hih),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnInputSettingUpdateNotify)},InputSettingsController.aih=t=>{!t||!t.hih||t.hih._ih.length<=0?(Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"服务端没有数据，使用本地配置并同步给服务端"),_a._hh(),Platform_1.Platform.IsMobilePlatform()||_a.InputSettingUpdateRequest(!ModelManager_1.ModelManager.LoginModel.IsNewAccount)):(Log_1.Log.CheckInfo()&&Log_1.Log.Info("InputSettings",10,"服务端有对应数据,使用服务端数据刷新本地输入数据"),_a.RefreshInputSettingsFromProtoData(t?.hih),EventSystem_1.EventSystem.Emit(EventDefine_1.EEventName.OnInputSettingResponse))},InputSettingsController.lih=t=>{t&&t.Q4n!==Protocol_1.Aki.Protocol.Q4n.KRs&&ControllerHolder_1.ControllerHolder.ErrorCodeController.OpenErrorCodeTipView(t.Q4n,19371)};
//# sourceMappingURL=InputSettingsController.js.map